[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "contribute.html",
    "href": "contribute.html",
    "title": "Contributions & Corrections",
    "section": "",
    "text": "Contributions including error corrections and updates are welcomed, and may be made through the GitHub repository containing the source code for this site.\nPlease see below, and review the Style Guide.\nIf you believe you have found an error, please open an issue here."
  },
  {
    "objectID": "contribute.html#editing-this-website",
    "href": "contribute.html#editing-this-website",
    "title": "Contributions & Corrections",
    "section": "Editing this website",
    "text": "Editing this website\nThe content for this website is stored on GitHub. Anyone with a free GitHub account may suggest changes to the website by editing a page via GitHub’s website and creating a pull request.\nIf you wish to edit locally on your computer, you may wish to use the RStudio IDE, which natively supports Quarto. Quarto is the engine used to generate this website from Quarto-flavored Markdown files. More information is found in the README file."
  },
  {
    "objectID": "contribute.html#customizing-this-website",
    "href": "contribute.html#customizing-this-website",
    "title": "Contributions & Corrections",
    "section": "Customizing this website",
    "text": "Customizing this website\nThis website is made available under an open source license, and can be modified for your own purposes as long as the terms of the license are followed.\nYou can customize this website by forking the repository on GitHub. This will create a linked copy of the existing website under your own GitHub account. You can then modify the content, and (optionally) contribute your changes back to the parent repository via a pull request. Enhancements or corrections to the content of this website are welcomed!\nThe modules on this website are intended to be relatively stand-alone, allowing them to be extracted for topic-specific training or other purposes."
  },
  {
    "objectID": "fhir-versions.html",
    "href": "fhir-versions.html",
    "title": "FHIR Versions",
    "section": "",
    "text": "The FHIR specification is under active development. The latest version, R5, was officially published in March 2023. Major updates to the FHIR specification are typically published every few years, and minor updates are published more frequently.\nMajor updates to FHIR can have breaking changes, but typically these changes only occur in areas of the specification that are not fully mature. FHIR uses a maturity model that describes “the level of stability and implementation readiness associated with different aspects of the specification.”\nFor example, the Patient resource was assigned a “normative” maturity level in the R4 release of FHIR. This means that starting in the R4 release, the content of the Patient resource\nOther resources, like NutritionProduct have a much lower maturity level even in the R5 release. These resources are likely to experience more significant changes – including breaking changes – in subsequent releases of FHIR."
  },
  {
    "objectID": "fhir-versions.html#implications-for-this-website",
    "href": "fhir-versions.html#implications-for-this-website",
    "title": "FHIR Versions",
    "section": "Implications for this website",
    "text": "Implications for this website\nReferences to resources and examples on this website typically use the Patient or Observation. Like Patient, Observation was “normative” as of FHIR R4, so the release of FHIR R5 and future versions is unlikely to affect these examples.\nTo ensure consistency between content in this website and links to the FHIR specification (or FHIR Implementation Guides), we link to version-specific pages whenever quoting from a specification or referencing material that might change in a future version. For example, we would link to the version-independent URL when generally referencing the Patient resource (https://www.hl7.org/fhir/patient.html), but would link to the R4 URL when stating that Patient achieved “normative” maturity in R4 ((https://www.hl7.org/fhir/R4/patient.html)). More details are in the Style Guide.\nDue to these mitigation approaches, the content on this website should be relatively unaffected by new releases of the FHIR specification. However, if updates do need to be made, anyone is welcome to contribute."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Overview\nAn introduction to FHIR for research, and details on two additional areas of general interest for researchers: SMART on FHIR and its research applications, and data modeling in FHIR.\n\nLearn more »\n\n\n\nWorking with FHIR Data\nApproaches to gathering and analyzing FHIR-formatted data for research purposes.\n\nLearn more »\n\n\n\nAdvanced Topics\nResources for technical leaders who are conducting their own trainings, or researchers who are interested in a deeper dive.\n\nLearn more »"
  },
  {
    "objectID": "modules/cdms.html",
    "href": "modules/cdms.html",
    "title": "Common Data Models",
    "section": "",
    "text": "Learning objectives\n\n\n\n\n\n    Understand the purpose of a CDM for research.\n\n\n    Describe the differences between CDMs and FHIR.\n\n\n    Describe how FHIR can be used alongside CDMs.\n\n\n    Identify some notable research CDMs used in the US.\nA Common Data Model (CDM) is a set of standardized data schemas that are used across organizations. CDMs can facilitate research by making it possible to write a single data query that will run across organizations using the same CDM. Without a CDM, a researcher would need to create a different query for each organization.\nOrganizations that use CDMs can form a health data network to facilitate data access by network members. For more information on how health data networks are structured, see Weeks and Pardee (n.d.)."
  },
  {
    "objectID": "modules/cdms.html#cdms-and-fhir",
    "href": "modules/cdms.html#cdms-and-fhir",
    "title": "Common Data Models",
    "section": "1 CDMs and FHIR",
    "text": "1 CDMs and FHIR\nCDMs and FHIR are both important parts of the health research data ecosystem, but differ in key ways:\n\nPurpose and scope\n\nCDMs: Provide a consistent structure for storing and querying health data to faciliate research.\nFHIR: Enable interoperability between health IT systems (which can included research-related systems).\n\n\n\nStructure\n\nCDMs: Typically, CDMs consist of a standardized set of relational database tables, with columns for each data element. CDMs also typically define standardized terminology for representing concepts.\nFHIR: FHIR defines resources for each type of data, which can be extended to add additional data elements as needed for a given use case. Resources have a nested structure (like a multi-level outline) rather than a tabular structure (like a spreadsheet). The base FHIR specification does have strict terminology constraints, though these can be added for a specific use case in an Implementation Guide.\n\n\n\nImplementation\n\nCDMs: Typically implemented as a database within a research data warehouse. When CDMs are used as part of a research data network, additional mechanisms may be implemented for sharing data across the network (Weeks and Pardee, n.d.).\nFHIR: Typically implemented as an API within a health IT system like an EHR, though research-specific databases may also implement FHIR (e.g., Kids First).\n\nBecause of these differences, FHIR does not obviate existing CDMs and health data networks. However, FHIR can be used in conjunction with CDMs. For example:\n\nPopulating a CDM: FHIR can be used as part of the process for populating a CDM. Typically, data are extracted from EHRs and other clinical or billing systems, transformed into the CDM’s format, and then loaded into the CDM database. (Note that this type of process is generally referred to as ETL for Extract, Transform, Load.) FHIR can be used as the input into an ETL process, which may allow for ETL logic that is more portable across institutions and EHR installations.\nMapping between CDMs: The Common Data Models Harmonization IG uses FHIR to map and translate between PCORNet, i2b2, OMOP, and Sentinel (all described below).\nPortable phenotypes: FHIR and Clinical Quality Language (CQL) were used by Brandt et al. (2022) to create phenotypes for cohort definitions. These were translated to run against the OMOP CDM. Theoretically, institutions that do not have OMOP research databases could use FHIR and CQL directly to identify cases and non-cases."
  },
  {
    "objectID": "modules/cdms.html#notable-cdms",
    "href": "modules/cdms.html#notable-cdms",
    "title": "Common Data Models",
    "section": "2 Notable CDMs",
    "text": "2 Notable CDMs\nIf you are not familiar with CMS, below are some notable CDMs used in the US:\n\nOMOP (Observational Medical Outcomes Partnership)\nSentinel\nPCORnet (Patient-Centered Outcomes Researcher Network)\ni2b2 (Informatics for Integrating Biology & the Bedside)\n\n\n2.1 OMOP\nOMOP was originally created in 2007 by the FDA and other partners to study the effects of medical products.(Weeks and Pardee, n.d.) It is now managed by the OHDSI (Observational Health Data Science and Informatics).\nOMOP is an:\n\nopen community data standard, designed to standardize the structure and content of observational data and to enable efficient analyses that can produce reliable evidence.\n\n\n\n\ncaption\n\n\nOMOP uses OHDSI standardized vocabularies. The OHDSI standardized vocabularies establish a single standard concept for each clinical entity. When data is converted into OMOP, the source concept is mapped to the corresponding standard concept. This allows researchers to interpret and use clinical entities from different organizations.(OHDSI, n.d.)\n\n\n2.2 Sentinel\nSentinel is a CDM designed to monitor whether FDA-regulated medical products cause unexpected adverse reactions.\nAlthough FDA-regulated products undergo clinical testing before approval, the testing may miss adverse reactions. This is because the test population may not fully represnt the population that uses the product. To detect and assess adverse events after approval, the FDA created Sentinel in 2007. See here for more information about the Sentinel data network.\n\n\n\nDiagram showing the structure of the Sentinel CDM. From &lt;https://www.sentinelinitiative.org/methods-data-tools/sentinel-common-data-model&gt;.\n\n\n\n\n2.3 PCORnet\nThe Patient-Centered Outcomes Research Institute (PCORI) developed PCORnet to make clinical research more streamlined, representative, and efficient. PCORnet data is largely drawn from EHRs, as well as some patient-reported and payor data. The PCORnet includes data from 66 million patients that researchers can use for observational studies. PCORnet launched in 2014 (Fleurence et al. 2014).\n\n\n\nDiagram showing the structure of the PCORnet CDM v6.1. From “PCORnet Common Data Model (CDM) Specification, Version 6.1” (2023).\n\n\n\n\n2.4 i2b2\nDeveloped in 2004 by Partners HealthCare and Harvard Medical School, i2b2 is an open-source research data application framework that “provides clinical and translational investigators with the tools necessary to integrate medical record and clinical research in the genomics age.” (n.d.a)\ni2b2 is structured differently from the other CDMs discussed here: rather than having separate data tables for each type of data (e.g., procedures and diagnoses are stored in different database tables, each with a different set of columns), i2b2 uses the same set of tables for all data types. i2b2 refers to this as the “star schema” (see diagram below). i2b2 describes this as follows:\n\nInstead of separate tables for diagnoses, medications, and other data types, all patient observations are stored in a single “fact” table. A separate ontology describes the different codes that are placed in this fact table. As a result, institutions can use their own local codes, without having to map to common code sets. Furthermore, institutions can easily add new types of data to i2b2 and tranSMART just by extending the ontology. No changes to the database or software are needed. This enables software developers to build query, analysis, and visualization tools that are generalizable to different types of data and future-proof since the i2b2 CDM can remain stable over time.\n\n\n\n\nDiagram showing the i2b2 “star schema”, from  (n.d.b)."
  },
  {
    "objectID": "modules/data-modeling-reading-igs.html",
    "href": "modules/data-modeling-reading-igs.html",
    "title": "Reading FHIR Implementation Guides",
    "section": "",
    "text": "Learning objectives\n\n\n\n\n\n    Understand the purpose and structure of FHIR Implementation Guides (IGs).\n\n\n    Apply the approach described in “Reading an IG” to reading and evaluating IGs for research purposes.\nFHIR Implementation Guides (IGs) define a “set of rules of how a particular interoperability or standards problem is solved.”\nIGs are published as web pages (like the ones listed here) that include both human-readable and machine-readable versions of the rules. For example, the human-readable version of US Core’s Patient profile and the machine-readable version are published alongside each other in the US Core IG. Additionally, IGs typically include substantial narrative content describing the problem they are addressing and providing additional context for their rules.\nResearchers who are working with FHIR will likely need to read FHIR IGs, including those that are not specifically designed for research purposes (like US Core).\nFHIR IGs typically share a common structure and format (especially those published through HL7). The CodeX FHIR Accelerator has published a set of comprehensive resources on IG authoring that includes a detailed explanation of how to read and understand these common elements across IGs. Please use the button below to open this resource in a new window:\nOpen FSH Seminar &gt; Reading an IG materials →"
  },
  {
    "objectID": "modules/data-modeling-reading-igs.html#evaluating-an-ig-for-research",
    "href": "modules/data-modeling-reading-igs.html#evaluating-an-ig-for-research",
    "title": "Reading FHIR Implementation Guides",
    "section": "Evaluating an IG for research",
    "text": "Evaluating an IG for research\nThe approach described in the materials FSH Seminar materials linked above can be applied to reviewing an IG for research purposes. Some of the key considerations specifically for research include:\n\nAre all the necessary data elements included in the resources profiled in the IG? Determining\nAre the constraints defined in the IG appropriate for the relevant research use cases?\n\nAre necessary data elements marked as required or marked as MustSupport? This means that conforming FHIR servers should provide the data elements if they are available.\nAre there any required data elements that are problematic from a research perspective? (E.g., requiring a patient’s name for research on deidentified data.)\n\nAre there terminology bindings, and are they sufficiently strong to ensure consistent output?\n\nNote that unless a terminology binding is set at the “required” level, FHIR servers may still return concepts that are not in the bound ValueSet.\nThis is especially relevant for using FHIR across different systems or institutions, which may use different terminology. It may be necessary to map to a single set of concepts, either as part of the FHIR implementation or during data analysis.\n\nIs the IG implemented on the relevant FHIR servers you wish to get data from? If not, how much effort would be required to implement it?1\n\nIn the US, many IGs are based on US Core. Because many FHIR-enabled systems already support US Core, it may be easier to implement IGs that are based on it compared to IGs that are not.2"
  },
  {
    "objectID": "modules/data-modeling-reading-igs.html#next-steps",
    "href": "modules/data-modeling-reading-igs.html#next-steps",
    "title": "Reading FHIR Implementation Guides",
    "section": "Next steps",
    "text": "Next steps\nResearchers using FHIR may wish to extend an existing IG, or create their own from scratch to define how FHIR should be used for their use case. Please see Writing IGs for more information."
  },
  {
    "objectID": "modules/data-modeling-reading-igs.html#footnotes",
    "href": "modules/data-modeling-reading-igs.html#footnotes",
    "title": "Reading FHIR Implementation Guides",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nOne approach to assessing this is to access instances of FHIR resources profiled in the IG from the FHIR server, and then compare them to the IG to see how close they are to the desired output.\nConformance to an IG can be assessed automatically using a tool like the FHIR validator, or the output of the FHIR server can be manually compared against the profiles in the IG.↩︎\nIGs that are published through HL7 in the US Realm are typically required to either be based on US Core, or get an explicit exemption (which should be described in the IG).↩︎"
  },
  {
    "objectID": "modules/data-modeling-real-world-igs.html",
    "href": "modules/data-modeling-real-world-igs.html",
    "title": "Real World Implementation Guides",
    "section": "",
    "text": "Learning objectives\n\n\n\n\n\n    Review existing FHIR IGs that may be relevant to researchers.\n\n\n\n\n\n\n\n\n\n\n\nRelevant roles:\n\n\n\n\n    Investigator\n    Informaticist\n    Software Engineer\n    Clinician Scientist/Trainee\n\n\n\n\n\n\n\n\nFHIR Implementation Guides (IGs) provide a mechanism for use-case specific customization of the FHIR specification.\n\n\n\n\n\n\nPlease see the “Customizing FHIR” section in FHIR from 1,000 Feet for a high-level overview of FHIR IGs and profiling. Reading IGs provides additional details.\n\n\n\nExamples of FHIR IGs that may be of interest to researchers are listed below. This is not meant to be an exhaustive list, but rather to demonstrate the scope of the IGs that have been published and identify some of the key IGs (identified with ⭐️) to be aware of in the FHIR ecosystem. A full list of IGs published through HL7 is available here, and additional IGs may be published outside of HL7.\n\nAdverse Events for Clinical Research, which provides an approach for representing adverse events in clinical research with FHIR. (Note that as of April 2023, this IG has not gone through the FHIR balloting process yet. The provided link is to the “live build” of the IG.)\nBulk Data⭐️, which provides a mechanism for extracting population-scale data from FHIR servers. See here for more information.\nCommon Data Models Harmonization, which focuses “on mapping and translating observational data extracted for Patient Centered Outcome Research (PCOR) and other purposes into FHIR format” and supports PCORNet, i2b2, i2b2, and Sentinel data models.\nElectronic Case Reporting, which supports public health electronic case reporting.\nGA4GH Phenopackets, which “intends to support global exchange of computable case-level phenotypic information for all types of disease diagnosis and research.” (Note that this is an example of an IG published outside of HL7.)\nGenomics Reporting, which provides FHIR versions of common data structures involving genomics data like genotypes and variants.\nInternational Patient Summary, which “is designed for supporting the use case scenario for ‘unplanned, cross border care’, but it is not limited to it. It is intended to be international, i.e., to provide generic solutions for global application beyond a particular region or country.”\nmCODE, which provides “a core set of structured data elements for oncology electronic health records (EHRs).”\nQuality Improvement Core, which supports interoperable clinical quality measures and clinical decision support.\nRetrieval of Real World Data for Clinical Research, which supports the use of real world data for research purposes. (Note this link is to a a “live build” of the IG; as of April 2023 this IG has been balloted but not published through HL7. Once published, the IG will be accessible at https://hl7.org/fhir/uv/vulcan-rwd.)\nSituational Awareness for Novel Epidemic Response, which “enables transmission of high level situational awareness information from inpatient facilities to centralized data repositories to support the treatment of novel influenza-like illness.”\nUS Core⭐️, which is the FHIR IG that implements USCDI (more information here). This IG is highly relevant for researchers in the US because EHRs typically implement US Core as part of their FHIR implementations. Conversely, data elements that are not covered by US Core may not be consistently implemented in US EHR FHIR implementations.\n\nMany US-centric IGs use US Core as a starting point, so you may encounter US Core profiles when viewing other IGs. If you author a FHIR IG for US implementation, it may be beneficial to also follow this approach."
  },
  {
    "objectID": "modules/data-modeling-writing-igs.html",
    "href": "modules/data-modeling-writing-igs.html",
    "title": "Writing FHIR Implementation Guides",
    "section": "",
    "text": "Learning objectives\n\n\n\n\n\n    Understand the mechanics of creating a FHIR Implementation Guide (IG) for a research use case.\n\n\n    Describe best practices for authoring a FHIR IG.\n\n\n    Apply these best practices in creating FHIR IGs for specific research use cases.\nThis module is meant for readers who are interested in creating their own FHIR Implementation Guides (IGs), and should be read after completing the Reading IGs module."
  },
  {
    "objectID": "modules/data-modeling-writing-igs.html#when-should-you-create-a-fhir-ig",
    "href": "modules/data-modeling-writing-igs.html#when-should-you-create-a-fhir-ig",
    "title": "Writing FHIR Implementation Guides",
    "section": "1 When should you create a FHIR IG?",
    "text": "1 When should you create a FHIR IG?\nFHIR IGs describe how FHIR should be used for a specific use case. When using FHIR for research, if there is not an existing IG that covers your use case, it may be worthwhile to create one. Creating an IG can:\n\nSpecify how your data needs are mapped onto FHIR resources and data elements.\nIdentify which data elements are required, and how missing data should be handled for required and optional elements.\nDefine formatting for data elements (e.g., ensuring all dates/times are in the same format and have the desired level of precision).\nEstablish terminology bindings to specific ValueSets for coded values to prevent representing the same concept with different codes."
  },
  {
    "objectID": "modules/data-modeling-writing-igs.html#who-should-create-a-fhir-ig",
    "href": "modules/data-modeling-writing-igs.html#who-should-create-a-fhir-ig",
    "title": "Writing FHIR Implementation Guides",
    "section": "2 Who should create a FHIR IG?",
    "text": "2 Who should create a FHIR IG?\nFHIR IGs can be created by anyone with an understanding of FHIR and a toolchain for generating the IG. Typically the person in this role is an informaticist, or has substantial informatics experience. If you do not have someone with these skills on your project, you may be able to find someone via the FHIR community.\nFor research use cases, the Principal Investigator and relevant clinical experts should collaborate closely with the informaticists creating the IG to make sure it reflects the needs of the research study and is clinically sound. Additionally, informatics experts who understand the systems that will need to support the IG should also be involved in its authoring to ensure implementation is realistic."
  },
  {
    "objectID": "modules/data-modeling-writing-igs.html#should-igs-be-created-through-hl7",
    "href": "modules/data-modeling-writing-igs.html#should-igs-be-created-through-hl7",
    "title": "Writing FHIR Implementation Guides",
    "section": "3 Should IGs be created through HL7?",
    "text": "3 Should IGs be created through HL7?\nMany of the IGs listed in Real World IGs are created and published through the HL7 process. This is process is helpful for IGs that may be widely implemented or need to be updated on an ongoing basis to support implementation. It may not be necessary to create or publish an IG through HL7 if it is meant to be used for a limited time to support a specific study. IGs can also be moved under HL7 after they are created, though it is typically better to do this as early as possible to avoid any intellectual property issues. Researchers interested in the HL7 process can consult with the relevant HL7 Work Group."
  },
  {
    "objectID": "modules/data-modeling-writing-igs.html#how-is-an-ig-created",
    "href": "modules/data-modeling-writing-igs.html#how-is-an-ig-created",
    "title": "Writing FHIR Implementation Guides",
    "section": "4 How is an IG created?",
    "text": "4 How is an IG created?\nThe CodeX FHIR Accelerator has published a set of comprehensive resources on IG authoring that includes a detailed explanation of how to author FHIR IGs. If you are interested in creating a FHIR IG, please use the button below to open this resource in a new window:\nOpen FSH Seminar &gt; Creating an IG materials →\nAdditionally, these resources include a hands-on exercise for creating a FHIR IG, and a deep dive on the FSH language used for FHIR profiling. Both are strongly recommended informaticists who wish to author FHIR IG."
  },
  {
    "objectID": "modules/fhir-accessing-data.html",
    "href": "modules/fhir-accessing-data.html",
    "title": "Using the FHIR API to Access Data",
    "section": "",
    "text": "Learning objectives\n\n\n\n\n\n    Understand the basics of how to access data via the FHIR API.\n\n\n    Describe some common types of searches to read data from a FHIR server for reserach.\nAn Application Programming Interface (API) is “a way for two or more computer programs to communicate with each other.”\nFHIR defines a standard API that allows you (or your software) to request data from a FHIR-enabled server. The basics of this API should be consistent across FHIR servers, though servers can add their own custom functionality on top of the standard FHIR API.\nFHIR’s API is based on an architecture called REST (REpresentational State Transfer). The details of this architecture are beyond the scope of this module, but we will cover a few high-level characteristics of REST below as they are important for understanding FHIR’s API.\nIt’s worth noting that most modern web-centric APIs are “RESTful” – this is helpful for software engineers without prior FHIR experience who want to work with FHIR APIs because they have likely encountered other RESTful APIs."
  },
  {
    "objectID": "modules/fhir-accessing-data.html#constructing-a-fhir-api-request",
    "href": "modules/fhir-accessing-data.html#constructing-a-fhir-api-request",
    "title": "Using the FHIR API to Access Data",
    "section": "1 Constructing a FHIR API request",
    "text": "1 Constructing a FHIR API request\nA FHIR server’s API is typically accessed via a URL1 like https://hapi.fhir.org/baseR4/.\nThis URL is used to construct the API request, which typically takes the following form:\nGET https://hapi.fhir.org/baseR4/Patient/591702\nThis would retrieve a FHIR instance of Patient for the patient with the ID 591702.\n\n\n\n\n\n\nTry a FHIR API request\n\n\n\nThe general structure of a FHIR API request includes the following:\n\nGET = HTTP “verb”, which tells the server whether you are asking for data or performing another operation (see the FHIR documentation for details)\nhttps://hapi.fhir.org/baseR4/ = URL to the FHIR API\nPatient = FHIR resource type you want\n591702 = The ID for the resource you want (note that an ID is not needed for some types of API requests)\n\nYou can use this information to fill out the form below to construct and run a live FHIR query below to retrieve this patient’s instance of Patient:\n\n  \n    \n      Select HTTP Verb\n      GET\n      POST\n      HEAD\n      PATCH\n      PUT\n      DELETE\n    \n  \n\n  \n    \n      \n\n      /\n\n      \n        Select a FHIR resource\n        Patient\n        Observation\n      \n\n      /\n\n      \n    \n\n  \n\n  \n    Run query\n  \n\n\n\n\n\n\n\nThe response to a FHIR API request is typically in JSON format, which, like REST, is a commonly used data interchange format.\nHere’s an example of what this looks like for an instance of a Patient resource:\n{\n    \"resourceType\": \"Patient\",\n    \"id\": \"1234\",\n    \"identifier\":\n    [\n        {\n            \"use\": \"official\",\n            \"type\":\n            {\n                \"coding\":\n                [\n                    {\n                        \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n                        \"code\": \"MR\",\n                        \"display\": \"Medical Record Number\"\n                    }\n                ],\n                \"text\": \"Medical Record Number\"\n            },\n            \"system\": \"http://hospital.smarthealthit.org\",\n            \"value\": \"smart-1032702\"\n        }\n    ],\n    \"active\": true,\n    \"name\":\n    [\n        {\n            \"use\": \"official\",\n            \"family\": \"Shaw\",\n            \"given\":\n            [\n                \"Amy\",\n                \"V\"\n            ]\n        }\n    ],\n    \"telecom\":\n    [\n        {\n            \"system\": \"phone\",\n            \"value\": \"800-782-6765\",\n            \"use\": \"mobile\"\n        },\n        {\n            \"system\": \"email\",\n            \"value\": \"amy.shaw@example.com\"\n        }\n    ],\n    \"gender\": \"female\",\n    \"birthDate\": \"2007-03-20\",\n    \"address\":\n    [\n        {\n            \"use\": \"home\",\n            \"line\":\n            [\n                \"49 Meadow St\"\n            ],\n            \"city\": \"Mounds\",\n            \"state\": \"OK\",\n            \"postalCode\": \"74047\",\n            \"country\": \"USA\"\n        }\n    ]\n}\nModern programming languages universally support parsing JSON, which makes it easier to work with FHIR data than if a bespoke format was used.2 JSON also is relatively easy for humans to read."
  },
  {
    "objectID": "modules/fhir-accessing-data.html#common-api-requests-for-research",
    "href": "modules/fhir-accessing-data.html#common-api-requests-for-research",
    "title": "Using the FHIR API to Access Data",
    "section": "2 Common API requests for research",
    "text": "2 Common API requests for research\nResearchers will typically be reading data from a FHIR server rather than modifying data on the FHIR server. Requests to read data for research purposes will typically be one of the following:\n\nGetting instances of resources for a specific patient\nGetting all patients that meet a certain set of criteria\n\nExamples of API requests for these use cases are described below. For additional information on FHIR’s search capabilities, please see the Search page in the FHIR specification.\n\n2.1 Getting instances of resources for a specific patient\nThe example above (GET https://hapi.fhir.org/baseR4/Patient/591702) shows how to get the instance of Patient for the patient with the ID 591702.\n\n\n\n\n\n\nMaking requests to a FHIR server\n\n\n\nBecause FHIR’s RESTful interface uses standard HTTP requests, it is possible to make GET requests by pasting a URL like https://hapi.fhir.org/baseR4/Patient/591702into your browser’s address bar (omit the GET when using your browser, as loading web pages uses GET by default).\nHowever, it may be helpful to use an API testing tool like Postman or Hoppscotch when constructing FHIR searches for testing, or viewing longer responses. Note that caution should be used when loading real patient data with FHIR via third-party tools. The FHIR search examples in this module use synthetic data so this is not a concern here.\nYou can also use Python or another scripting language to make FHIR API requests and parse the responses. This Jupyter notebook demonstrates how to do this with Python.\n\n\nIt is possible to get resources related to this patient as well. For example, to get all the Observation resources associated with patient 591702, make the following request:\nGET https://hapi.fhir.org/baseR4/Patient?_id=591702&_revinclude=Observation:patient\nNote that rather than including the ID as part of the URL like in GET https://hapi.fhir.org/baseR4/Patient/591702, this request uses the _id parameter. This is necessary because we need to use the search interaction rather than the read interaction3 to retrieve multiple instances at once.\nThis request also uses the _revinclude parameter, which tells the FHIR server to follow the “reverse link” to identify instances of Observation where the reference in Observation.patient refers to one of the instances of Patient returned by the search.\nThe response to a search interaction is an instance of the Bundle resource, which contains the instances of the Patient and Observation resources returned by the server in response to the search. More information on Bundle can be found in Key FHIR Resources.\nDepending on your query, the response may be too large for the sever to easily return all at once. In this case, the server may employ paging to split up the response. If it does, the response will include an entry in the link element that indicate the URL that provides the relation=\"next\" page. To retrieve all the results, you will need to issue a GET request to the next URLs on each page of results. The last page of results will not have a next URL populated.\n\nMultiple types of resources\nThe same approach can be used to get multiple types of resources at once. The query below will include both Observation and Condition instances for the specified patient using multiple _revinclude parameters:\nGET https://hapi.fhir.org/baseR4/Patient?_id=591702&_revinclude=Observation:patient&_revinclude=Condition:patient\n\n\nGet instances of a resource without including Patient\nIf you want to get just the instances of a resource like Observation for a patient, without including the instance of Patient, the following approach can be used:\nGET https://hapi.fhir.org/baseR4/Observation?patient=591702\nThis instructs the server to return instances of Observation where Observation.patient=591702.\n\n\n\n2.2 Getting all patients that meet specified criteria\nFHIR’s search interaction does not allow for the same degree of filtering logic as a SQL-style query in a relational database. However, it does include some ability to filter with AND/OR logic, or by other criteria. Below are a few examples of this functionality.\nTo get all the patients who have an Observation observation with a specific value of Observation.code, make the following request:\nGET https://hapi.fhir.org/baseR4/Patient?_has:Observation:patient:code=http://loinc.org|718-7\nThis requests all instances of Patient that are associated with an instance of Observation via Observation.patient, and have Observation.code=http://loinc.org|718-7 via reverse chaining. (718-7 is the LOINC for “Hemoglobin [Mass/volume] in Blood”.)\nIf you want the instances of Observation along with Patient, you can use this request instead:\nGET https://hapi.fhir.org/baseR4/Observation?code=http://loinc.org|718-7&_include=Observation:patient\nThe _include parameter tells the server to return instances of Observation where code=http://loinc.org|718-7, and then to follow the reference in Observation.patient and include the referenced instances as well.\nIt is possible to perform more complex selection and filtering operations via the FHIR search API. For example, to get the subset of these observations with hemoglobin values &gt; 20, make this request:\nGET https://hapi.fhir.org/baseR4/Observation?code=http://loinc.org|718-7&_has:Observation&value-quantity=gt20\nThe parameter value-quantity=gt20 tells the server to take the subset of the selected Observation instances with Observation.valueQuantity greater than (gt) 20. Care should be used when analyzing the response to ensure Observation.valueQuantity.units is consistent.\nA number of other logic and filtering capabilities are described in detail on in a section on the Search page in the FHIR specification."
  },
  {
    "objectID": "modules/fhir-accessing-data.html#determining-a-fhir-server-capabilities",
    "href": "modules/fhir-accessing-data.html#determining-a-fhir-server-capabilities",
    "title": "Using the FHIR API to Access Data",
    "section": "3 Determining a FHIR server capabilities",
    "text": "3 Determining a FHIR server capabilities\nAll servers are required to support the capabilities interaction which documents the server’s functionality. The capability interaction is of the form:\nGET [base]/metadata\nThis request will return an instance of a resource called a CapabilityStatement that defines the behaviors supported by the server.\nInstances of CapabilityStatement are often extremely long – the response from GET https://hapi.fhir.org/baseR4/metadata is more than 25,000 lines of JSON. Therefore, if you wish to use the capabilities interaction to discover server capabilities, you will likely need to write a script to assist with parsing the response. More information on this can be found here under “Querying the Server.” The FHIR specification has a summary table of interactions that may be available on a server, which may help in understanding the response of the capabilties interaction."
  },
  {
    "objectID": "modules/fhir-accessing-data.html#next-steps",
    "href": "modules/fhir-accessing-data.html#next-steps",
    "title": "Using the FHIR API to Access Data",
    "section": "4 Next steps",
    "text": "4 Next steps\nIf you are interested in using the FHIR API to access data, you may want to review the following resources:\n\nThe general FHIR API documentation and the documentation specific to the search interaction in the FHIR specification.\nThe modules converting from FHIR to tabular format if you are interested in extracting data from a FHIR server for analysis in software like R or Python/Pandas.\nNIH/ODSS training materials on using Python/Pandas to extract data from a FHIR server and integrate it with other data sources (note that R versions of these exercises are also available):\n\nExercise 1: Patients Prescribed Opioids\nExercise 2: “Kids First” Data\nExercise 3: Drug-Drug Interactions"
  },
  {
    "objectID": "modules/fhir-accessing-data.html#footnotes",
    "href": "modules/fhir-accessing-data.html#footnotes",
    "title": "Using the FHIR API to Access Data",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nURLs may only be accessible inside an institution’s firewall, or may be accessible to the public internet. Even if a FHIR server is accessible to the public internet, it may not respond to any request – depending on how it is configured, it may require authentication (like a username and password) to return any data.↩︎\nFHIR servers can also typically return data in other standard formats, like XML.↩︎\nGET https://hapi.fhir.org/baseR4/Patient/591702 from above is an example of the read interaction.↩︎"
  },
  {
    "objectID": "modules/fhir-community.html",
    "href": "modules/fhir-community.html",
    "title": "FHIR Community & Resources",
    "section": "",
    "text": "Learning objectives\n\n\n\nAfter reading this module, you will be able to answer the following questions:\n\n\n    How can I get involved with the FHIR community?\n    You can interact with the FHIR community through Work Groups, Zulip (chat.fhir.org), and Connectathons.\n\n\n    Where can I ask FHIR related questions?\n    Zulip (chat.fhir.org), the FHIR Community Forum, and StackOverflow are great places to ask FHIR-related questions.\n\n\n    Where can I find more information on HL7?\n    HL7 resources are primarily found in HL7 Confluence and project status can be seen in HL7 Jira."
  },
  {
    "objectID": "modules/fhir-community.html#introduction",
    "href": "modules/fhir-community.html#introduction",
    "title": "FHIR Community & Resources",
    "section": "1 Introduction",
    "text": "1 Introduction\nFHIR has an active community of users who engage in discussions and offer advice. This module will introduce you to the HL7 and FHIR community, offer suggestions on where to ask questions, and clarify the various touchpoints and engagement opportunities."
  },
  {
    "objectID": "modules/fhir-community.html#the-hl7-fhir-community",
    "href": "modules/fhir-community.html#the-hl7-fhir-community",
    "title": "FHIR Community & Resources",
    "section": "2 The HL7 FHIR community",
    "text": "2 The HL7 FHIR community\nThe HL7 FHIR community consists of developers, maintainers, and implementers who engage with the FHIR specification. Community-members work in many environments including:\n\nClinical settings\nHealth-focused companies and non-profits\nLocal, state, and federal health agencies\n\nBecause FHIR is an open-source specification, most of HL7’s FHIR work is done publicly, and anyone can participate. The FHIR community also develops many FHIR Implementation Guides (IGs) with the same public approach.\nThis openness makes members of the community accessible to implementers and developers who want to:\n\nAsk questions.\nFollow the progress of work.\nContribute to the work through the channels described below.\n\n\n2.1 HL7 Work Groups\nHL7 specifications and many FHIR Implementation Guides are developed as HL7 Projects. HL7 Projects are efforts that are developed under the guidance of one or more HL7 Work Groups.\nWork Groups are:\n\n…the bodies within HL7 that take on responsibility for developing and maintaining standards. They are where the “work” of HL7 gets done. HL7 has many work groups covering the spectrum of the healthcare space. All work groups are open to participation by anyone with an interest in their content.\n\nHL7 Work Groups consist of subject matter experts and other stakeholders. Each Work Group has a mailing list that you can join to communicate with the Work Group, including asking for time on an upcoming conference call. Work Groups also post conference call agendas on their Confluence sites (see the Work Group directory for Confluence links).\nEach Work Group lists their associated projects. Work Groups typically meet on a weekly basis for a conference call. There is a core leadership team for each Work Group that facilitates meetings. Attendees vary depending on agenda content.\nWork Groups also meet in-person or hybrid at HL7 Working Group Meetings, which are held three times per year.\n\nGetting started with Work Groups\nThe fastest way to get started in a Work Group is to join its conference call and ask to introduce yourself.\nAlternatively (or additionally), join the Work Group’s mailing list and reach out to the group’s leadership to introduce yourself. You can also use the mailing list to request future agenda items.\n\n\nTips for attending Work Group meetings:\n\nAsk to be on the agenda ahead of the meeting to get specific questions addressed.\nBe prepared to discuss your agenda item(s). Agendas are available ahead of the meeting on the Work Group’s Confluence page.\nShare your expertise. To ensure that new projects and specifications can be used by the community, Work Groups require input from a variety of stakeholders.\n\n\n\n\n2.2 Zulip (chat.fhir.org)\nZulip (chat.fhir.org) is an asynchronous communication platform like Slack or Teams messaging. Anyone may join. The platform is a valuable resource for asking questions and connecting with others with similar projects or objectives.\nZulip has “streams” (like “channels” on Slack) for general topics like Implementation Guide development and Terminology, as well as domain-specific topics like Cancer Interoperability. Users post comments or questions inside a stream, and others respond. You can find applicable streams by searching for your topic or browsing through the stream list.\n\nGetting started with Zulip\nBefore using Zulip, review HL7’s community expectations.\nIf you have a question and don’t know which stream to post it in, the #implementers stream is a good place to start.\nOther useful streams to subscribe to include:\n\n#Announcements: posts with new streams, releases of new versions of specifications, and ballot updates\n#implementers: discussion about implementing FHIR resources\n#analytics on FHIR: useful for those using FHIR interfaces and APIs for data analytics\n#social: general discussion about the FHIR community with the occasional fun update from a community member\n\n\n\n\n2.3 Connectathons\nConnectathons are events that connect contributors and community members to test FHIR technology. HL7 describes a Connectathon as:\n\n…an event that is centered on developing the HL7 FHIR Specification including resources, profiles and implementation guides. The purpose of a Connectathon is to prove that the specification is complete and facilitate FHIR implementation guide maturity.\n\nThree Connectathons are held each year, either as in-person events or as virtual meetings. Anyone can attend as a participant or submit a proposal to be a Track Lead. Connectathon Track Leads share their specification or resource for implementers to test and offer feedback. A complete list of the Tracks is posted before the Connectathon. You can also view offerings from previous Connectathons.\n\nGetting started\nFind information about upcoming Connectathons on HL7’s Connectathon events page or the Connectathon Confluence page.\nThe Connectathon FAQs provide information on requirements to participate.\nFirst time attendees must watch the FHIR Training for Beginners Newcomer Orientation.\nEach Connectathon hosts a virtual Participant Information Session several weeks before the event. The Participant Information Session includes information about which Tracks are available, how to connect with Track Leads, and how to prepare your sandbox environment for testing. For an example of what to expect, a recording of the January 2023 Connectathon Participant Information Session is available, as well as the check lists for attendees and Track Leads.\n\n\n\n2.4 FHIR Accelerators\nIn addition to developing the FHIR standard, HL7 has a FHIR Accelerator program to “assist communities and collaborative groups across the global health care spectrum in the creation and adoption of high quality FHIR Implementation Guides or other standard artifacts to move toward the realization of global health data interoperability.”\nFHIR Accelerators drive adoption of FHIR for specific use cases, including:\n\nCodeX: Standardizing cancer data\nDa Vinci: Establishing a process for addressing value-based care delivery\nGravity: Standardizing social determinants of health\nHelios: Obtaining data for public health via FHIR\nVulcan: Obtaining data for research via FHIR\n\nResearchers may be especially interested in Vulcan. This presentation from FHIR DevDays 2022 provides an overview of Vulcan’s current activity (PDF slides):\n\nMore information on the FHIR to OMOP project that is part of Vulcan can be found here."
  },
  {
    "objectID": "modules/fhir-community.html#hl7-fhir-resources",
    "href": "modules/fhir-community.html#hl7-fhir-resources",
    "title": "FHIR Community & Resources",
    "section": "3 HL7 FHIR resources",
    "text": "3 HL7 FHIR resources\n\n3.1 HL7 Confluence\nDocumentation on HL7 processes and general information is typically found in the HL7 Confluence site. Confluence is a Wikipedia-like documentation website for HL7. Many of the links throughout this module go to HL7 Confluence pages. The site is useful for finding:\n\nHL7 projects in development\nSchedules and information for HL7 Work Groups\nProcesses and documentation for HL7 and FHIR infrastructure\n\nThe Confluence site also includes tips on getting involved and implementor support.\n\n\n3.2 HL7 Jira\nProject work and specification development primarily occurs in HL7 Jira. The site is an issue-tracking resource used for managing comments and suggestions on HL7 specifications and terminologies. This includes the core FHIR specification and FHIR IGs developed with HL7 Work Group oversight.\n\n\n3.3 FHIR Community Forum\nFHIR implementation and development discussions occur in the FHIR Community Forum. The FHIR Community Forum is a place to ask questions like:\n\n\nHow do I do [x]? where [x] is any kind of use of FHIR at all\nHas anyone solved [my problem] with the specification? (Or is anyone interested in this?)\nWhy does FHIR work like it does?\nWhat does everyone think about [making some change to the FHIR specification]?\n\n\nAlthough the FHIR Community Forum is monitored, Zulip (chat.fhir.org) serves a similar purpose and is more active.\n\n\n3.4 StackOverflow on FHIR\nStackOverflow is a third-party forum for asking and answering technical questions. HL7 FHIR is one of the topics discussed on StackOverflow, in addition to many other technologies unrelated to health. Use the hl7-fhir tag for developer and programming questions about reference FHIR implementations."
  },
  {
    "objectID": "modules/fhir-from-1000-ft.html",
    "href": "modules/fhir-from-1000-ft.html",
    "title": "FHIR from 1,000 Feet",
    "section": "",
    "text": "Learning objectives\n\n\n\nAfter reading this module, you will be able to answer the following questions:\n\n\n    What is the role of resources in FHIR?\n    Resources are categories of data in FHIR, and are used to store and retrieve a specific type of data in a pre-defined structure.\n\n\n    How can FHIR be customized, and why is this important?\n    FHIR can be customized through a process called profiling, where FHIR resources are constrained and extended. This allows FHIR to be used for a wide variety of use cases, including applications that were not imagined by FHIR’s creators.\n\n\n    What is the FHIR API?\n    It is a standard way for systems to request and send instances of resources to each other."
  },
  {
    "objectID": "modules/fhir-from-1000-ft.html#the-structure-of-fhir",
    "href": "modules/fhir-from-1000-ft.html#the-structure-of-fhir",
    "title": "FHIR from 1,000 Feet",
    "section": "1 The structure of FHIR",
    "text": "1 The structure of FHIR\nThe FHIR specification groups data elements into “resources,” like Patient for representing demographics and administrative information about an individual, and Observation for representing measurements and assertions about a patient or other subject.\nFHIR implementers can constrain what information gets included in a FHIR resource or use FHIR extensions to add information to a resource. They can also specify which FHIR resources should be used together for their use case. They share these constraints, extensions, and combinations with others through an Implementation Guide.\nBelow is a screenshot of the Patient resource from the FHIR specification (R4B version):\n\n\n\n\n\n\n\nAll FHIR resources have a Resource Content table.1 The table shows the hierarchy of elements in the FHIR resource. Elements might be one level deep (like Patient.birthDate) or nested (like Patient.contact.name).\nEach element has properties that appear in the Flag, Card. (short for “Cardinality”), and Type columns. The details of these properties are beyond the scope of this module; see Key FHIR Resources for more information.\nElements also have short descriptions (Description & Constraints) as well as longer descriptions. To see the longer description, click on the element’s name (e.g., see the details of Patient.gender).\nWhen a FHIR resource is created and populated with data, we call this an instance of the FHIR resource. An instance of the Patient resource would assign Patient.name to a value like Andy Smith. Instances are formatted in JSON or XML. To see an example of a patient instance formatted as JSON, expand the box below.\n\n\n\n\n\n\nJSON format FHIR Patient instance example\n\n\n\n\n\nBelow is an example of a what a FHIR resource instance looks like in JSON format.\n{\n  \"resourceType\": \"Patient\",\n  \"id\": \"f001\",\n  \"text\": {\n    \"status\": \"generated\",\n    \"div\": \"...\"\n  },\n  \"identifier\": [\n    {\n      \"use\": \"usual\",\n      \"system\": \"urn:oid:2.16.840.1.113883.2.4.6.3\",\n      \"value\": \"738472983\"\n    },\n    {\n      \"use\": \"usual\",\n      \"system\": \"urn:oid:2.16.840.1.113883.2.4.6.3\"\n    }\n  ],\n  \"active\": true,\n  \"name\": [\n    {\n      \"use\": \"usual\",\n      \"family\": \"van de Heuvel\",\n      \"given\": [\n        \"Pieter\"\n      ],\n      \"suffix\": [\n        \"MSc\"\n      ]\n    }\n  ],\n  \"gender\": \"male\",\n  \"birthDate\": \"1944-11-17\",\n  \"deceasedBoolean\": false,\n  \"managingOrganization\": {\n    \"reference\": \"Organization/f001\",\n    \"display\": \"Burgers University Medical Centre\"\n  }\n}"
  },
  {
    "objectID": "modules/fhir-from-1000-ft.html#customizing-fhir",
    "href": "modules/fhir-from-1000-ft.html#customizing-fhir",
    "title": "FHIR from 1,000 Feet",
    "section": "2 Customizing FHIR",
    "text": "2 Customizing FHIR\nThe FHIR specification follows the 80/20 rule to determine which data elements are included in a resource: data elements are typically included only if 80% of relevant systems will use them. Less common data needs are handled through FHIR extensions (discussed below). This means that FHIR-enabled systems will implement most common data elements consistently.\nTo maximize usability, data elements contained in FHIR resources have minimal constraints. Constraints restrict how a data element can be populated. For example, a constraint on Patient resource might require that Patient.birthDate be populated. However, some systems record a patient’s age in years rather than date of birth for privacy reasons. If the constraint on Patient.birthDate existed, those system would not be able to use the Patient resource.\nHowever, some use cases may require Patient.birthDate be populated. To achieve this, implementers can define use case-specific constraints on top of the base FHIR specification through profiling. The output of profiling is an Implementation Guide (IG), which is a collection of profiles that build on top of the FHIR specification (or other IGs).\n\n2.1 Example: customizing Patient in US Core\nThe US Core FHIR IG (referred to as “US Core” below) defines a FHIR implementation for USCDI, and is widely used in the US as the basis for FHIR implementations. In other words, EHRs in the US that support FHIR are likely also conformant with US Core.\nUS Core defines a profile of Patient, which does two things:\n\nAdds constraints: For example, the Patient resource in base FHIR does not require that the name element is populated. US Core’s profile of Patient adds a constraint to make name required.2\nAdds extensions: The base Patient resource in FHIR does not provide a way to capture patient race and ethnicity, which are common data elements in US health data. US Core adds Patient.us-core-race and Patient.us-core-ethnicity extensions to provide a consistent, interoperable way to store these data.\n\nMany other FHIR IGs include profiles that are based on US Core rather than directly on FHIR resources. For example, the mCODE IG, which defines a core set of data elements for oncology EHR data, includes a CancerPatient profile that is based on US Core’s Patient profile. Because US Core is widely implemented in US-based EHRs, it is helpful to base US-centric IGs off of US Core.\n\n\n2.2 Example: post-acute care data\nThe PACIO Project is a post-acute care interoperability project that publishes a FHIR IG to support exchange of relevant data.3\nThe following table shows how PACIO represents a narrative history of a patient’s functional status4 in their IG:\n\n\n\n\n\n\n\n\n\nFHIR term\nPACIO’s approach using FHIR\nCommentary\n\n\n\n\nResource\nFunctional status data are represented with the Observation FHIR resource.\n“Observations are a central element in healthcare, used to support diagnosis, monitor progress, determine baselines and patterns...”5\n\n\nProfile\nPACIO provides a Narrative History of Functional Status profile of the Observation resource.\nAdds constraints like:\n\nRequire performer element to indicate who performed the assessment\nIdentifying functional status narrative records with LOINC concept 10158-4 (History of Functional status Narrative).\n\n\n\nExtension\nTwo extensions are defined by this profile:\n\nevent-location indicates where the observed event occurred.\nassistance-required indicates the level of assistance needed by the patient during assessment.\n\nThe base Observation resource does not have a mechanism for capturing these types of data.\n\n\n\n\nIn general, a concept like “narrative history of a patient’s functional status” will be represented by one or more profiles of FHIR resources in a FHRI IG, each with a set of relevant constraints and (if necessary) extensions.\nNote that extensions can make interoperability more difficult compared to using data elements in the base FHIR resources, so they should be used only when needed.\n\n\n2.3 Customizing FHIR and research\nThere are two research considerations for customizing FHIR:\n\nAre there existing FHIR IGs that are relevant? For example, oncology clinical trials might be able to take advantage of the mCODE IG. Find other potentially relevant IGs here.\nWould creating a FHIR IG provide value? For research that uses FHIR-formatted data, creating a study-specific IG provides a way to easily define element definitions and required data elements. More information on writing IGs is here."
  },
  {
    "objectID": "modules/fhir-from-1000-ft.html#connecting-systems-together-the-fhir-api",
    "href": "modules/fhir-from-1000-ft.html#connecting-systems-together-the-fhir-api",
    "title": "FHIR from 1,000 Feet",
    "section": "3 Connecting systems together: the FHIR API",
    "text": "3 Connecting systems together: the FHIR API\nFHIR not only provides a standard way to represent data using FHIR resources, it also provides a standard way for systems to communicate.\nThis standard communication approach is called an API (short for Application Program Interface). As mentioned in Part 1, FHIR’s API uses a RESTful approach, which is a widely used throughout the technology industry. Find more specifics on FHIR’s API in the Accessing FHIR Data module.\nThe diagram below shows how FHIR’s API connects systems to each other:\n\nFor example, a FHIR Client (like the Apple Health app on an iPhone) can request data from a FHIR server using the “RESTful API over HTTP.” FHIR standardizes the request so the Apple Health app can use the same request regardless of which FHIR server they contact.\nLike with FHIR resources, the standard FHIR API doesn’t define all necessary operations for every use case. FHIR Implementation Guides (IGs) can also define additional API capabilities for a specific use case."
  },
  {
    "objectID": "modules/fhir-from-1000-ft.html#research-implications",
    "href": "modules/fhir-from-1000-ft.html#research-implications",
    "title": "FHIR from 1,000 Feet",
    "section": "4 Research implications",
    "text": "4 Research implications\nUsing FHIR for research depends on whether the relevant systems support FHIR and whether researchers will have access to those systems. Additionally, not all systems support FHIR in the same way. For example, some systems provide only basic FHIR support, while others may require system-level support of PACIO’s IG.\nIf the necessary FHIR support exists or can be added, researchers may benefit by using FHIR. The table below illustrates the benefits by comparing common research-related tasks using (a) FHIR to access data and (b) accessing data via a custom one-off extract:\n\n\n\n\n\n\n\n\n\nTask\nVia FHIR\nVia custom data extract\n\n\n\n\nDefining data dictionary\nUse PACIO’s FHIR IG or another existing IG directly, or extend as needed.\nCreate a custom data dictionary from scratch in Excel.\n\n\nEnsuring data consistency\nFHIR data elements have defined types, helping to ensure consistency with date formats, units, etc.\nFHIR allows for defining a list of valid choices for a specific element.\nDepends on implementation of extract.\n\n\nChecking data quality\nAutomated tools check for resource instance conformance against FHIR profiles.\nManual.\n\n\nLoading data into analysis software\nConvert from JSON with known schema and element types; analysis code can be feasibly tested ahead of time with automatically generated synthetic data in FHIR format.\nData format at least partially unknown until final extract is delivered.\n\n\nIntegrate data with third-party applications\nSMART on FHIR provides an authentication and authorization mechanism to access FHIR data, and a standardized API for requesting and receiving FHIR data.\nNo standard approach,"
  },
  {
    "objectID": "modules/fhir-from-1000-ft.html#additional-reading",
    "href": "modules/fhir-from-1000-ft.html#additional-reading",
    "title": "FHIR from 1,000 Feet",
    "section": "Additional reading",
    "text": "Additional reading\nBuilding on this introduction to how FHIR works, you may be interested in reading more:\n\nReal World Research discusses examples from peer-reviewed literature where FHIR was used.\nThe Observation resource was discussed above. FHIR Resources covers more of the common FHIR resources that are frequently used.\nThe section on data modeling in FHIR, starting with Real World IGs, provides additional information on IGs of interest, how to read IGs, and how to write IGs."
  },
  {
    "objectID": "modules/fhir-from-1000-ft.html#footnotes",
    "href": "modules/fhir-from-1000-ft.html#footnotes",
    "title": "FHIR from 1,000 Feet",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nFind more information on this table in Key FHIR Resources.↩︎\nYou can see this in the “Card.” (Cardinality) column for the Patient.name element on the US Core Patient profile’s “differential table”, which defines the changes this profile makes compared to the parent resource. Find more information on reading differential tables in IGs here.↩︎\nNote that the PACIO IG includes US Core as a dependency.↩︎\nPACIO defines functional status as:\n\nFunctioning observations related to mobility, self-care and domestic life are often used to describe how a person is able to interact with their environment and is a foundation to patient centered care. It is used in reporting outcomes for clinical care, quality improvement activities, quality measure reporting, and research.\n\n(Highlights added.)↩︎\nFrom the FHIR specification’s description of the Observation resource.↩︎"
  },
  {
    "objectID": "modules/fhir-from-10000-ft.html",
    "href": "modules/fhir-from-10000-ft.html",
    "title": "FHIR from 10,000 Feet",
    "section": "",
    "text": "Learning objectives\n\n\n\nAfter reading this module, you will be able to answer the following questions:\n\n\n    What role does FHIR play in health data interoperability?\n    FHIR is the ubiquitous specification governing interoperability of health systems. This is driven by regulation in the US and FHIR’s pragmatic implementation-first approach.\n\n\n    Why is FHIR relevant for research?\n    At a high level, FHIR is well-adopted throughout the US healthcare system thanks to ONC and CMS rules. FHIR’s openness, active development with an implementer-first approach, and extensibility make it a flexible tool for research.\n\n\n    What are areas where FHIR can enhance research?\n    1) Providing direct access to health data through a standardized API that would otherwise have to be accessed with one-off analyst work or through a more complex workflow.2) Defining a data model for research that can be implemented using existing FHIR resources and API endpoints."
  },
  {
    "objectID": "modules/fhir-from-10000-ft.html#ehrs-and-interoperability",
    "href": "modules/fhir-from-10000-ft.html#ehrs-and-interoperability",
    "title": "FHIR from 10,000 Feet",
    "section": "EHRs and interoperability",
    "text": "EHRs and interoperability\nHealth care organizations have been widely adopting electronic health record (EHR) systems throughout the US since 2014 (see graph below).\n\n\n\nFigure 1: Source: ONC/American Hospital Association (AHA), AHA Annual Survey Information Technology Supplement, 2019-2021.\n\n\nHowever, EHRs and their subsystems often cannot exchange data with other systems–they are not interoperable. Improving interoperability remains an important challenge for implementers and users of EHRs, including researchers who wish to use EHR data in their work.\nFHIR is one of the key technologies that enables interoperability of health-related data.\nHIMSS1 defines interoperability as:\n\nThe ability of different information systems, devices and applications (systems) to access, exchange, integrate and cooperatively use data in a coordinated manner, within and across organizational, regional and national boundaries, to provide timely and seamless portability of information and optimize the health of individuals and populations globally.\n\nONC2 describes the importance of interoperability:\n\nInteroperability helps clinicians deliver safe, effective, patient-centered care. It also provides new ways for individuals and caregivers to access electronic health information to manage and coordinate care. Advancing interoperability is now an essential part of most health care activities ranging from health equity to public health emergency response.\n\nBelow is additional background on interoperability and the technologies that enable it, including FHIR."
  },
  {
    "objectID": "modules/fhir-from-10000-ft.html#fhir-is-key-to-us-health-data-interoperability",
    "href": "modules/fhir-from-10000-ft.html#fhir-is-key-to-us-health-data-interoperability",
    "title": "FHIR from 10,000 Feet",
    "section": "FHIR is key to US health data interoperability",
    "text": "FHIR is key to US health data interoperability\nThe ONC 21st Century Cures Act (known as the “Cures Act”) supports seamless and secure access to health information. As part of Cures Act, ONC added a set of interoperability criteria to the existing 2015 Health IT Certification Program. These criteria include:\n\n“Standardized access to single patient and multiple patient services via an API(s) using the HL7 FHIR standard” (ONC 2022)\nUse of United States Core Data for Interoperability (USCDI) standard as part of these APIs (ONC 2020), which is implemented in FHIR with the US Core FHIR Implementation Guide\n\nWhile the Health IT Certification Program is voluntary, CMS provides a financial incentive to health systems that use certified EHRs. This incentive program has led to many EHRs and other health data systems supporting FHIR and USCDI.\n\nFHIR is ubiquitous\nAs of 2019, 84% of hospitals had adopted FHIR and FHIR is widely used in the health technologies outside of EHRs. For example, Apple’s HealthKit uses FHIR for accessing data from healthcare institutions. The major public cloud providers (Amazon, Google, and Microsoft) also provide FHIR functionality. In addition, FHIR is an international standard and is actively used outside the US.3"
  },
  {
    "objectID": "modules/fhir-from-10000-ft.html#fhirs-focus-on-implementation-is-beneficial-to-research-uses",
    "href": "modules/fhir-from-10000-ft.html#fhirs-focus-on-implementation-is-beneficial-to-research-uses",
    "title": "FHIR from 10,000 Feet",
    "section": "FHIR’s focus on implementation is beneficial to research uses",
    "text": "FHIR’s focus on implementation is beneficial to research uses\nFHIR has several characteristics that benefit research:\n\nThe FHIR specification is open source and actively improved through open source development principles.\nThere are no fees when using FHIR (though technology vendors may charge fees related to using their products that implement FHIR).\nFHIR uses common web technologies, which are widely used in technology outside of health care. Because software developers are familiar with these web technologies, implementing FHIR systems is cost effective even if software developers aren’t familiar with FHIR.\nThe FHIR specification can be easily customized and extended for specific use case (e.g., representing oncology data).\n\nFor more background, please see the Fundamental Principles of FHIR from HL7’s documentation."
  },
  {
    "objectID": "modules/fhir-from-10000-ft.html#fhir-provides-a-uniform-data-model-and-api-for-sharing-data",
    "href": "modules/fhir-from-10000-ft.html#fhir-provides-a-uniform-data-model-and-api-for-sharing-data",
    "title": "FHIR from 10,000 Feet",
    "section": "FHIR provides a uniform data model and API for sharing data",
    "text": "FHIR provides a uniform data model and API for sharing data\nThe FHIR specification provides an extensible set of “resources” to structure different types of data, like Patient for representing demographics and administrative information about an individual, and Observation for representing measurements and assertions about a patient or other subject.\nThese FHIR resources are designed to include data elements that cover the majority of use cases, and the FHIR specification provides mechanisms for extending data models when necessary.\nFHIR also provides an API (Application Programming Interface) that provides a standardized way for systems to request and receive FHIR data.\nThe FHIR specification also discusses security concerns related to FHIR and includes recommended best practices."
  },
  {
    "objectID": "modules/fhir-from-10000-ft.html#research-implications",
    "href": "modules/fhir-from-10000-ft.html#research-implications",
    "title": "FHIR from 10,000 Feet",
    "section": "Research implications",
    "text": "Research implications\nThese features of FHIR, along with its widespread adoption, enable researchers to access data in a standard and reproducible way. FHIR also facilitates direct data integration with other software (e.g., mobile apps), which would be difficult to accomplish otherwise.\nFor more information, please see FHIR from 1,000 Feet."
  },
  {
    "objectID": "modules/fhir-from-10000-ft.html#footnotes",
    "href": "modules/fhir-from-10000-ft.html#footnotes",
    "title": "FHIR from 10,000 Feet",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nHIMSS is the Healthcare Information and Management Systems Society. Its mission is to “reform the global health ecosystem through the power of information and technology.”↩︎\nONC is The Office of the National Coordinator for Health Information Technology.\nFrom their website:\n\nONC is the principal federal entity charged with coordination of nationwide efforts to implement and use the most advanced health information technology and the electronic exchange of health information.\n\n↩︎\nFor example, there are many internationally-focused FHIR Implementation Guides: http://hl7.org/fhir/uv/.↩︎"
  },
  {
    "objectID": "modules/fhir-history.html",
    "href": "modules/fhir-history.html",
    "title": "FHIR History",
    "section": "",
    "text": "Learning objectives\n\n\n\nAfter reading this module, you will be able to answer the following questions:\n\n\n    What are HL7 V2’s key limitations?\n    HL7 V2’s data format is outdated compared to modern formats like JSON and XML. It also does not support many health-related data types and is not structured enough to support interoperability.\n\n\n    What are HL7 V3’s key limitations?\n    V3 is structured enough to support interoperability but is difficult to implement and has not been widely adopted.\n\n\n    What characteristics of FHIR have led to its success compared to V2 and V3?\n    FHIR is structured enough to support interoperability, is simpler than V3, and uses uses common standards like JSON, XML, and REST, so integrates well with non-health-specific software.\nFHIR is the third health data standard that the HL7 standards developing organization has developed. The two previous standards are HL7 V2 and HL7 V3.\nThe history of these standards and how they relate to FHIR is described below."
  },
  {
    "objectID": "modules/fhir-history.html#hl7-v2",
    "href": "modules/fhir-history.html#hl7-v2",
    "title": "FHIR History",
    "section": "1 HL7 V2",
    "text": "1 HL7 V2\nHL7 released HL7 Version 2 (commonly called “V2” or “HL7 V2”) in 1987. It is a messaging standard for exchanging clinical data between systems. Though it is widely implemented, V2 does not meet modern health interoperability needs. For example:\n\nV2 predates modern web-based interoperability technology, making integration into current computer systems difficult. V2 uses a custom data format, requiring purpose-built software to read and write V2 messages.\n\n\n\n\n\n\nExpand to see an example of a V2 message.\n\n\n\n\n\nFrom Wikipedia:\nMSH|^~\\&|MegaReg|XYZHospC|SuperOE|XYZImgCtr|20060529090131-0500||ADT^A01^ADT_A01|01052901|P|2.5\nEVN||200605290901||||\nPID|||56782445^^^UAReg^PI||KLEINSAMPLE^BARRY^Q^JR||19620910|M||2028-9^^HL70005^RA99113^^XYZ|260 GOODWIN CREST DRIVE^^BIRMINGHAM^AL^35209^^M~NICKELL’S PICKLES^10000 W 100TH AVE^BIRMINGHAM^AL^35200^^O|||||||0105I30001^^^99DEF^AN\nPV1||I|W^389^1^UABH^^^^3||||12345^MORGAN^REX^J^^^MD^0010^UAMC^L||67890^GRAINGER^LUCY^X^^^MD^0010^UAMC^L|MED|||||A0||13579^POTTER^SHERMAN^T^^^MD^0010^UAMC^L|||||||||||||||||||||||||||200605290900\nOBX|1|NM|^Body Height||1.80|m^Meter^ISO+|||||F\nOBX|2|NM|^Body Weight||79|kg^Kilogram^ISO+|||||F\nAL1|1||^ASPIRIN\nDG1|1||786.50^CHEST PAIN, UNSPECIFIED^I9|||A\n\n\n\nV2 does not provide enough structure to support semantic interoperability across implementations.\nV2 does not have a standard approach to sending common types of health data, like PDFs.\n\nMore information on the early history of HL7 and the development of V2 can be found here."
  },
  {
    "objectID": "modules/fhir-history.html#hl7-v3",
    "href": "modules/fhir-history.html#hl7-v3",
    "title": "FHIR History",
    "section": "2 HL7 V3",
    "text": "2 HL7 V3\nHL7 Version 3 (“V3”, released in 2005) was created to address limitations of V2. It adopted a more rigorous approach to data modeling (the Reference Information Model), and used a common data format (XML).\nHowever, V3 was not as widely adopted as V2, in part due to its complexity. However, the C-CDA standard for clinical documents uses V3, which is widely implemented as part of Meaningful Use criteria."
  },
  {
    "objectID": "modules/fhir-history.html#fhir",
    "href": "modules/fhir-history.html#fhir",
    "title": "FHIR History",
    "section": "3 FHIR",
    "text": "3 FHIR\nHL7 developed FHIR in the early 2010s to provide a more interoperable alternative to V2 and a simpler alternative to V3.1 Like V3, FHIR uses common data formats (like JSON and XML). It also uses a common architecture (REST) for communication between systems. These design decisions make FHIR-enabled systems easier to integrate with mobile and cloud-based health applications compared to V2.\nRecall from FHIR from 1,000 Feet that:\n\nThe FHIR specification follows the 80/20 rule to determine which data elements are included in a resource: data elements are typically included only if 80% of relevant systems will use them. Less common data needs are handled through FHIR extensions. This means that FHIR-enabled systems will implement most common data elements consistently.\n\nIn late 2014, HL7 released the first official version of FHIR. By 2015, 87% of hospitals in the US were using FHIR certified EHRs as seen below. (Posnack and Barker 2018)\n\nThe late 2010s saw adoption outside of EHRs. For example, Apple uses FHIR in HealthKit for accessing patient health data directly from EHRs. The three major public cloud vendors (Amazon, Google, Microsoft) provide FHIR-enabled services as well.\n\n3.1 FHIR releases\nFHIR is currently on R5 (as of April 2023), which is the 5th major release of the FHIR specification. ONC provides a summary of FHIR releases since the first in 2012:\n\nHL7® FHIR® has evolved through four releases since its initial presentation in May 2012. It has grown from a true draft standard with 49 Resources to its current 145 and continues to expand. In that time the standard has improved and changed to meet the needs of the health information technology community.\nDraft standard for trial use 1 (DSTU1)\nFHIR’s first publication in September 2013 showed a new way forward for health care data exchange. Draft Standard for Trial Use 1 had 49 resources and focused on two use cases, creating a Personal Health Record on a mobile device and the retrieval of documents, such as encounter or discharge notes, to a mobile device. This initial release sparked the community’s interest in expanding FHIR to cover a wider variety of health care and health IT needs.\nDraft standard for trial use 2 (DSTU2)\nFHIR grew in market acceptance with the publication of the Draft Standard for Trial Use 2 in 2015. Efforts including the Argonaut Project developed Implementation Guides (IGs) and other technologies to support FHIR adoption by EHR developers and other health IT entities. The structure of Resources was adjusted to make creating extensions easier, allowing for more use cases to be covered without changes to the core standard. New Resources were also added to support non-clinical data, including claims and benefits processing.\nThe publication of FHIR DSTU2 included the creation of the FHIR Maturity Model (FMM). When new Resources are created, they are not immediately ready for use in live settings; they must be refined and tested for a variety of uses and settings. The FHIR Maturity Model established a set of levels that progressively measure technical advancement, known as maturity. Resource maturity as defined by the FMM begins with an initial draft and achieves final status with implementation in multiple settings. Since the maturity of the FHIR standard overall is not tied to the maturity of Resources, Resources can move up the maturity ladder between FHIR releases. The FMM, which is also applied to other components of the FHIR standard, defines Resource stability with six levels:\n\nFMM0 (Draft) - The resource is still in early development but has been accepted into the FHIR standard.\nFMM1 - The Resource has no current technical errors and is believed to address all design goals.\nFMM2 - The Resource has been tested and approved at a FHIR Connectathon with multiple FHIR-enabled computer systems tested.\nFMM3 - The Resource passed all quality checks and an HL7 community ballot that determines if it is ready for trial use.\nFMM4 - The Resource has been tested for functionality for all intended purposes, has been published in a formal HL7 publication, and is operating in at least one prototype system.\nFMM5 - The Resource is in use in at least five distinct production systems operating in at least two countries.\n\nSubstantive changes at the FMM4 or FMM5 levels that would change usage from those already established or would break compatibility with existing implementations would require significant justification to be accepted and to move forward. After FMM5, a Resource reaches “normative”1 level; at this level, future changes must be backwards compatible so that applications that implement those Resources aren’t at risk of being broken as the FHIR standard changes.\nStandard for trial use 3 (STU 3)\nFHIR Standard for Trial Use 3 was released in 2017 with improvements to the core Clinical, Administrative, and Financial Resources, improvements to the Clinical Decision Support and Clinical Quality Measure Resources and a new framework for workflow and task management. Additionally, tools were introduced that made FHIR IG creation and publication to the web easier, faster, and more unified.\nRelease 4 (R4)\nAs the first release with normative content, the 2019 release of FHIR Release 4 left behind the Trial Use name. Two key clinical Resources, Patient and Observation, were released as normative, along with the RESTful API, the XML and JSON formats, and nine additional Resources.\nIn 2020, ONC published the Final Rule for the 21st Century Cures Act, establishing FHIR R4 as the standard required for Health IT Certification.\nLooking ahead to Release 5 (R5)\nFHIR Release 5 will see increased normative content, with over 30 Resources having been nominated by their HL7 Workgroups to be matured to that status. In addition, the community will continue to develop the supportive specifications to FHIR, such as the authorization framework SMART, Clinical Decision Support Hooks (CDS Hooks), and the Bulk Data Transfer specification, which will help implementers create a complete FHIR-based exchange of health care data.\nWith the maturing of the FHIR IG tools and templates, better integration with public health, imaging, financial management, genomics and other fields will keep FHIR at the forefront of health IT.\n\n\n\n\n\n\nNote\n\n\n\nNote: FHIR R5 was officially released in March 2023."
  },
  {
    "objectID": "modules/fhir-history.html#footnotes",
    "href": "modules/fhir-history.html#footnotes",
    "title": "FHIR History",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThis blog post from 2011 by Grahame Grieve, one of the primary creators of FHIR, explains how FHIR is informed by V2 and V3.↩︎"
  },
  {
    "objectID": "modules/fhir-research.html",
    "href": "modules/fhir-research.html",
    "title": "Real World Research Using FHIR",
    "section": "",
    "text": "Learning objectives\n\n\n\nAfter reading this module, you will be able to answer the following questions:\n\n\n    How have researchers used FHIR in the past?\n    Researchers have used FHIR to extract data from EHRs, define phenotypes that are portable across systems and institutions, and enable research that requires integration with clinical workflows.\nResearchers have published work using FHIR in a number of areas, usually related to:\nBelow are summaries of recent published research in each of these areas. At the bottom of this page is a list of other published research involving FHIR."
  },
  {
    "objectID": "modules/fhir-research.html#extracting-data",
    "href": "modules/fhir-research.html#extracting-data",
    "title": "Real World Research Using FHIR",
    "section": "1 Extracting data",
    "text": "1 Extracting data\n\nCheng et al. (2023) used FHIR to automatically populate clinical trial case report forms. In a COVID-19-related trial at Vanderbilt University Medical Center, they populated 10,081 of 11,952 values (84%) using FHIR, with 89% agreement with human entry. Manual review indicated that disagreement with human entry was often due to errors in manual data entry, suggesting that the FHIR-based approach could improve accuracy over manual chart abstraction.\nZong et al. (2021) evaluated using FHIR to automatically populate case report forms for a colorectal cancer clinical trial. The were able to successfully extract a portion of the data needed to fill case report forms with 98.5% positive predictive value and 96.2% sensitivity using clinical records from 331 Mayo Clinic patients.\nLenert et al. (2021) describes a way of using FHIR to replace custom data pipelines for extracting COVID-19 data from EHRs. They used FHIR to populate PCORnet and OMOP databases with significantly less delay than previous approaches. (For more information on PCORnet and OMOP, please see Common Data Models.) This approach should be portable across EHRs and institutions.\nWood et al. (2021) discusses building a “Data Hub” that includes clinical data from multiple institutions for hematology research. They support ingesting data from both FHIR endpoints and OMOP databases with the goal of reducing the informatics burden on participating institutions."
  },
  {
    "objectID": "modules/fhir-research.html#phenotype-portability",
    "href": "modules/fhir-research.html#phenotype-portability",
    "title": "Real World Research Using FHIR",
    "section": "2 Phenotype portability",
    "text": "2 Phenotype portability\n\nBrandt et al. (2022) created cross-institution phenotype definitions (aka cohort definitions) using a combination of FHIR and Clinical Quality Language (CQL)1. Three institutions successfully used their system to identify cases and non-cases by generating queries to run against existing OMOP databases. Institutions that do not have OMOP research databases could possibly use FHIR and CQL directly to identify cases and non-cases, though the authors did not test this.\nGruendner et al. (2022) also developed a cross-institution phenotyping approach using FHIR and CQL. Their system had four components:\n\nUser-interface for writing queries.\nBackend for translating the user input to a standardized format.\nMiddleware to transport the query.\nExecution service to convert the standardized query to FHIR.\n\nTheir approach could be deployed at multiple institutions and scaled to millions of records using synthetic data."
  },
  {
    "objectID": "modules/fhir-research.html#interacting-with-clinical-workflows",
    "href": "modules/fhir-research.html#interacting-with-clinical-workflows",
    "title": "Real World Research Using FHIR",
    "section": "3 Interacting with clinical workflows",
    "text": "3 Interacting with clinical workflows\nFHIR can be used to integrate third-party applications with EHRs using SMART on FHIR, a standard that enables “write once, use everywhere” integration. Please see the SMART on FHIR Introduction page for more information on real-world research use cases, including clinical decision support and data integration.\nSMART on FHIR can also be used to provide patients access to their clinical data directly from their provider’s EHR. As of April 2023, we did not find examples of this capability in research.\nREDCap, a survey tool that can be used with EHRs in the clinical workflow, can also be used with FHIR. For more information on using REDCap with FHIR, please see the introductory REDCap page."
  },
  {
    "objectID": "modules/fhir-research.html#other-references",
    "href": "modules/fhir-research.html#other-references",
    "title": "Real World Research Using FHIR",
    "section": "4 Other references",
    "text": "4 Other references\nBelow is a list of studies that used FHIR in some way. These may help you come up with ideas of how FHIR can benefit your research:\n\nAdverse event reporting\n\nWang, Lehmann, and Botsis (2021)\n\nClinical decision support\n\nJung et al. (2022)\n\nClinical statistics and analysis\n\nHong et al. (2017)\n\nCohort building\n\nGruendner et al. (2021)\nBradshaw et al. (2022)\n\nData models\n\nLambarki et al. (2021)\nJiang, Kiefer, Sharma, et al. (2017)\nFischer et al. (2020)\nPfaff et al. (2019)\nJiang, Kiefer, Prud’hommeaux, et al. (2017)\n\nEnvironmental health and spatiotemporal data\n\nXu et al. (2020)\n\nFindable, Accessible, Interoperable, and Resusabe (FAIR) data principles\n\nSinaci et al. (2020)\n\nMulti-site research\n\nGarza et al. (2020)\n\nPatient-facing apps\n\nPawelek et al. (2022)\nBartschke, Börner, and Thun (2021)\nBurkhardt et al. (2021)\nPloner and Prokosch (2020)\nChatterjee, Pahari, and Prinz (2022)\n\nREDCap\n\nThe REDCap introduction page\nMetke-Jimenez and Hansen (2019)\n\nReviews of studies that use FHIR\n\nDuda et al. (2022)\nVorisek et al. (2022)\nGriffin et al. (2022)\n\nSMART on FHIR\n\nThe SMART on FHIR Introduction page\nMandel et al. (2016)\nBloomfield et al. (2017)\nJones et al. (2021)\nWesley et al. (2021)\nSayeed, Gottlieb, and Mandl (2020)\nWagholikar et al. (2017)\n\nSocial determinants of health\n\nWatkins et al. (2020)"
  },
  {
    "objectID": "modules/fhir-research.html#footnotes",
    "href": "modules/fhir-research.html#footnotes",
    "title": "Real World Research Using FHIR",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nCQL is an HL7 standard that expresses inclusion and exclusion logic.↩︎"
  },
  {
    "objectID": "modules/key-fhir-resources.html",
    "href": "modules/key-fhir-resources.html",
    "title": "Key FHIR Resources",
    "section": "",
    "text": "Learning objectives\n\n\n\nAfter reading this module, you will be able to answer the following questions:\n\n\n    What are three key FHIR resources?\n    Patient, Observation, and Bundle.\n\n\n    How are FHIR resources defined?\n    FHIR resources are defined in a structure table that lists out each attribute’s name, flags, cardinality, type, constraints, and descriptions.\n\n\n    How do FHIR resources support interoperability?\n    A FHIR resource’s attributes are rigorously defined, which allows systems to transfer medical information without loss of meaning.\nResources are the key building blocks of FHIR. A FHIR resource is a structure that contains medical information in an unambiguous format. This allows different systems to understand information in the same way,1 which is necessary for health systems to accurately share data."
  },
  {
    "objectID": "modules/key-fhir-resources.html#core-elements",
    "href": "modules/key-fhir-resources.html#core-elements",
    "title": "Key FHIR Resources",
    "section": "1 Core elements",
    "text": "1 Core elements\nThe FHIR core v4.3.0 (also known as Revision 4B, or R4B) defines 140 resources that allow for healthcare interoperability. The HL7 FHIR specification gives a well-structured summary of FHIR’s core resources:\n\n\n\nThe organization of FHIR’s core resources. From [HL7’s FHIR specification](https://hl7.org/fhir/R4B).\n\n\nAs shown above, the FHIR core resources are organized into 5 levels:\n\nLevels 1 and 2 include data types and infrastructure required to implement FHIR, including “meta” FHIR resources used to describe aspects of FHIR itself.\nLevels 3 and 4 include intuitive FHIR resources information such as Patient or Observation.\nLevel 5 includes abstract FHIR resources such as clinical workflows with the intended use of Clinical Decision Support."
  },
  {
    "objectID": "modules/key-fhir-resources.html#representation",
    "href": "modules/key-fhir-resources.html#representation",
    "title": "Key FHIR Resources",
    "section": "2 Representation",
    "text": "2 Representation\nA FHIR resource may be encoded in different standard formats like JSON and XML. These format are used throughout the software industry, not just in healthcare. Using standard formats allows common programming languages and software tools to process FHIR resources.2\n\n\n\n\n\n\nExamples of JSON and XML formats\n\n\n\n\n\nJSON looks like this:\n{\n  \"resourceType\" : \"Patient\",\n  \"id\" : \"example\",\n  \"name\" : [{\n    \"use\" : \"official\",\n    \"family\" : \"Chalmers\",\n    \"given\" : [\"Peter\",\n    \"James\"]\n  }\n}\nXML looks like this:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;Patient xmlns=\"http://hl7.org/fhir\"&gt;\n    &lt;id value=\"example\"/&gt;\n    &lt;name&gt;\n        &lt;use value=\"official\"/&gt;\n        &lt;family value=\"Chalmers\"/&gt;\n        &lt;given value=\"Peter\"/&gt;\n        &lt;given value=\"James\"/&gt;\n    &lt;/name&gt;\n&lt;/Patient&gt;"
  },
  {
    "objectID": "modules/key-fhir-resources.html#design",
    "href": "modules/key-fhir-resources.html#design",
    "title": "Key FHIR Resources",
    "section": "3 Design",
    "text": "3 Design\nThe critical concepts across the FHIR resource design are:\n\nGranularity: Capture all possible information.\nFlexibility: Work with a variety of pre-existing data pipelines.\nExtensibility: Encompass quirks in real-world workflows.\nMetadata: Support auto-discovery and self-documentation.\n\nFHIR resources support the concepts above and follow object-oriented principles, a key software engineering concept. They bridge the world between technical implementation and real-world medical practice while minimizing compromises.\nTo understand how FHIR accomplishes this, let’s examine the Patient resource."
  },
  {
    "objectID": "modules/key-fhir-resources.html#the-patient-resource",
    "href": "modules/key-fhir-resources.html#the-patient-resource",
    "title": "Key FHIR Resources",
    "section": "4 The Patient resource",
    "text": "4 The Patient resource\nHere is a FHIR structure table for the Patient resource:\n\n\n\nThe structure for FHIR Patient resource.\n\n\nAll FHIR resources have a similar table representing their contents. These tables have the following columns:\n\nName: The element name.\nFlags: Special markers that carry information required for implementers. The flags N, ?!, and Σ represent normative, is-modifier, and in-summary respectively. We will not cover FHIR attribute flags in detail here, but HL7 documents them.\nCard.: The cardinality of the attribute in format {minimum}..{maximum}. Cardinality refers to the number of data points an element can hold. The most intuitive cardinality values are 1..1 which means “one value required” and 0..1, which means “one value is optional. However, other options are possible, like 0..*, which means”any number of values.”3\nType: The primitive or complex data type. A primitive data type is a base data type, like date or integer. A complex data type is constructed from other data types, like Address.\nDescription & Constraints: A human-targeted explanation of the element that may contain constraints that implementers must enforce. Constraints (like “element X must be populated if element Y is missing”) may be formally defined through a language called FHIRPath.\n\nDefining a FHIR resource automatically generates a structure table, so structure tables are available for any resource.\n\n4.1 Basic types example: Patient.active\nUnder “Patient” there is an element active which is referred to as Patient.active. From the table we know that Patient.active is a boolean (i.e., “true” or “false”) and can either be omitted or have one value (cardinality 0..1).\nAn example of the Patient.active element in JSON format would look like:\n{\n  ...\n  \"active\": \"true\",\n  ...\n}\nAnd in XML:\n...\n&lt;active value=\"true\"/&gt;\n...\n\n\n4.2 Complex types example: Patient.name\nPatient.name is of complex type HumanName. Complex types are FHIR resources and have their own structure table. Here’s the one for HumanName:\n\n\n\nThe structure for Patient.name, which is a HumanName.\n\n\nHumanName’s elements all have primitive types, such as HumanName.given, an array of zero or more strings, and HumanName.use, a code-string that must be one of the provided values. As an example, the name Pieter van de Heuvel would be represented in JSON as:\n{\n  \"name\": [\n    {\n      \"use\": \"usual\",\n      \"family\": \"van de Heuvel\",\n      \"given\": [\n        \"Pieter\"\n      ],\n      \"suffix\": [\n        \"MSc\"\n      ]\n    }\n  ]\n}\n\n\n\n\n\n\nThe flexibility of FHIR’s data modeling approach\n\n\n\nThe structure of HumanName highlights the flexibility of FHIR’s approach to modeling data. HumanName allocates seven separate elements to represent a person’s name. Compare this with a standard approach in a relational database, which would typically allocate only a few fields.\nIn FHIR, all of these elements are, allowing for flexibility in how implementers represent names. For example, some implementers might store names as a single string (e.g., Pieter van de Heuvel, MSc), while others might split up the name parts into separate elements (like the JSON above).\nMaking elements optional balances flexibility with interoperability: this approach provides a standard location and encoding for the data element in question, without requiring all systems to populate it. This approach is used throughout the core FHIR resource definitions.\nThis degree of flexibility is not helpful in all use cases. FHIR addresses this through resource Profiles, which provide a way to computably describe use case-specific constraints (e.g., “all names must include a family element”). Profiles are collected in Implementation Guides (IGs) to provide a complete specification based on FHIR for a given use case.\n\n\n\n\n4.3 Choice elements example: Patient.deceased[x]\nElements that can have more than one data type are called choice elements. The Patient.deceased[x] attribute demonstrates some characteristics of a choice element.\n\nThe term Patient.deceased[x], with [x] in the name, appears in documentation only–never in an instance of Patient that’s been populated with data.\nInstead, one and only one of the following may appear in an instance of Patient: Patient.deceasedBoolean or Patient.deceasedDateTime. The documentation shows that these are the two valid types for Patient.deceased[x].\nAll choice elements must have a maximum cardinality of 1 per the FHIR specification.\nPatient.deceased[x] happens to have a minimum cardinality of 0, so an instance of Patient may also omit both Patient.deceasedBoolean and Patient.deceasedDateTime. Other choice elements may have a minimum cardinality of 1 and require one of the indicated datatypes.\n\nThis flexibility allows the status of non-deceased patients to be represented by Patient.deceasedBoolean = false or an absent value, while deceased patients can be represented by Patient.deceasedBoolean = true or Patient.deceasedDateTime = \"2023-01-01T01:01:01\".\nChoice elements are always denoted by a [x] suffix in documentation. The [x] is replaced with the name of the datatype in CamelCase: deceased[x] becomes deceasedDateTime for the dateTime type.\n\n\n\n\n\n\nImplementing choice elements\n\n\n\n\n\nWhile choice elements provide flexibility, they add complexity for implementers, including researchers. When working with choice elements, consider the following:\n\nAssume that any of a choice element’s possible types may be present. For example, a tabular representation of Patient instances would include two columns related to “deceased”: deceased_boolean and deceased_datetime. An analyst could add logic to collapse this down to a single column for a given analysis (e.g., logic like, “if deceased_datetime is not empty and deceased_boolean is missing, then set deceased_boolean to true”).\nWhen possible, use existing software libraries to do the FHIR-to-tabular conversion, such as R’s fhircrackr, which may simplify handling choice elements.\nWhen developing custom software, use FHIR’s official list of choice elements to systematically handle them rather than hard-coding special cases for each resource.\nIf possible, use FHIR profiles to add constraints to disallow undesirable datatypes for choice elements. For example, if Patient.deceasedDateTime is never useful for a given use case, a profile of Patient could disallow Patient.deceasedDateTime and require Patient.deceasedBoolean. This is like defining a data dictionary ahead of data collection and can drastically simplify analysis as long as the data sources also implement the custom profiles.\n\n\n\n\n\n\n4.4 CodeableConcepts example: Patient.maritalStatus\nPatient.maritalStatus is a CodeableConcept, which is a commonly used complex type in FHIR. CodeableConcepts bind an attribute to a specific set of terminology concepts. Patient.maritalStatus is bound to the Marital Status Codes Value Set. For more on FHIR’s terminology resources, see the terminology module.\nIn addition to identifying a value set for the binding, a CodeableConcept also identifies the strength of the binding:\n\nrequired binding: The value of the element must be from the specified value set.\nextensible binding: If a code in the specified value set represents the concept, then that code must be used. Otherwise, a different code can be used.\npreferred binding: The use of codes from the specified value set is encouraged but not required.\nexample binding: The specified value set is an example, and codes outside the specified value set can be used freely.\n\nThe base FHIR specification generally does not have required bindings as these restrict the flexibility of resources. Instead, required bindings are added for specific use cases via FHIR profiles.\n\n\n\n\n\n\nImplementing CodeableConcepts\n\n\n\n\n\nImplementers and researchers should consider the following when implementing CodeableConcepts:\n\nUsing a FHIR profile to require specific value sets simplifies analysis.\nUnless an element has a required binding, do not assume that FHIR data will only include codes from the specified value set. Make sure you perform an exploratory data analysis for any CodeableConcept binding strength other than required.\nFor example, the Patient.maritalStatus binding is extensible: while you may see values from the bound value set (like M for married), you may also see values from other value sets (like the SNOMED CT concept 54986009 “Engaged to be married (finding)” ).\n\n\n\n\n\n\n4.5 Inheritance in FHIR\nIn software engineering, inheritance is a common pattern for sharing attributes across similar classes (e.g., a parent class called “pet” might have two child classes called “dog” and “cat”. “Dog” and “cat” inherit properties from the “pet” parent class, like “name,” “weight,” and “cuteness.”).\nFHIR has a similar pattern, where resources like Patient inherit from a parent type called DomainResource. You can see this in the first row of the structure table for Patient:\n\n\n\nThe first few rows of the structure table of the Patient resource, with an arrow indicating that Patient is a DomainResource.\n\n\nSimilarly, DomainResource is a child of Resource, which is the base of almost all FHIR resources. Because FHIR resources are children of DomainResource, they have the same set of core elements in their computable representation. This is useful if you are writing software that needs to process resource definitions from the FHIR specification.\nFHIR profiles also exhibit inheritance, where a profile inherits the constraints from another profile or from a base FHIR resource.\n\n\n4.6 A Patient Example\nTo summarize the Patient resource, here is an anonymized example from the real world:\n{\n  \"resourceType\": \"Patient\",\n  \"id\": \"f001\",\n  \"text\": {\n    \"status\": \"generated\",\n    \"div\": \"...\"\n  },\n  \"identifier\": [\n    {\n      \"use\": \"usual\",\n      \"system\": \"urn:oid:2.16.840.1.113883.2.4.6.3\",\n      \"value\": \"738472983\"\n    },\n    {\n      \"use\": \"usual\",\n      \"system\": \"urn:oid:2.16.840.1.113883.2.4.6.3\"\n    }\n  ],\n  \"active\": true,\n  \"name\": [\n    {\n      \"use\": \"usual\",\n      \"family\": \"van de Heuvel\",\n      \"given\": [\n        \"Pieter\"\n      ],\n      \"suffix\": [\n        \"MSc\"\n      ]\n    }\n  ],\n  \"telecom\": [\n    {\n      \"system\": \"phone\",\n      \"value\": \"0648352638\",\n      \"use\": \"mobile\"\n    },\n    {\n      \"system\": \"email\",\n      \"value\": \"p.heuvel@gmail.com\",\n      \"use\": \"home\"\n    }\n  ],\n  \"gender\": \"male\",\n  \"birthDate\": \"1944-11-17\",\n  \"deceasedBoolean\": false,\n  \"address\": [\n    {\n      \"use\": \"home\",\n      \"line\": [\n        \"Van Egmondkade 23\"\n      ],\n      \"city\": \"Amsterdam\",\n      \"postalCode\": \"1024 RJ\",\n      \"country\": \"NLD\"\n    }\n  ],\n  \"maritalStatus\": {\n    \"coding\": [\n      {\n        \"system\": \"http://terminology.hl7.org/CodeSystem/v3-MaritalStatus\",\n        \"code\": \"M\",\n        \"display\": \"Married\"\n      }\n    ],\n    \"text\": \"Getrouwd\"\n  },\n  \"multipleBirthBoolean\": true,\n  \"contact\": [\n    {\n      \"relationship\": [\n        {\n          \"coding\": [\n            {\n              \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0131\",\n              \"code\": \"C\"\n            }\n          ]\n        }\n      ],\n      \"name\": {\n        \"use\": \"usual\",\n        \"family\": \"Abels\",\n        \"given\": [\n          \"Sarah\"\n        ]\n      },\n      \"telecom\": [\n        {\n          \"system\": \"phone\",\n          \"value\": \"0690383372\",\n          \"use\": \"mobile\"\n        }\n      ]\n    }\n  ],\n  \"communication\": [\n    {\n      \"language\": {\n        \"coding\": [\n          {\n            \"system\": \"urn:ietf:bcp:47\",\n            \"code\": \"nl\",\n            \"display\": \"Dutch\"\n          }\n        ],\n        \"text\": \"Nederlands\"\n      },\n      \"preferred\": true\n    }\n  ],\n  \"managingOrganization\": {\n    \"reference\": \"Organization/f001\",\n    \"display\": \"Burgers University Medical Centre\"\n  }\n}\nNote that JSON representations of resources begin with resourceType: \"&lt;resource&gt;\" to indicate the base FHIR resource type.\nIn XML representations of resources, the tag enclosing the data identifies the resource type (in this case, &lt;Patient ...&gt; ... &lt;/Patient&gt;).\nTypically, JSON is easier to read (both for humans and computers) than XML, so JSON is used primarily in FHIR for Research.\n\n\n\n\n\n\nImplementing FHIR in JSON and XML\n\n\n\n\n\nRegarding the JSON and XML representations of FHIR, implementers and researchers should be aware of the following:\n\nIn either JSON or XML, the underlying data of the FHIR resource are the same. You can convert between JSON and XML representations of FHIR data without loss of information.\nYou should use JSON by default when writing code to ingest in FHIR instances (or computable representations of FHIR profiles or resource definitions).\nWhen requesting FHIR data from a server, you can specify the format of the response.\nIf you work with R, the fhircrackr library uses the XML representation of FHIR resource instances. If you use this library, you will need basic familiarity with XML to extract data elements from the FHIR resource instances."
  },
  {
    "objectID": "modules/key-fhir-resources.html#the-observation-resource",
    "href": "modules/key-fhir-resources.html#the-observation-resource",
    "title": "Key FHIR Resources",
    "section": "5 The Observation resource",
    "text": "5 The Observation resource\nObservation is another commonly used FHIR resource. It captures vital signs, laboratory data, imaging results, clinical findings, device measurements, and more. Like the Patient resource, there is an Observation structure table:\n\n\n\nThe structure for FHIR observation resource.\n\n\nBelow is a JSON example Observation of high blood glucose levels:\n{\n  \"resourceType\": \"Observation\",\n  \"id\": \"f001\",\n  \"text\": {\n    \"status\": \"generated\",\n    \"div\": \"...\"\n  },\n  \"identifier\": [\n    {\n      \"use\": \"official\",\n      \"system\": \"http://www.bmc.nl/zorgportal/identifiers/observations\",\n      \"value\": \"6323\"\n    }\n  ],\n  \"status\": \"final\",\n  \"code\": {\n    \"coding\": [\n      {\n        \"system\": \"http://loinc.org\",\n        \"code\": \"15074-8\",\n        \"display\": \"Glucose [Moles/volume] in Blood\"\n      }\n    ]\n  },\n  \"subject\": {\n    \"reference\": \"Patient/f001\",\n    \"display\": \"P. van de Heuvel\"\n  },\n  \"effectivePeriod\": {\n    \"start\": \"2013-04-02T09:30:10+01:00\"\n  },\n  \"issued\": \"2013-04-03T15:30:10+01:00\",\n  \"performer\": [\n    {\n      \"reference\": \"Practitioner/f005\",\n      \"display\": \"A. Langeveld\"\n    }\n  ],\n  \"valueQuantity\": {\n    \"value\": 6.3,\n    \"unit\": \"mmol/l\",\n    \"system\": \"http://unitsofmeasure.org\",\n    \"code\": \"mmol/L\"\n  },\n  \"interpretation\": [\n    {\n      \"coding\": [\n        {\n          \"system\": \"http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation\",\n          \"code\": \"H\",\n          \"display\": \"High\"\n        }\n      ]\n    }\n  ],\n  \"referenceRange\": [\n    {\n      \"low\": {\n        \"value\": 3.1,\n        \"unit\": \"mmol/l\",\n        \"system\": \"http://unitsofmeasure.org\",\n        \"code\": \"mmol/L\"\n      },\n      \"high\": {\n        \"value\": 6.2,\n        \"unit\": \"mmol/l\",\n        \"system\": \"http://unitsofmeasure.org\",\n        \"code\": \"mmol/L\"\n      }\n    }\n  ]\n}\nBy observing that the resourceType is \"Observation\" and using the structure table above, you can interpret the JSON content as follows:\n\nObservation.id = f001: The id attribute from the grandparent class Resource. See accessing FHIR data for how to use a resource id.\nObservation.text: Human-targeted text in HTML that an EHR will display if FHIR software fails.\nObservation.status = final: A required code string. This indicates the observation is finalized.\nObservation.code: A required CodeableConcept, using LOINC for the example binding.\nObservation.subject: A Reference to another FHIR resource. In this case, it is the example Patient from earlier.\nObservation.valueQuantity: A supplied value[x] choice element for storing the result of the test. In this case, they use type Quantity to specify blood glucose concentration."
  },
  {
    "objectID": "modules/key-fhir-resources.html#the-bundle-resource",
    "href": "modules/key-fhir-resources.html#the-bundle-resource",
    "title": "Key FHIR Resources",
    "section": "6 The Bundle resource",
    "text": "6 The Bundle resource\nGrouping multiple FHIR instances into one package is often helpful, like grouping the blood-glucose Observation example above with the referenced Patient. The Bundle resource is often used for this in FHIR.\nIn an instance of Bundle, each grouped instance is stored inside Bundle.entry[i].resource. Find examples of Bundles here.\n\n\n\n\n\n\nBundle vs NDJSON\n\n\n\n\n\nYou may discover certain FHIR communities using NDJSON (Newline-Delimited JSON) instead of Bundle. In NDJSON, each FHIR resource is printed on one line, and a new line indicates the next FHIR resource. NDJSON is more efficient than Bundle for large data transfers, and, as of March 1st 2023, FHIR R5 includes NDJSON in Draft status. FHIR data in NDJSON will likely be relatively rare for the next few years as implementers catch up. Bundle is used more frequently, and can include pagination for large amounts of data."
  },
  {
    "objectID": "modules/key-fhir-resources.html#the-capabilitystatement-resource",
    "href": "modules/key-fhir-resources.html#the-capabilitystatement-resource",
    "title": "Key FHIR Resources",
    "section": "7 The CapabilityStatement resource",
    "text": "7 The CapabilityStatement resource\nA CapabilityStatement is a resource that contains metadata about a FHIR server, including what resources the server hosts and how to access them.\nCapabilityStatements provide information like:\n\nCapabilityStatement.url: The base URI for the FHIR server. This may also be the URI for capability statement itself, which includes the base URI for the server.\nCapabilityStatement.fhirVersion: The FHIR version that the API conforms to. In this case, the server is running FHIR 4.3.0 (also known as FHIR R4B) at the base URL. A FHIR server may service multiple FHIR versions, but each FHIR API will be serviced at a different base URL (e.g., FHIR R4 at https://fhir.example.com/R4/ and FHIR R4B at https://fhir.example.com/R4B/).\nCapabilityStatement.format: The encoding formats supported by the FHIR server. FHIR queries must specify one of these formats via the HTTP Accept Header.\nCapabilityStatement.implementationGuide: The implementation guides (IG) that the FHIR server conforms to. However, a server may be partially or fully compliant to an IG without listing it in the metadata.\nCapabilityStatement.rest[i].security.service: The RESTful security services required to access data on this server. This example uses SMART-on-FHIR, but other possibilities include OAuth or UDAP.\nCapabilityStatement.rest[i].resource.type: All FHIR resources supported by the server. Note: this does not include foundational resources such as CapabilityStatement or Bundle, but typically resources level 3 and higher.\nCapabilityStatement.rest[i].resource.interaction: The RESTful interactions available for that resource by the server. For example, the search interaction is a RESTful API action available in FHIR. The CapabilityStatement.rest[i].resource.searchParam field specifies what search parameters are possible.\n\nProperly implemented FHIR servers must provide an instance of CapabilityStatement at the /metadata endpoint.4 This provides a way for software to discover key information about the features of a given FHIR server. Note that the real-world capabilities of a FHIR server may not match its stated capabilities, so software that accesses FHIR servers should be resilient to deviations from the published CapabilityStatements."
  },
  {
    "objectID": "modules/key-fhir-resources.html#other-common-fhir-resources",
    "href": "modules/key-fhir-resources.html#other-common-fhir-resources",
    "title": "Key FHIR Resources",
    "section": "8 Other common FHIR resources:",
    "text": "8 Other common FHIR resources:\n\nCondition\n\nA problem, diagnosis, or clinical event. It should be the reason for a medical intervention and tie into a larger clinical workflow. There is some use-case overlap with Observation; an IG will provide better guidance.\n\nProcedure\n\nA medical activity performed on a patient, such as surgery, diagnostic procedures, or therapy. It should be a part of a clinical workflow.\n\nPractitioner\n\nAny individual providing healthcare or a related service, from physicians to receptionists to service animals.\n\nOrganization\n\nAny formal or informal group of entities acting towards a collective cause, such as hospitals, departments, corporations, or health insurance groups.\n\nComposition\n\nA set of FHIR resources that create a single coherent clinical statement, and usually acts as the skeleton for a document. This is often used in conjunction with a Bundle.\n\nExtension\n\nA FHIR resource composed of a definitive URL and an Extension.value[x] of any type. Almost all resources inherit an extension attribute from DomainResource.extension, and an IG should explain how to use it.\n\nStructureDefinition\n\nA FHIR resource that defines other FHIR resources. A structure definition instance exists for all FHIR resources, which allows for powerful dynamic programming and automated documentation.\n\nOperationDefinition\n\nA FHIR resource that defines FHIR operations in addition to traditional REST operations. OperationDefinitions often begin with a dollar sign ($). For example, https://fhir.example.com/Patient/$match will perform a patient matching operation. This resource allows for powerful dynamic programming for FHIR operations."
  },
  {
    "objectID": "modules/key-fhir-resources.html#footnotes",
    "href": "modules/key-fhir-resources.html#footnotes",
    "title": "Key FHIR Resources",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nWhen systems exchange information with unambiguous and shared meaning, it is called semantic interoperability.↩︎\nIn contrast, HL7 V2 messages use their own proprietary encoding format, which cannot be parsed without a purpose-built software or custom code.↩︎\nA cardinality of 0..* might be appropriate for a “middle name” element, where a person might have no middle name, one middle name, or multiple middle names.↩︎\nhttp://hapi.fhir.org/baseR4/metadata is a real-world example of a CapabilityStatement instance.↩︎"
  },
  {
    "objectID": "modules/redcap-fhir.html",
    "href": "modules/redcap-fhir.html",
    "title": "REDCap on FHIR",
    "section": "",
    "text": "Learning objectives\n\n\n\n\n\n    Understand how REDCap can integrate with FHIR to support research.\n\n\n    Learn about the roles and approaches that may lead to successful REDCap on FHIR implementations.\nA. C. Cheng et al. (2021) describe the development of “REDCap on FHIR,” an approach for integrating REDCap with a FHIR-enabled sever.\nIn their manuscript, A. C. Cheng et al. (2021) describe the development of the Clinical Data Interoperability Services (CDIS), which facilitates the exchange of data between REDCap and any EHR via the FHIR API. As of September 2022, 40 institutions in the US and Canada have integrated REDCap with their Epic or Cerner EHR (Alex C. Cheng et al. 2023), which represents a small portion of the total number of institutions that have implemented REDCap. However, integrating REDCap with FHIR can provide significant value to researchers by making clinical data more accessible without requiring manually querying FHIR endpoints.\nREDCap on FHIR/CDIS includes two approaches:\nAccording to A. C. Cheng et al. (2021), both CDP and CDM can significantly reduce manual data entry into REDCap, and is reusable between projects at Vanderbilt University Medical Center (VUMC) without the need for support from IT staff."
  },
  {
    "objectID": "modules/redcap-fhir.html#implementation-approach",
    "href": "modules/redcap-fhir.html#implementation-approach",
    "title": "REDCap on FHIR",
    "section": "Implementation approach",
    "text": "Implementation approach\nDue to the relatively low percentage of institutions that have implemented REDCap on FHIR, it is unlikely this is available at your institution. If you are interested in pursuing an implementation at your institution, the following approaches may be useful.\nHawley et al. (2021) describe a usability and implementation study at the Centre for Addiction and Mental Health (CAMH) in which they used REDCap to capture self-assessments from patients and transfer the data into a Cerner EHR. When a patient arrived the process saved time, improved the accuracy of data going into the EHR, and made the data accessible in real-time. While not specific to FHIR, the useful roles and responsibilities for implementing REDCap listed in this paper should apply to REDCap on FHIR implementations as well:\n\n\nClinical REDCap administrator: Clinical REDCap staff responsible for account creation, modification, and suspension for all user types. Responsible for moving projects and draft changes to production. Limited to 2-3 staff members.\nProject developer administrator: Clinical REDCap staff responsible for creating REDCap projects and associated forms or surveys. Leads project validation to be carried out in collaboration with clinical stakeholders.\nService administrator: Specialized account for managing secure services post data collection (e.g., application programming interface data export to electronic health record).\nClinical data lead: Clinical staff responsible for monitoring the integrity of the data, providing clinic-specific training to clinic users, supporting minor technical issues in the clinic, facilitating project validation, submitting project change requests, approving subordinate account requests, and serving as the main point of contact for developers and administrators.\nClinical care provider: Clinical staff responsible for the administration and review of clinical assessments; can enter data that have been collected on paper into REDCap.\nClinical assistant: Clinical support staff responsible for administering patient survey queue in the clinic and providing simple technical assistance.\n\n\nAdditionally, for REDCap on FHIR, close collaboration with the EHR implementation team and informaticists who are familiar with your institution’s EHR is necessary.\nMaré et al. (2022) focused on the adoption of REDCap in academic and clinical environments identified similar roles and strategies to facilitate the process. They identified the following methods to support new REDCap users, listed below. Again, these are not specific to REDCap on FHIR but are still applicable.\n\n\ntop-down organizational support;\nsecure and reliable application, hosting infrastructure, and systems administration; an enabling and accessible REDCap support team;\nregular hands-on training workshops covering REDCap project setup and data collection instrument design techniques;\nannual local symposia to promote networking and awareness of all the latest software features and best practices for using them;\nparticipation in REDCap Consortium activities;\nand regular and ongoing mentorship from members of the Vanderbilt University Medical Center.\n\n\nThe authors also used two strategies to support adoption of REDCap:\n\nBuilding trust among researchers in the security and reliability of REDCap through several layers of back-up should any component fail and simulated data loss and retrieval exercises.\nEstablishing a REDCap administrator that acted as a dedicated, go-to person that could answer researchers’ questions and offer consultations."
  },
  {
    "objectID": "modules/redcap-fhir.html#conclusion",
    "href": "modules/redcap-fhir.html#conclusion",
    "title": "REDCap on FHIR",
    "section": "Conclusion",
    "text": "Conclusion\nREDCap and FHIR have global communities of users with active forums for getting support:\n\nThe REDCap Community Site provides a resource for REDCap administrators across institutions to assist each other.\nThe FHIR community may also be able to assist with the FHIR-specific aspects of integration with REDCap.\n\nWhen used together, FHIR can help researchers using REDCap to streamline their data collection and storage processes, find study participants, and develop study cohorts with greater accuracy."
  },
  {
    "objectID": "modules/redcap-intro.html",
    "href": "modules/redcap-intro.html",
    "title": "Introduction to REDCap",
    "section": "",
    "text": "Learning objectives\n\n\n\n\n\n    Understand what REDCap is and how it can support research using clinical data.\nREDCap (which stands for “Research Electronic Data Capture”) is:\nIt was designed in 2004 by researchers at Vanderbilt University that needed to capture personal health information in a secure and reliable format. REDCap provides functionality common to other web-based survey platforms (e.g., SurveyMonkey or Qualtrics) with a number of additional features that are specific for research. More background information on REDCap is available in Patridge and Bardyn (2018), and at https://projectredcap.org/software/.\nREDCap has grown into a global community with 3200 partner institutions in 128 countries and more than 56,000 projects (Harris et al. 2019). To determine if your institution has REDCap, you can search here or ask your research informatics leader. Your institution’s IRB is also likely aware if REDCap is actively being used.\nREDCap can be run inside an institution’s firewall and may be configured to support storing identified health information for research purposes."
  },
  {
    "objectID": "modules/redcap-intro.html#use-cases",
    "href": "modules/redcap-intro.html#use-cases",
    "title": "Introduction to REDCap",
    "section": "Use cases",
    "text": "Use cases\nCommon research uses of REDCap include:\n\nCollecting self-reported survey data from study participants (patients or providers)\nDigital capture and storage of informed consent documents\nEntering, storing, and querying clinical information, like for a disease registry (for example, see Metke-Jimenez and Hansen (2019) below or @shalhout2022) or a vaccine status tracker (see Lenert et al. (2023) described below)\nCase report forms (for example, see Cheng et al. (2023) below)\nChart abstraction (for example, see Mayer et al. (2022))\n\nA more detailed look at example use cases follows.\n\nExample use case: vaccine status tracker\nLenert et al. (2023) tested a population-level vaccination status tracker, called VACtrac, using a combination of two approaches:\n\nA FHIR-compatible copy of the existing statewide Immunization Information System (IIS), with a REDCap data warehouse\nA REDCap health management program with a list of patients for providers to maintain communication with and update vaccination status records, either through a Bulk FHIR update or one-time query.\n\nVACtrac uses REDCap Clinical Data Interoperability Services (CDIS) FHIR plug-in for both Epic and Cerner EHRs to extract patient information. The REDCap database can be accessed and updated by multiple providers, so the burden of maintaining vaccination information can be spread among multiple providers.\nThe REDCap vaccination status tracker is publicly available for adaption in other institutions.\n\n\nExample use case: cancer registry\nMetke-Jimenez and Hansen (2019) implemented FHIRCap, a transformation engine, to translate data in a REDCap project to FHIR resources. The authors tested FHIRCap on an existing REDCap form and database for a cancer registry. They were able to transform the information from REDCap to FHIR resources and then map the codes to SNOMED CT. While the process was manual and time intensive to set up, the rules only have to be written once for a project and can be used as long as the REDCap form doesn’t change.\n\n\nExample use case: case report forms\nCheng et al. (2023) describe how REDCap can be used to collect electronic case report forms, and how data elements on these forms may be populated automatically using REDCap’s integration with FHIR. Automatic population of these forms has the potential to increase accuracy and decrease the burden of manual data entry.\nNote that it is also possible to extract data from an EHR or other clinical system without FHIR, and load this into REDCap using its import capability."
  },
  {
    "objectID": "modules/redcap-intro.html#next-steps",
    "href": "modules/redcap-intro.html#next-steps",
    "title": "Introduction to REDCap",
    "section": "Next steps",
    "text": "Next steps\nPlease see the REDCap on FHIR module for more information on using REDCap with FHIR to directly integrate with clinical data."
  },
  {
    "objectID": "modules/smart-on-fhir-intro.html",
    "href": "modules/smart-on-fhir-intro.html",
    "title": "Introduction",
    "section": "",
    "text": "Learning objectives\n\n\n\nAfter reading this module, you will be able to answer the following questions:\n\n\n    What characteristic of research suggests SMART on FHIR may be helpful?\n    Research that requires integration with an EHR may benefit from SMART on FHIR.\n\n\n    What has SMART on FHIR already been used for in published research?\n    SMART on FHIR has been used to integrate new CDS systems into EHRs and integrate additional data sources like patient-reported outcomes into EHRs.\nSMART on FHIR1 was introduced in 2016 “to enable medical applications to be written once and run unmodified across different healthcare IT systems.” (Mandel et al. 2016)\nTo enable “write once, run anywhere” applications, SMART on FHIR uses FHIR along with common web technologies, such as OAuth 2 and OpenID Connect. Many EHRs–including those from Cerner, Epic, and MEDITECH–support SMART on FHIR applications. Researchers have successfully used SMART on FHIR applications across multiple EHRs (Wesley et al. 2021), though implementation differences may require additional work to resolve."
  },
  {
    "objectID": "modules/smart-on-fhir-intro.html#research-use-cases",
    "href": "modules/smart-on-fhir-intro.html#research-use-cases",
    "title": "Introduction",
    "section": "1 Research use cases",
    "text": "1 Research use cases\n\n1.1 Integrating with an EHR\nResearchers primarily use SMART on FHIR to integrate with an EHR. For example, several researchers have trialed new clinical decision support (CDS) systems using SMART on FHIR. They use SMART on FHIR to integrate their CDS tool into EHRs without modifying the EHRs and without creating unique versions for each EHR vendor.\nTarumi et al. (2021) used this approach to show that an AI-driven CDS could integrate with Epic via SMART on FHIR, and Curran et al. (2020) used this approach to prototype a CDS system for chronic disease management.\n\n\n1.2 Adding data to an EHR workflow\nResearchers also use SMART on FHIR to add data to EHR workflows. For example, a patient may use a web or smartphone app to report their outcomes data. A SMART on FHIR application can make this data accessible from an EHR (Wesley et al. 2021).\nSMART on FHIR can also help researchers integrate data into an EHR that the EHR does not natively support. For example, Watkins and Eilbeck (2020) discuss how genetic testing could be better-integrated with EHRs using SMART on FHIR and CDS Hooks (see below).\n\n\n1.3 Accessing bulk data\nSMART on FHIR facilitated Bulk Data Access (see below) may provide a new way for researchers to access population-level data. A researcher may want to gather population data from multiple institutions that do not store their data using a shared common data model. However, if these EHRs use FHIR, they likely use the widely implemented US Core FHIR Implementation Guide. SMART on FHIR with Bulk Data Access would enable researchers to access the data as US Core-conforming FHIR resource instances across these institutions.\nNote, SMART on FHIR used for Bulk Data Access is relatively new and has not yet appeared in peer-reviewed research publications.\n\n\n1.4 SMART on FHIR app gallary\nThe SMART App Gallery lists a number of SMART on FHIR applications, which may provide additional ideas on how SMART on FHIR could be used for research."
  },
  {
    "objectID": "modules/smart-on-fhir-intro.html#capabilities",
    "href": "modules/smart-on-fhir-intro.html#capabilities",
    "title": "Introduction",
    "section": "2 Capabilities",
    "text": "2 Capabilities\nSMART on FHIR pulls together existing standards to enable third-party applications to integrate with EHRs. These include:\n\nSMART on FHIR capabilities, adapted from Mandel et al. (2016).\n\n\n\n\n\n\nCapability\nApproach\n\n\n\n\nAuthorization\nThe OAuth 2 web standard enables third-party SMART on FHIR applications to access specific sets of data from an EHR.\n\n\nAuthentication\nThe OpenID Connect web standard allows a SMART on FHIR application to tell the EHR who is using it (e.g., to allow a patient to access their own health data via SMART on FHIR).\n\n\nData models\nThe standard set of FHIR resources are used to represent data. Additional customization can occur via FHIR profiles.\n\n\nProfiles\nUS Core Data Profiles or other FHIR Implementation Guides can be used to provide additional customization on top of the standard FHIR resources.\n\n\nData access\nOnce a third-party application is authenticated and authorized, the standard FHIR REST API is used to exchange data.\n\n\nData format\nData are formatted using the standard FHIR JSON or XML formats.\n\n\nEHR UI integration\nthird-party applications can be launched from within an EHR using SMART App Launch.\n\n\nEHR backend integration\nthird-party applications can launch in an EHR without an EHR user interacting directly with it using SMART Backend Services."
  },
  {
    "objectID": "modules/smart-on-fhir-intro.html#related-technologies",
    "href": "modules/smart-on-fhir-intro.html#related-technologies",
    "title": "Introduction",
    "section": "3 Related technologies",
    "text": "3 Related technologies\n\n3.1 Bulk Data Access\nThe Bulk Data Access standard enables researchers to retrieve large volumes of data from a patient population in an EHR. For example, “a health system may want to periodically retrieve updated clinical data from an EHR to a research database.”\nHL7 first released the Bulk Data Access standard in 2019 and released v2 in November 2022.\nMany EHR vendors, including Allscripts, Athena Health, Cerner, and Epic, have adopted this standard. In January 2023, ONC announced its support for this standard.\nThe Bulk Data Access standard is part of the SMART ecosystem, and SMART on FHIR can be used to authenticate and authorize applications that retrieve bulk data automatically.\n\n\n\n\n\n\nFor more information, see this overview presentation and the HL7 specification.\n\n\n\n\n\n3.2 CDS Hooks\nCDS Hooks is an HL7 standard that can support SMART on FHIR application integration with EHRs. HL7 released CDS Hooks v2 in August 2022.\nCDS Hooks allows an action in an EHR to trigger an action in a third-party application. Thiess et al. (2022) writes:\n\nTo make CDS accessible when it is needed, the standard defines several hooks that occur through clinicians interacting with the EHR. For example, the patient-view hook is triggered when the patient record is opened, or the order-select hook is triggered when the prescriber selects an order (e.g., medication or procedure).\n\nThe standard includes ways for the third-party application to get contextual information related to the hook, like the patient data being viewed. The application can then send information back to the EHR. Thiess et al. (2022) continues:\n\nThe CDS Hooks service provides a response in the form of a “Card” that is displayed inside the EHR. There are three types of cards: (i) information cards provide patient-specific information, such as an assessment or reference information; (ii) suggestion cards provide a recommended action (e.g., an order) in a FHIR resource; and (iii) app cards provide a link to launch a SMART on FHIR app.\n\n\nFurther reading\n\nMorgan et al. (2022) demonstrate that CDS Hooks can increase utilization of SMART on FHIR applications.\nStrasberg et al. (2021) describes additional background information on how CDS Hooks function.\nThiess et al. (2022) provides more details on how CDS Hooks can be integrated with an EHR and a SMART on FHIR application."
  },
  {
    "objectID": "modules/smart-on-fhir-intro.html#implementation-considerations",
    "href": "modules/smart-on-fhir-intro.html#implementation-considerations",
    "title": "Introduction",
    "section": "4 Implementation considerations",
    "text": "4 Implementation considerations\nIf you have a research use case that is a good fit with SMART on FHIR, you will likely work with a software engineer and your institution’s IT experts to investigate integrating with the relevant EHR(s). If your institution has staff with experience integrating SMART on FHIR applications, consult with them early when developing your research approach.\nSMART on FHIR applications that integrate with an EHR’s user interface via SMART App Launch are often web applications. SMART on FHIR applications that run without being triggered by user input in an EHR, including applications that use Bulk Data Access, are often backend services.\nIntegrating SMART on FHIR backend applications with EHRs is often less complex than integrating SMART on FHIR web applications. However, in both cases, there may be EHR-specific requirements including administrative approval.\nAlso, consider security and privacy early when developing your research approach. Take steps to ensure proper data storage and access as you would with any software that handles sensitive data. In addition to IRB approval, you may need approval related to privacy and information security. If your institution has not worked with SMART on FHIR before, it may not have a well-defined process for getting the appropriate approvals. In this case, it may be helpful to identify researchers from other institutions who have used SMART on FHIR in a similar context, and cite their work to demonstrate prior successful use of this technology when discussing with the IRB and decision-makers at your institution.\nPlease see SMART on FHIR Technical Details for more technical implementation on using SMART on FHIR and related standards."
  },
  {
    "objectID": "modules/smart-on-fhir-intro.html#footnotes",
    "href": "modules/smart-on-fhir-intro.html#footnotes",
    "title": "Introduction",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSMART stands for Substitutable Medical Applications and Reusable Technologies.↩︎"
  },
  {
    "objectID": "modules/smart-on-fhir-tech.html",
    "href": "modules/smart-on-fhir-tech.html",
    "title": "Technical Details",
    "section": "",
    "text": "Relevant roles:\n\n\n\n\n    Software Engineer\nThis module is meant for technical users who would like to start working hands-on with SMART on FHIR. Read the SMART on FHIR Introduction before continuing."
  },
  {
    "objectID": "modules/smart-on-fhir-tech.html#high-level-technical-considerations",
    "href": "modules/smart-on-fhir-tech.html#high-level-technical-considerations",
    "title": "Technical Details",
    "section": "1 High-level technical considerations",
    "text": "1 High-level technical considerations\n\n1.1 Authorization pattern\nAuthorization ensures that the user of an application has permission to perform specific actions. For SMART-on-FHIR applications, it ensures the user is allowed to access the FHIR data they are requesting.\nYour SMART on FHIR application will use one of the authorization patterns defined by the SMART App Launch specification.\n\nSMART App Launch supports applications that launch in an EHR or launch standalone:\n\nEHR Launch: A user launches the application within the EHR from an existing EHR session (e.g., custom a clinical decision support application).\nStandalone Launch: A user launches the application directly, like in a smartphone or stand-alone website (e.g., Apple’s Health app on the iPhone).\n\nSMART Backend Services support applications that run autonomously, like an automated data pipeline. SMART Backend Services are also used for user-facing applications where the FHIR authorization service does not need the user’s information (e.g., a dashboard application).\n\n\n\n1.2 Software libraries\nOpen-source libraries exist in many programming languages to help developers work with FHIR data and SMART App Launch.\ndocs.smarthealthit.org lists the following software libraries that support SMART App Launch:\n\n\nJavaScript or TypeScript: Client-side and server-side library with support for SMART App Launch\nNode.js from Vermonster: An alternative Node.js implementation\nPython: Server-side Python library with support for SMART App Launch\nR\nRuby\nSwift (iOS)\nJava\n.NET: FHIR client library from Firely\n\n\nHL7’s Confluence site also has a list of FHIR-related software libraries.\nYou can create a SMART on FHIR application without relying on third-party libraries, but using a third-party library will likely save development time.\n\n\n1.3 Security and privacy\nFHIR servers will likely return health data that can be linked to an individual. If so, rules around handling Protected Health Information (PHI) apply. Your institution’s IRB will also have policies for handling sensitive patient data used in research.\nDetermine the security and privacy approach for health data early in your design process before working with any real patient data. You can use synthetic data and a test FHIR server during development and testing.\n\n\n1.4 Human-centered design\nIf you are developing a user-facing application, consider a human-centered design approach. From ISO 9241-210:2019:\n\nHuman-centered design is an approach to interactive systems development that aims to make systems usable and useful by focusing on the users, their needs and requirements, and by applying human factors/ergonomics, and usability knowledge and techniques. This approach enhances effectiveness and efficiency, improves human well-being, user satisfaction, accessibility and sustainability; and counteracts possible adverse effects of use on human health, safety and performance.\n\nFor more information on human-centered design in healthcare research, see Göttgens and Oertelt-Prigione (2021)."
  },
  {
    "objectID": "modules/smart-on-fhir-tech.html#example-smart-on-fhir-app",
    "href": "modules/smart-on-fhir-tech.html#example-smart-on-fhir-app",
    "title": "Technical Details",
    "section": "2 Example SMART on FHIR app",
    "text": "2 Example SMART on FHIR app\nFollow the steps below to create a simple browser-based SMART on FHIR app (based on this tutorial) using JavaScript. This example will use SMART App Launch’s EHR Launch flow.\n\n2.1 Prerequisites\nYou need:\n\na text editor\na way to run a local HTTP server (described below)\nfamiliarity with HTML, JavaScript, and the command line\n\n\n\n2.2 Instructions\nBelow are the instructions for getting an example SMART on FHIR app running locally. We provide a detailed explanation of how this works after the instructions.\n\nStep 1: Create a project folder and files\nCreate a folder with two files:\n\nlaunch.html\nindex.html\n\n\n\nStep 2: Create the launch page\nAdd the following content to launch.html:\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\" /&gt;\n        &lt;title&gt;Launch My APP&lt;/title&gt;\n        &lt;!-- Use the SMART on FHIR JavaScript library to handle authorization --&gt;\n        &lt;script src=\"https://cdn.jsdelivr.net/npm/fhirclient/build/fhir-client.js\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;script&gt;\n            FHIR.oauth2.authorize({\n\n              // The client_id that you should have obtained after registering a client at\n              // the EHR.\n              //\n              // Note that this can be an arbitrary string when testing with\n              // http://launch.smarthealthit.org.\n              clientId: \"my_web_app\",\n\n              // The scopes that you request from the EHR. In this case we want to:\n              // launch            - Get the launch context\n              // openid & fhirUser - Get the current user\n              // patient/*.read    - Read patient data\n              scope: \"launch openid fhirUser patient/*.read\",\n\n              // Typically, if your redirectUri points to the root of the current directory\n              // (where the launchUri is), you can omit this option because the default value is\n              // \".\". However, some servers do not support directory indexes so \".\" and \"./\"\n              // will not automatically map to the \"index.html\" file in that directory.\n              redirectUri: \"index.html\"\n            });\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\nNote that the FHIR.oauth2.authorize() method will automatically redirect back to the authorization server (launch.smarthealthit.org for this example). This means that you will never see this page rendered in your browser.\n\n\nStep 3: Create the “app” page\nAdd the following contents to index.html. This will be the testing “app” for this example:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n        &lt;title&gt;Example SMART App&lt;/title&gt;\n\n        &lt;!-- Use the SMART on FHIR JavaScript library --&gt;\n        &lt;script src=\"https://cdn.jsdelivr.net/npm/fhirclient/build/fhir-client.js\"&gt;&lt;/script&gt;\n\n        &lt;!-- Use Bootstrap for styling --&gt;\n        &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\"&gt;\n        &lt;style&gt;\n            /* Additional styling for text boxes that will show JSON data */\n            #patient, #meds {\n                font-family: Monaco, monospace;\n                white-space: pre;\n                font-size: 13px;\n                height: 38vh;\n                overflow: scroll;\n                border: 1px solid #CCC;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;nav class=\"navbar bg-primary\" style=\"margin-bottom: 2vh\"&gt;\n          &lt;div class=\"container-fluid\"&gt;\n            &lt;span class=\"navbar-brand mb-0 h1 text-white\"&gt;Example SMART on FHIR Application&lt;/span&gt;\n          &lt;/div&gt;\n        &lt;/nav&gt;\n        &lt;div class=\"container\"&gt;\n            &lt;h4&gt;Current Patient&lt;/h4&gt;\n            &lt;div id=\"patient\"&gt;Loading...&lt;/div&gt;\n            &lt;br/&gt;\n            &lt;h4&gt;Medications&lt;/h4&gt;\n            &lt;div id=\"meds\"&gt;Loading...&lt;/div&gt;\n            &lt;script type=\"text/javascript\"&gt;\n                FHIR.oauth2.ready().then(function(client) {\n                    \n                    // Render the current patient (or any error)\n                    client.patient.read().then(\n                        function(pt) {\n                            document.getElementById(\"patient\").innerText = JSON.stringify(pt, null, 4);\n                        },\n                        function(error) {\n                            document.getElementById(\"patient\").innerText = error.stack;\n                        }\n                    );\n                    \n                    // Get MedicationRequests for the selected patient\n                    client.request(\"/MedicationRequest?patient=\" + client.patient.id, {\n                        resolveReferences: [ \"medicationReference\" ],\n                        graph: true\n                    })\n                    \n                    // Reject if no MedicationRequests are found\n                    .then(function(data) {\n                        if (!data.entry || !data.entry.length) {\n                            throw new Error(\"No medications found for the selected patient\");\n                        }\n                        return data.entry;\n                    })\n                    \n\n                    // Render the current patient's medications (or any error)\n                    .then(\n                        function(meds) {\n                            document.getElementById(\"meds\").innerText = JSON.stringify(meds, null, 4);\n                        },\n                        function(error) {\n                            document.getElementById(\"meds\").innerText = error.stack;\n                        }\n                    );\n\n                }).catch(console.error);\n            &lt;/script&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n\n\nStep 4: Run a local web server\n\nOpen a command prompt window and go to the folder you created.\nRun a command to start a local web server on port 8000. For example, if you have Python 3 on your system run:\npython3 -m http.server 8000\nFor Python 2, run:\npython -m SimpleHTTPServer 8000\n\nFor more information on using Python as a local web server, review Mozilla’s test server guide. If you don’t have Python, you can use Ruby or a Node package.\nOnce you are running the server, navigate to http://localhost:8000. You should see a page that looks like this:\n\nNote: data will not load by opening index.html in your browser. To load data, you must go through the EHR launch flow (see next step).\n\n\nStep 5: Test with launch.smarthealthit.org\nGo to https://launch.smarthealthit.org, enter localhost:8000/launch.html for in the “App’s Launch URL” field, and click “Launch”.\nYou should see the following happen:\n\n\n\n\n2.3 App launch process explanation\nHere’s a visual diagram of the process that occurs when you launch your example application with launch.smarthealthit.org:\n\n\n\n\n\nsequenceDiagram\n    participant A as localhost:8000/launch.html\n    participant B as launch.smarthealthit.org\n    participant C as localhost:8000/index.html\n    participant D as FHIR Server\n\n    B -&gt;&gt; B: Launch triggered via test website\n    B -&gt;&gt; A: Launch requested\n    A -&gt;&gt; B: Authorization request\n    B -&gt;&gt; B: Dummy provider log-in and patient selection\n    B -&gt;&gt; C: Authorization granted\n    C -&gt;&gt; B: Access token request\n    B --&gt;&gt; C: Access token response\n    C -&gt;&gt; D: Request Patient\n    D --&gt;&gt; C: Response with Patient JSON\n    C -&gt;&gt; D: Request MedicationRequests\n    D --&gt;&gt; C: Response with MedicationRequest JSON\n\n\n\n\n\n\nHere are the details of this process:\n\nYou trigger the application launch by clicking “Launch” on launch.smarthealthit.org. This simulates an EHR user triggering a SMART on FHIR app launch using a link in the EHR.\nIn this case, launch.smarthealthit.org redirects your browser to http://localhost:8000/launch.html?iss=http%3A%2F%2Flaunch.smarthealthit.org%2Fv%2Fr4%2Ffhir&launch=....\nThe SMART App Launch documentation explains the two parameters in this URL:\n\n\niss: Identifies the EHR’s FHIR endpoint, which the app can use to obtain additional details about the EHR including its authorization URL.\nlaunch: Opaque identifier for this specific launch and any EHR context associated with it. This parameter must be communicated back to the EHR at authorization time.\n\n\nhttp://localhost:8000/launch.html loads in your browser, and FHIR.oauth2.authorize() is called with the options defined in launch.html’s source code. The authorize() method obtains an authorization code from the testing server’s “authorize” endpoint. In this case, it does this by triggering a browser redirect to https://launch.smarthealthit.org/v/r4/auth/authorize with a number of parameters.\nYour browser loads a page on the launch.smarthealthit.org server simulating provider log-in and patient selection. (Note: If this application was being used in a real-world EHR, the provider would be logged in through the EHR and the selected patient would be whichever patient the provider was viewing when they launched the app in the EHR.)\nThis dummy flow gathers the information needed for launch.smarthealthit.org to provide the example application with the authorization code. It does this by redirecting your browser to localhost:8000/index.html?code=...&state=.... It knows to take you to localhost:8000/index.html because you specified the parameter redirectUri: \"index.html\" in the source code of launch.html.\nhttp://localhost:8000/index.html loads in your browser and calls FHIR.oauth2.ready(). This creates a Client instance that handles obtaining and refreshing the OAuth access token needed to authorize access to the FHIR server, and making requests to the FHIR server with the proper headers.\nIn this case, a call is made to https://launch.smarthealthit.org/v/r4/auth/token, which responds with the authorization token that must be passed along with any requests for FHIR data.\nhttp://localhost:8000/index.html calls client.patient.read() to request the Patient resource instance from the FHIR server (in this case, this results in a call to https://launch.smarthealthit.org/v/r4/fhir/Patient/39234650-0229-4aee-975b-c8ee68bab40b) and displays the raw JSON returned by the server. Note that the read() method automatically includes the authorization token from (4).\nhttp://localhost:8000/index.html calls client.request(...) to request the MedicationRequest resource instances from the FHIR server (in this case, this results in a call to https://launch.smarthealthit.org/v/r4/fhir/MedicationRequest?patient=39234650-0229-4aee-975b-c8ee68bab40b) and displays the raw JSON returned by the server. Note that the request() method automatically includes the authorization token from (4).\n\nNow that the application has access to FHIR data, common front-end web development techniques could be used to create an application that utilizes this data.\nThis example assumes a SMART on FHIR-enabled server (like the https://launch.smarthealthit.org testing server used above). See this tutorial for more information on setting up a SMART on FHIR-enabled server.\nAdditionally, Cerner’s browser-based app tutorial provides more detail on setting up a browser-based SMART on FHIR application."
  },
  {
    "objectID": "modules/smart-on-fhir-tech.html#additional-resources",
    "href": "modules/smart-on-fhir-tech.html#additional-resources",
    "title": "Technical Details",
    "section": "3 Additional resources",
    "text": "3 Additional resources\nSeveral resources are listed at docs.smarthealthit.org, including additional tutorials, test environments, vendor sandboxes, and sample apps.\nThere are also a few recommendations for support on docs.smarthealthit.org:\n\n\nFHIR Discussion Board (SMART Stream)\nSMART on FHIR community mailing list\n\n\nFor developers interested in using SMART on FHIR with Bulk Data Access, there is a tutorial on using Bulk Data Access to export data to access via SQL."
  },
  {
    "objectID": "modules/synthea-customizing.html",
    "href": "modules/synthea-customizing.html",
    "title": "Customizing Synthea Data",
    "section": "",
    "text": "Learning objectives\n\n\n\n\n\n    Understand the options that are available for customizing Synthea to fit a use case.\nWhile data generated by Synthea may be valuable for a number of different use cases, out of the box it may not address everyone’s. If your needs are completely different from what Synthea offers then it might not be the best option, but if the data is close and just needs a little bit more, there are multiple approaches to customizing it. The best approach will depend on the specifics of your use case.\nThis page describes a few of the options available for customizing output from Synthea. No Java programming experience required."
  },
  {
    "objectID": "modules/synthea-customizing.html#creating-and-editing-modules",
    "href": "modules/synthea-customizing.html#creating-and-editing-modules",
    "title": "Customizing Synthea Data",
    "section": "1 Creating and Editing Modules",
    "text": "1 Creating and Editing Modules\nFor the most detailed and up-to-date guidance on creating and editing modules, see the Generic Module Framework section on the Synthea wiki.\nWhile the module JSONs can technically be written by hand, we strongly recommend using the Module Builder to edit modules graphically.\nBefore starting with the module builder, we recommend watching a short video introduction to the Module Builder, and reading through a module builder tutorial on the Synthea Wiki.\n\n1.1 Creating a New Module\nIn the Module Builder, click the “New Module” button in the upper left. This will open a new tab in the builder with the simplest possible module: an Initial state that transitions directly to a Terminal state.\n\nEither state can be clicked on to select it and change the name, type, transition, or other properties via the sidebar. As you familiarize yourself with the module builder, try clicking on the various fields to see what options are available. No changes here can directly affect Synthea, so don’t worry, it is completely impossible to break anything (though it is possible to lose work, so we recommend downloading work-in-progress modules to a file often). If you make a mistake, nearly any change can be undone with the Undo button.\nTo add new states to the module, click the “+ Add State” button in the upper right of the editor. This will do slightly different things based on what is currently selected in the module graph:\n\nIf nothing is selected, the new state will be added off to the side. You must manually connect other states to it, and it to other states by editing the transitions.\nIf a state is selected, the new state will be added “at the end” of the selected state. The selected state will now transition directly to the new state, and the new state will have the original transition from the selected state.\nIf a transition arrow is selected, the new state will be added “inside” the transition. The transition will now point to the new state, and the new state will transition directly to the original target of the transition.\n\n\n\n1.2 Editing an Existing Module\nTo load an existing module for editing, first click the “Open Module” button at the top of the Module Builder. From the load module screen there are a few options:\n\nThe “Core Modules” and “Submodules” are a good first step for exploring the various modules available.\nThe “GitHub modules” tab loads modules directly from various branches on the core Synthea repository on GitHub.\nYou can also drag & drop a module JSON file onto the modal, click to open a file browser to select a JSON file, or paste the JSON content of the file into the “Paste JSON” tab.\nThe “Local Storage” and “My Modules” tabs will be empty initially, but as you use the module builder these may be populated with modules you edit.\n\nOnce a module is loaded, you can add, edit, or remove states just as you would if you were creating a new module. Note that no matter how you load a module into the module builder, you are editing a copy. As before, this means you should feel free to experiment without worrying about breaking anything, but do download your module regularly to make sure you don’t lose work if something goes wrong.\n\n\n1.3 Loading Modules Into Synthea\nModules in Synthea are stored in the src/main/resources/modules folder under the base synthea directory. Submodules are stored in further subfolders under this. If your new or modified module is a top-level module and is expected to run for all patients starting at birth, make sure it is in the src/main/resources/modules folder. If you are modifying an existing module, make sure the name is exactly the same (in terms of capitalization, spaces vs underscores, etc) and you completely replace the file in its original location.\nOnce your module has been loaded, no special command line flags are necessary. Simply re-run Synthea with your desired configuration and it should pick up the new module immediately.\n\n\n\n\n\n\nCommon Issues / Frequently Asked Questions\n\n\n\n\n\n\nI created a module with just a Condition/Observation/Procedure but it doesn’t show up in records. Why not?\n\nMost likely the issue is that the state is being processed and the record entry is added immediately at birth, but then filtered out at export time. By default Synthea only keeps the last 10 years of history when a patient is exported. This setting is driven by the configuration item exporter.years_of_history. This setting can be changed either on the command line with flag --exporter.years_of_history=N or if using the developer setup, in the configuration file at src/main/resources/synthea.properties. We recommend setting this option to 0, meaning “keep all history”, while creating and debugging a new module.\n\nWhy isn’t Synthea processing my module?\n\nFirst, make sure you are not encountering the same issue as the previous question, where your module is being processed but the record entries are filtered out. Next, make sure the module is actually being loaded - watch the list of modules being loaded at startup and confirm your new module is in that list. It may be useful to temporarily remove other modules to speed up the process.\n\nHow can I run only my module and none of the default modules?\n\nGenerally this is not recommended as there are dependencies between modules which may be non-obvious and removing some can result in unexpected behavior, errors, or crashes. Also note that some of the modules are included as part of the core engine and cannot be easily disabled. However if for debugging purposes you would like to disable the default modules, the best approach is to remove the files from src/main/resources/modules (or move them somewhere else).\n\n\nIf your module still does not work as expected, please feel free to post a discussion item on the Synthea GitHub to request assistance. Make sure to include as much information as possible, including the module and any errors you are seeing."
  },
  {
    "objectID": "modules/synthea-customizing.html#keep-modules",
    "href": "modules/synthea-customizing.html#keep-modules",
    "title": "Customizing Synthea Data",
    "section": "2 Keep Modules",
    "text": "2 Keep Modules\nIt is common in many use cases that only records with specific attributes are relevant, for example, maybe you only want records containing a certain diagnosed Condition. There are a few approaches that can be taken here:\n\nPost-process the data with another tool such as a Python script, to examine a set of exported records and filter out those that do not meet your defined criteria. (Note that if the condition of interest is rare, it may take a lot of time and resources to generate sufficient records)\nModify the module for your condition of interest, to ensure all patients get the condition. (Note this may be trivial in some instances, but in others the relationships between modules can be complex, or the item of interest may be set within the Java engine.)\nUse a Keep Module. A Keep Module is a module similar to a disease module, that defines criteria for whether a record should be kept or discarded. The biggest advantage of a Keep Module is that all patients exported will have the desired criteria, and it will generate the requested number of patients. (That is, assuming the criteria are possible to meet.)\n\n\n\n\n\n\n\nWarning\n\n\n\nIt is critical that the Keep Module represent logic that it is possible for a Synthea record to actually meet. For instance, the Diabetes module will never onset diabetes in a patient earlier than age 18, so a Keep Module for “keep patients under 18 with Diabetes” will not work.\nSynthea does not have the ability to recognize when a Keep Module is impossible to satisfy. In these situations, to avoid running forever, the simulation will stop after a certain number of failed attempts to generate a record. If the situation is known to be possible but exceptionally rare, it is possible to increase the number of failed attempts before the simulation stops, with the config setting: generate.max_attempts_to_keep_patient = 1000\n\n\nThe basic idea of a Keep Module is that it is a regular Synthea module, built with the Module Builder, with a specially named Terminal state “Keep”. The module should use conditional transitions with logic such as “Active Condition” to determine whether to send patients to the Keep state or not. Patients that end the module in the Keep state will be exported, patients that end the module in any other state will be discarded and Synthea will restart a new patient with the same demographics but a different seed.\n\nConstruct a Keep Module using the Module Builder as usual (see instruction above in Creating and Editing Modules ), but do not save the .json file to the src/main/resources/modules folder. The easiest place to store it is in the base synthea folder.\nFinally to actually run Synthea with the Keep Module, use the -k flag with the path to the file, for example:\nrun_synthea -k must_have_diabetes.json\nNow patients exported to any output format will only be patients matching the defined criteria from the Keep Module.\nNote that only one Keep Module may be used at a time, however the logic within it can be as complex as you need.\nMore information on Keep Modules is available on the Synthea wiki."
  },
  {
    "objectID": "modules/synthea-customizing.html#modifying-demographics",
    "href": "modules/synthea-customizing.html#modifying-demographics",
    "title": "Customizing Synthea Data",
    "section": "3 Modifying demographics",
    "text": "3 Modifying demographics\nBy default, Synthea is configured to run with the demographics and health care providers of the United States, but may be configured to run with other demographics such as other countries as well. A set of demographics files and other geographical information is available for many countries at the synthea-international repository.\nBeyond just other countries, the same approach can be use to create demographics files representing any population of interest. For research purposes, the most common changes are likely to be to the demographics of the desired population.\nFor instance, a research effort may want patients with a particular age and racial distribution. One potential approach to generate such a population in Synthea is to identify a city or state with the desired characteristics and generate a population in that location. Alternatively, or if there is no such city or state, one could create or modify the demographics file so that it contains a line for a location with he desired characteristics. The default demographics file is available at ./src/main/resources/geography/demographics.csv - this file may be modified directly, or you may point Synthea at an alternative demographics file with the configuration property generate.demographics.default_file. Details on the demographics file format are available on the Synthea wiki.\nOther types of information which can be modified or replaced to meet various needs are zip codes, time zones, providers, names, and costs.\nFull details for customizing Synthea to generate other areas are available on the Synthea wiki."
  },
  {
    "objectID": "modules/synthea-customizing.html#module-overrides",
    "href": "modules/synthea-customizing.html#module-overrides",
    "title": "Customizing Synthea Data",
    "section": "4 Module Overrides",
    "text": "4 Module Overrides\nModule Overrides allow you to set specific values in a module, such as transition probabilities, without having to edit and replace the entire module. This makes it suitable for use with the Basic setup of Synthea.\nModule overrides are defined using a Java properties file, where each key is the path to a specific field within a module, and the value is the new value to set for that field.\n(module file path)\\:\\:(jsonpath to value) = (new value)\nFor instance, to change the prevalence of Appendicitis among males from the default 8.6% to 100% (imagine an example use case of “a population of all patients who have had an appendectomy”), you could use an override file containing the following line:\nappendicitis.json\\:\\:$['states']['Male']['distributed_transition'][0]['distribution'] = 1.0\nThis corresponds to setting the highlighted transition on the Appendicitis module to 100%: \nAn overrides file may be saved anywhere, but for ease of use we recommend placing it directly in the base synthea folder or a subfolder, with the extension .properties.\nAssuming the file overrides.properties is in the subfolder output, run Synthea as follows:\nrun_synthea --module_override=./output/overrides.properties\nIf using the Developer setup of Synthea, you can generate a template of a module override file with the “overrides” gradle task, for instance:\ngradlew overrides -PincludeModules=appendicitis.json\nThis creates an overrides file at ./output/overrides.properties containing the following:\nappendicitis.json\\:\\:$['states']['Male']['distributed_transition'][0]['distribution'] = 0.086\nappendicitis.json\\:\\:$['states']['Male']['distributed_transition'][1]['distribution'] = 0.914\nappendicitis.json\\:\\:$['states']['Female']['distributed_transition'][0]['distribution'] = 0.067\nappendicitis.json\\:\\:$['states']['Female']['distributed_transition'][1]['distribution'] = 0.933\nappendicitis.json\\:\\:$['states']['Pre_appendicitis']['distributed_transition'][0]['distribution'] = 0.263\nappendicitis.json\\:\\:$['states']['Pre_appendicitis']['distributed_transition'][1]['distribution'] = 0.423\nappendicitis.json\\:\\:$['states']['Pre_appendicitis']['distributed_transition'][2]['distribution'] = 0.221\nappendicitis.json\\:\\:$['states']['Pre_appendicitis']['distributed_transition'][3]['distribution'] = 0.093\nappendicitis.json\\:\\:$['states']['Appendicitis']['distributed_transition'][0]['distribution'] = 0.7\nappendicitis.json\\:\\:$['states']['Appendicitis']['distributed_transition'][1]['distribution'] = 0.3\nAny lines may be modified, or freely removed if the field value is not meant to change.\nMore detail on creating and using overrides files is available on the Synthea wiki."
  },
  {
    "objectID": "modules/synthea-customizing.html#flexporter",
    "href": "modules/synthea-customizing.html#flexporter",
    "title": "Customizing Synthea Data",
    "section": "5 Flexporter",
    "text": "5 Flexporter\nThe Flexible Exporter, aka “Flexporter” is an experimental feature that allows for arbitrary customizations in Synthea.\nThe Flexporter works using a YAML-based mapping file to define transformations that are applied to each patient record that is exported. Transformations generally contain a location, represented in FHIRPath, and a value to put at that location.\nAs with other customization features built into Synthea, the Flexporter is intended to tweak Synthea data, not radically transform it. Common situations where the Flexporter will be most valuable are situations where specific fields or resource types are needed but not exported. (For instance, imagine a use case that requires an Appointment resource prior to every Encounter. Synthea out of the box supports Encounter resources but not Appointment.) The Flexporter is intended to support a number of different use cases, but since it is impossible to predict every possible use case in advance, there are things that are outside the capability of the Flexporter.\nAs of April 2023, the Flexporter supports the following types of actions:\n\napply_profiles: Adds a given profile URI to the meta.profile field on resources matching the given FHIRPath\nset_values: Set values on fields on resources that already exist within the Bundle\ncreate_resource: Create new resources with specific values and add them to the Bundle.\nkeep_resources: Keep only resources matching certain FHIRPath. Other resources will be filtered out\ndelete_resources: Delete resources matching certain FHIRPath.\nexecute_script: Execute arbitrary JavaScript against either the entire Bundle or against individual resources of specific types. Note that the provided JavaScript may be arbitrarily complex, but loading libraries such as from npm is not supported.\n\nSample Flexporter Mapping File:\n---\n# name is just a friendly name for this mapping\nname: Random Testing\n\n# applicability determines whether this mapping applies to a given patient record\napplicability: true\n\nactions:\n - name: Set Immunization.recorded = Immunization.occurrenceDateTime\n   set_values:\n     - applicability: Immunization\n       fields:\n         - location: Immunization.recorded\n           value: $getField([Immunization.occurrence])\n\n\n - name: Create ServiceRequest for every Procedure\n   create_resource:\n     - resourceType: ServiceRequest\n       based_on:\n         resource: Procedure\n       fields:\n         - location: ServiceRequest.intent\n           value: plan\n         - location: ServiceRequest.encounter.reference\n           value: $getField([Procedure.encounter.reference])\n         - location: ServiceRequest.subject.reference\n           value: $findRef([Patient])\n         - location: ServiceRequest.code\n           value: $getField([Procedure.code])\n\n       writeback:\n         - location: Procedure.basedOn.reference\n           value: $setRef([ServiceRequest])\nThis example mapping does the following:\n\nFor every instance of Immunization:\n\n\nCopy the value from Immunization.occurrence[x] (note as of April 2023 in Synthea this will always be a dateTime) into the field Immunization.recorded\n\n\nFor every instance of Procedure:\n\n\nCreate a new instance of ServiceRequest and add it to the Bundle.\nSet the following values on the created ServiceRequest:\n\nSet ServiceRequest.intent to the fixed value “plan”\nCopy the value from the source Procedure.encounter.reference into the field ServiceRequest.encounter.reference\nFind the first resource matching Patient in the Bundle, create a reference to it, and set that on the field ServiceRequest.subject.reference\nCopy the value from the source Procedure.code into the field ServiceRequest.code\n\nSet the following values on the source Procedure:\n\nCreate a reference to the created ServiceRequest and set that on the field Procedure.basedOn.reference\n\n\nBecause the Flexporter is still experimental, to use it you must be working off the flexporter branch of the Synthea repository.\nTo run Synthea with Flexporter mappings enabled, use the -fm flag to specify a path to a mapping file. Multiple Flexporter mappings may be used at the same time, in which case they will be applied in the order listed in the command, for example:\nrun_synthea -fm ./src/test/resources/flexporter/qicore_common.yaml -fm additional_fields.yaml`\nFull detail on the mapping file specification and using the Flexporter is available on the Synthea wiki"
  },
  {
    "objectID": "modules/synthea-customizing.html#free-form-tools",
    "href": "modules/synthea-customizing.html#free-form-tools",
    "title": "Customizing Synthea Data",
    "section": "6 Free-form tools",
    "text": "6 Free-form tools\nFinally, if all else fails, other languages such as Python, JavaScript, or R can allow you to write your own scripts and tools to filter and modify the data created by Synthea as you see fit. The ecosystem is too broad to get into detail here, but some libraries of note that may be helpful are:\n\nJavaScript\n\nfhir-mapper: https://github.com/standardhealth/fhir-mapper\n\nPython\n\nfhir.resources: https://github.com/nazrulworld/fhir.resources\nFHIR-PYrate: https://github.com/UMEssen/FHIR-PYrate (see also: the module on using Python to work with FHIR data\n\nR\n\nfhircrackr: https://github.com/POLAR-fhiR/fhircrackr (see also: the module on using R to work with FHIR data"
  },
  {
    "objectID": "modules/synthea-overview.html",
    "href": "modules/synthea-overview.html",
    "title": "Synthea Synthetic Data Overview",
    "section": "",
    "text": "Learning objectives\n\n\n\nAfter reading this module, you will be able to answer the following questions:\n\n\n    What is synthetic data?\n    Synthetic data is data that has been artificially generated (“synthesized”) by a computer or person rather than collected from real events.\n\n\n    What is Synthea?\n    Synthea is a software tool that generates realistic but not real synthetic electronic health records.\nAccessing real healthcare data for research purposes is difficult for many reasons including:\nThese factors and more limit what researchers can do with real healthcare data.\nSynthetic data is an alternative to real healthcare data that avoids these challenges. Synthetic data is artifically generated, by computer or by hand, rather than collected from the real world. When using real healthcare data isn’t feasible due to privacy, cost, or other restrictions, synthetic data is a good alternative."
  },
  {
    "objectID": "modules/synthea-overview.html#synthea",
    "href": "modules/synthea-overview.html#synthea",
    "title": "Synthea Synthetic Data Overview",
    "section": "1 Synthea",
    "text": "1 Synthea\nSynthea™ is a synthetic data generator that models the life and medical history of synthetic patients. It creates realistic, but not real, synthetic electronic health records. The records are intended to be realistic at the individual level and population level.\nSynthea is open source and built from publicly available information, so the resulting records are free of cost and free of privacy restrictions.\n\n\n\n\n\nSynthea starts with demographic information for a region based on the US Census. Using these demographics, Synthea randomly creates individuals with realistic race, sex, target age, etc., for the region.\nSynthea simulates each individual independently from birth until their death or the current day. As each individual lives out their synthetic life, they flow through disease modules that represent the progression and treatment of various diseases. Disease modules are built from publicly available incidence and prevalence statistics, along with care guidelines from medical institutions. No real person’s data is ever used to create a Synthea module.\nOnce the simulation is complete, the patient record is exported into industry-standard formats such as FHIR, C-CDA, CSV, or plain text.\n\n\n\n\n\n\nA sample synthetic FHIR R4 Patient\n\n\n\n\n\n{\n  \"resourceType\": \"Patient\",\n  \"id\": \"2497ee24-c7c3-5d9a-3425-85da2e9e8b23\",\n  \"meta\": {\n    \"profile\": [ \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient\" ]\n  },\n  \"text\": {\n    \"status\": \"generated\",\n    \"div\": \"&lt;div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"&gt;Generated by &lt;a href=\\\"https://github.com/synthetichealth/synthea\\\"&gt;Synthea&lt;/a&gt;.Version identifier: v3.1.0-354-g3a6a93487\\n .   Person seed: -2317076407365535282  Population seed: 123&lt;/div&gt;\"\n  },\n  \"extension\": [ {\n    \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-race\",\n    \"extension\": [ {\n      \"url\": \"ombCategory\",\n      \"valueCoding\": {\n        \"system\": \"urn:oid:2.16.840.1.113883.6.238\",\n        \"code\": \"2106-3\",\n        \"display\": \"White\"\n      }\n    }, {\n      \"url\": \"text\",\n      \"valueString\": \"White\"\n    } ]\n  }, {\n    \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity\",\n    \"extension\": [ {\n      \"url\": \"ombCategory\",\n      \"valueCoding\": {\n        \"system\": \"urn:oid:2.16.840.1.113883.6.238\",\n        \"code\": \"2186-5\",\n        \"display\": \"Not Hispanic or Latino\"\n      }\n    }, {\n      \"url\": \"text\",\n      \"valueString\": \"Not Hispanic or Latino\"\n    } ]\n  }, {\n    \"url\": \"http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName\",\n    \"valueString\": \"Nadine465 Wunsch504\"\n  }, {\n    \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex\",\n    \"valueCode\": \"M\"\n  }, {\n    \"url\": \"http://hl7.org/fhir/StructureDefinition/patient-birthPlace\",\n    \"valueAddress\": {\n      \"city\": \"Boston\",\n      \"state\": \"Massachusetts\",\n      \"country\": \"US\"\n    }\n  }, {\n    \"url\": \"http://synthetichealth.github.io/synthea/disability-adjusted-life-years\",\n    \"valueDecimal\": 0.0\n  }, {\n    \"url\": \"http://synthetichealth.github.io/synthea/quality-adjusted-life-years\",\n    \"valueDecimal\": 18.0\n  } ],\n  \"identifier\": [ {\n    \"system\": \"https://github.com/synthetichealth/synthea\",\n    \"value\": \"2497ee24-c7c3-5d9a-3425-85da2e9e8b23\"\n  }, {\n    \"type\": {\n      \"coding\": [ {\n        \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n        \"code\": \"MR\",\n        \"display\": \"Medical Record Number\"\n      } ],\n      \"text\": \"Medical Record Number\"\n    },\n    \"system\": \"http://hospital.smarthealthit.org\",\n    \"value\": \"2497ee24-c7c3-5d9a-3425-85da2e9e8b23\"\n  }, {\n    \"type\": {\n      \"coding\": [ {\n        \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n        \"code\": \"SS\",\n        \"display\": \"Social Security Number\"\n      } ],\n      \"text\": \"Social Security Number\"\n    },\n    \"system\": \"http://hl7.org/fhir/sid/us-ssn\",\n    \"value\": \"999-32-6148\"\n  }, {\n    \"type\": {\n      \"coding\": [ {\n        \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n        \"code\": \"DL\",\n        \"display\": \"Driver's license number\"\n      } ],\n      \"text\": \"Driver's license number\"\n    },\n    \"system\": \"urn:oid:2.16.840.1.113883.4.3.25\",\n    \"value\": \"S99930905\"\n  } ],\n  \"name\": [ {\n    \"use\": \"official\",\n    \"family\": \"Stoltenberg489\",\n    \"given\": [ \"Mitchell808\" ],\n    \"prefix\": [ \"Mr.\" ]\n  } ],\n  \"telecom\": [ {\n    \"system\": \"phone\",\n    \"value\": \"555-726-6485\",\n    \"use\": \"home\"\n  } ],\n  \"gender\": \"male\",\n  \"birthDate\": \"2004-05-11\",\n  \"address\": [ {\n    \"extension\": [ {\n      \"url\": \"http://hl7.org/fhir/StructureDefinition/geolocation\",\n      \"extension\": [ {\n        \"url\": \"latitude\",\n        \"valueDecimal\": 42.40293333299843\n      }, {\n        \"url\": \"longitude\",\n        \"valueDecimal\": -71.68746648659892\n      } ]\n    } ],\n    \"line\": [ \"352 Bailey Neck Apt 40\" ],\n    \"city\": \"Clinton\",\n    \"state\": \"MA\",\n    \"postalCode\": \"01510\",\n    \"country\": \"US\"\n  } ],\n  \"maritalStatus\": {\n    \"coding\": [ {\n      \"system\": \"http://terminology.hl7.org/CodeSystem/v3-MaritalStatus\",\n      \"code\": \"S\",\n      \"display\": \"Never Married\"\n    } ],\n    \"text\": \"Never Married\"\n  },\n  \"multipleBirthBoolean\": false,\n  \"communication\": [ {\n    \"language\": {\n      \"coding\": [ {\n        \"system\": \"urn:ietf:bcp:47\",\n        \"code\": \"en-US\",\n        \"display\": \"English (United States)\"\n      } ],\n      \"text\": \"English (United States)\"\n    }\n  } ]\n}\n\n\n\n\n\n\n\n\n\nA sample synthetic FHIR R4 Observation\n\n\n\n\n\n{\n  \"resourceType\": \"Observation\",\n  \"id\": \"f83286e0-5797-e51d-a7e6-6708d8085623\",\n  \"status\": \"final\",\n  \"category\": [ {\n    \"coding\": [ {\n      \"system\": \"http://terminology.hl7.org/CodeSystem/observation-category\",\n      \"code\": \"laboratory\",\n      \"display\": \"Laboratory\"\n    } ]\n  } ],\n  \"code\": {\n    \"coding\": [ {\n      \"system\": \"http://loinc.org\",\n      \"code\": \"4548-4\",\n      \"display\": \"Hemoglobin A1c/Hemoglobin.total in Blood\"\n    } ],\n    \"text\": \"Hemoglobin A1c/Hemoglobin.total in Blood\"\n  },\n  \"subject\": {\n    \"reference\": \"urn:uuid:3daf29a9-f7b1-9d9f-45ba-4be258308a75\"\n  },\n  \"encounter\": {\n    \"reference\": \"urn:uuid:91fe93c0-52ae-98bc-e14c-29df89c8119d\"\n  },\n  \"effectiveDateTime\": \"2013-10-05T08:13:20-04:00\",\n  \"issued\": \"2013-10-05T08:13:20.014-04:00\",\n  \"valueQuantity\": {\n    \"value\": 6.38,\n    \"unit\": \"%\",\n    \"system\": \"http://unitsofmeasure.org\",\n    \"code\": \"%\"\n  }\n}\n\n\n\nThis page overviews key features of Synthea. If you’d like more information, visit the Synthea wiki on GitHub."
  },
  {
    "objectID": "modules/synthea-overview.html#generic-modules",
    "href": "modules/synthea-overview.html#generic-modules",
    "title": "Synthea Synthetic Data Overview",
    "section": "2 Generic Modules",
    "text": "2 Generic Modules\nAt Synthea’s core is a set of disease modules, representing the progression and treatment of various conditions. Below is a small snippet of the Appendicitis module.\n\nDisease modules are state transition machines where each individual flows through the modules based on logical conditions and weighted randomness.\nEvery synthetic patient starts in each module’s Initial state at birth and immediately begins progressing through the module’s states. Each state represents a spot where something happens. There are two broad categories of states: control states, which drive the flow of a patient through the module, for example:\n\nDelay: Wait a certain amount of time before progressing, commonly used to represent how the risk of certain conditions changes with age.\nGuard: Wait until given criteria become true before progressing.\n\nAnd clinical states, which add entries to a patient’s health record, for example:\n\nConditionOnset: Represent the spot where the patient acquires a given condition, not necessarily where it is diagnosed.\nProcedure: Represent the point in time in a healthcare encounter that a procedure is performed.\n\nFor a full list of state types, see the Synthea wiki.\nEach state has a transition, which points to the state the patient will progress to next:\n\nDirect transitions: Point to a single state.\nDistributed transitions: Point to multiple states, each with a weighted probability. A patient progresses to a randomly chosen state.\nConditional transitions: Include logical rules showing which path to follow.\nComplex transitions: Are a combination of conditional and distributed transitions.\n\nModules will run until either the simulation ends (at patient death or when it reaches the current date) or until the module reaches a Terminal state.2\nCombining these simple concepts allows module developers to build robust and detailed models of disease progression and treatment.\n\n\n\n\n\n\nA note on Synthea clinical detail\n\n\n\n\n\nBecause Synthea is open source and accepts contributions from a global user base, the level of detail varies across modules. For instance, the Appendicitis module was the first to be created, and the level of detail is minimal. On the other hand, the COVID-19 module and submodules were designed to replicate the disease’s progression as closely as possible, and is probably the largest and most detailed module.\nFurther, the number of disease modules is limited. Early efforts focused on the “top ten” causes of premature death and reasons people see their primary care provider. Further additions have added a large number of modules representing common conditions, but rarer and more complex conditions may not be represented.\nThe Synthea community encourages and welcomes users to create new modules representing conditions of interest or to improve the detail and realism of existing modules.\n\n\n\nYou can view, modify, and create Synthea modules with no programming experience using the Synthea Module Builder. For more information, read Customizing Synthea ). There is also a short video introduction to the Module Builder, and a tutorial on the Synthea Wiki."
  },
  {
    "objectID": "modules/synthea-overview.html#fhir-resources",
    "href": "modules/synthea-overview.html#fhir-resources",
    "title": "Synthea Synthetic Data Overview",
    "section": "3 FHIR Resources",
    "text": "3 FHIR Resources\nSynthea generates basic FHIR resources: it includes required fields but rarely populates optional fields. If you require fields that Synthea doesn’t populate, you can customize Synthea to add those fields. Read Customizing Synthea for more information.\nBy default, Synthea exports one file per patient, as a Bundle with type: transaction. This Bundle contains a single Patient resource as the first entry, followed by other patient-specific resources such as Conditions, Observations, Procedures, etc, roughly grouped by Encounter in chronological order. Synthea exports Organizations and Practitioners separately since these resources may be referenced by multiple patients’ resources. Synthea may also be configured to export FHIR Bulk Data.\nAs of April 2023, Synthea can produce the following resource types:\n\nAllergyIntolerance\nBundle\nCarePlan\nCareTeam\nClaim\nCondition\nCoverage\nDevice\nDiagnosticReport\nDocumentReference\nEncounter\nExplanationOfBenefit\nGoal\nImagingStudy\nImmunization\nLocation\nMedication\nMedicationRequest\nMedicationAdministration\nObservation\nOrganization\nPatient\nPractitioner\nPractitionerRole\nProcedure\nProvenance\n\nNote that not all patient records will contain instances of every resource type, and certain resource types will only be produced if certain settings are enabled. See Customizing Synthea for more information on settings."
  },
  {
    "objectID": "modules/synthea-overview.html#pre-generated-datasets",
    "href": "modules/synthea-overview.html#pre-generated-datasets",
    "title": "Synthea Synthetic Data Overview",
    "section": "4 Pre-generated Datasets",
    "text": "4 Pre-generated Datasets\nInstead of running Synthea yourself, you can use a pre-generated dataset. Pre-generated datasets are available at the following locations:\n\nhttps://synthea.mitre.org/downloads\n\nCentralized location for datasets created by the Synthea core development team\n\nhttps://confluence.hl7.org/display/COD/mCODE+Test+Data\n\nSample cancer patients with data conformant to the mCODE FHIR IG\n\nhttps://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/QDXLWR\n\n10,000 synthetic Medicare patients spanning the entire United States"
  },
  {
    "objectID": "modules/synthea-overview.html#footnotes",
    "href": "modules/synthea-overview.html#footnotes",
    "title": "Synthea Synthetic Data Overview",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nPerhaps the most well-known example was an instance in 1997 where Latanya Sweeney re-identified the record belonging to then-Governor of Massachusetts William Weld from a dataset where identifiers had been removed. See Ohm (2009) for details.↩︎\nTerminal here means “the end of this module”, not “the patient has a terminal condition and died”. For instance, the Appendicitis module terminates after the patient has an appendectomy. Compare to the Sore Throat module which does not have a Terminal state since people are always at risk of common viral conditions that present as sore throat.↩︎"
  },
  {
    "objectID": "modules/synthea-running.html",
    "href": "modules/synthea-running.html",
    "title": "Running Synthea",
    "section": "",
    "text": "Learning objectives\n\n\n\nAfter reading this module, you will be able to answer the following questions:\n\n\n    How can I use Synthea to generate synthetic data?\n    Synthetic Synthea data can be generated locally by downloading and configuring the software from https://github.com/synthetichealth/synthea .\nThere are two ways to run Synthea: a basic setup using a prepackaged JAR file and a developer setup. The Basic setup is recommended for users who want to get started quickly and do not anticipate making significant changes or customizations to Synthea. The Developer setup is recommended for users who want the ability to fully modify and customize all aspects of Synthea."
  },
  {
    "objectID": "modules/synthea-running.html#prerequisites",
    "href": "modules/synthea-running.html#prerequisites",
    "title": "Running Synthea",
    "section": "1 Prerequisites",
    "text": "1 Prerequisites\nSynthea requires the Java™ JDK 11 or newer to be installed (make sure to select the JDK, not the JRE install). We recommend the prebuilt OpenJDK binaries available from https://adoptium.net/."
  },
  {
    "objectID": "modules/synthea-running.html#basic-setup",
    "href": "modules/synthea-running.html#basic-setup",
    "title": "Running Synthea",
    "section": "2 Basic Setup",
    "text": "2 Basic Setup\nFor users who just want to run Synthea, and not make detailed changes to the internal models, the basic setup is recommended. However, the number of customizations available in this setup is limited. See the Developer Setup instructions below for instructions if you want to make changes to Synthea.\n\nDownload the binary distribution to a file from https://github.com/synthetichealth/synthea/releases/download/master-branch-latest/synthea-with-dependencies.jar )\nOpen a command-line prompt/terminal window and run Synthea by running the command java -jar synthea-with-dependencies.jar . Additional command-line options may be appended at the end of the command, see Common Configuration below for details.\n\nWhen you run this command, you should see output similar to the following:\nScanned 60 modules and 36 submodules.\nLoading submodule modules/breast_cancer/tnm_diagnosis.json\nLoading submodule modules/allergies/allergy_incidence.json\nLoading submodule modules/dermatitis/moderate_cd_obs.json\n...\nLoading module modules/opioid_addiction.json\nLoading module modules/dialysis.json\n...\nLoading module modules/hypertension.json\nRunning with options:\nPopulation: 1\nSeed: 1570658792125\nProvider Seed:1570658792125\nLocation: Massachusetts\nMin Age: 0\nMax Age: 140\n1 -- Arthur650 Carroll471 (39 y/o M) Southwick, Massachusetts \n{alive=1, dead=0}\nOnce the process completes, you will see an output folder alongside the synthea-with-dependencies.jar, and a fhir folder inside the output folder. Inside that fhir folder are the FHIR Bundle JSON files that were produced by Synthea. Each Bundle will contain a single Patient resource as the first entry, followed by resources roughly ordered by time.\nYou can review these files in your text editor of choice, or the Synthea team has made an online tool for quickly reviewing the content of a Synthea-generated Bundle. Simply visit https://synthetichealth.github.io/spt/#/record_viewer and drag & drop a patient file onto the page to load it."
  },
  {
    "objectID": "modules/synthea-running.html#developer-setup",
    "href": "modules/synthea-running.html#developer-setup",
    "title": "Running Synthea",
    "section": "3 Developer Setup",
    "text": "3 Developer Setup\nThese instructions are intended for those wishing to examine the Synthea source code, extend it or build the code locally. The developer setup is not necessary for all customizations, but using this setup enables many which cannot be used via the basic setup described earlier.\nGit is required for the developer setup.\nTo copy the repository locally, install the necessary dependencies, and run the full test suite, open a terminal window and run the following commands:\ngit clone https://github.com/synthetichealth/synthea.git\ncd synthea\n./gradlew build check\nNote: if running on Windows, use .\\gradlew.bat instead of ./gradlew – going forward this guide uses only gradlew for brevity. gradlew here is a reference to the Gradle build tool which Synthea uses.\nThe primary entry point of Synthea is the provided run_synthea script. Additional command-line options may be appended at the end of the command, see Common Configuration below for details.\n./run_synthea\nNote: if running on Windows, use .\\run_synthea.bat instead of ./run_synthea – going forward this guide uses only run_synthea for brevity\nWhen you run this command, you should see output similar to the following:\n$ run_synthea\n\n&gt; Task :run\nLoading modules\\allergic_rhinitis.json\nLoading modules\\allergies\\allergy_incidence.json\n[... many more lines of Loading ...]\nLoading modules\\wellness_encounters.json\nLoaded 68 modules.\nRunning with options:\nPopulation: 1\nSeed: 1519063214833\nLocation: Massachusetts\n\n1 -- Jerilyn993 Parker433 (10 y/o) Lawrence, Massachusetts\nOnce the process completes, you will see a new output folder, and a fhir folder inside the output folder. Inside that fhir folder are the FHIR Bundle JSON files that were produced by Synthea. You can review these in your text editor of choice, or the Synthea team has made an online tool for quickly reviewing the content of a Synthea-generated Bundle. Simply visit https://synthetichealth.github.io/spt/#/record_viewer and drag & drop a patient file onto the page to load it."
  },
  {
    "objectID": "modules/synthea-running.html#configuration",
    "href": "modules/synthea-running.html#configuration",
    "title": "Running Synthea",
    "section": "4 Configuration",
    "text": "4 Configuration\nSynthea includes a variety of command-line arguments and configuration options to enable or disable common settings, or change certain aspects of the output data. A small subset of the common options are listed below; more complete documentation is available on the Synthea wiki.\n\n4.1 Command line arguments\nSynthea includes a number of settings that can be toggled from the command line. All command line arguments are optional, and if not specified the settings have sensible defaults. Most arguments start with a hyphen and a letter, usually followed by a space and then the desired value for that setting. The first argument that does not start with a hyphen is selected as the US state to generate a population for. The last argument that does not start with a hyphen is selected as the city within the selected state to generate the popualtion for.\nThe most common command line arguments are:\nrun_synthea [options] [state [city]]\n[-p populationSize] (number of living patients to produce)\n[-a minAge-MaxAge] (age range of patients to export)\n[-g gender]\n[-s seed] (for randomness / reproducibility -- runs with the same seed should produce the same results)\n[-h] (print usage)\n[--config=option ...] (any configuration option, see \"Configuration Options\" below)\n\nExamples:\nrun_synthea Massachusetts\nrun_synthea Alaska Juneau\nrun_synthea -s 12345\nrun_synthea -p 1000\nrun_synthea -s 987 Washington Seattle\nrun_synthea -s 21 -p 100 Utah \"Salt Lake City\"\nrun_synthea -g M -a 60-65\nrun_synthea -p 10 --exporter.fhir.export=true\nrun_synthea --exporter.baseDirectory=\"./output_tx/\" Texas\nNote: these examples use run_synthea for brevity. If using the Basic setup, use java -jar synthea-with-dependencies.jar instead.\nAnnotated Example:\nrun_synthea -s 21 -p 100 Utah \"Salt Lake City\"\n\n-s 21 means “seed the random number generator with the number 21”. Runs with the same seed will generate the same population.\n-p 100 means “generate 100 living patients”. (Note the total generated population may exceed 100 if patients die during the simulation before reaching the present day.)\nUtah means generate patients only within the state of Utah.\n\"Salt Lake City\" means generate patients only within Salt Lake City. (Quotes are necessary when command line arguments contain spaces, apostrophes, or other special characters.)\n\n\n\n4.2 Configuration Options\nMany features can be configured using a properties file. The properties file syntax is one setting per line, with format key = value. Some of the most commonly modified settings are shown below.\n\n# Set the folder where exported records will be created.\n# Each export type (e.g., FHIR, CCDA, CSV) will be a subfolder under this:\nexporter.baseDirectory = ./output/\n\n# Set to true to enable the FHIR R4 exporter:\nexporter.fhir.export = true\n\n# Set the number of years of active history to keep from each patient. Default: 10\n# Set to 0 to keep all history from every patient, note this will increase file size significantly.\nexporter.years_of_history = 10\n\n# Set this to only include selected resource types: (e.g. Patient,Condition,Encounter)\nexporter.fhir.included_resources =\n# Set this to exclude certain resource types from export: (e.g. Observation)\nexporter.fhir.excluded_resources =\n\n# Set to false to enable adding numbers to synthetic patient names, to make it more obvious they are not real data.\ngenerate.append_numbers_to_person_names = true\nSynthea includes a default configuration file (if using the Developer setup, this file is at ./src/main/resources/synthea.properties). Each default setting can be individually overridden using a local settings file that is passed to Synthea when it is run with the -c flag:\njava -jar synthea-with-dependencies.jar -c path/to/settings/file\nAlternatively, individual configuration settings may be modified by a command-line flag. Any command-line argument starting with -- will set the value of a configuration setting, for example:\njava -jar synthea-with-dependencies.jar --generate.append_numbers_to_person_names=false\n(note that when using this approach there should be no spaces between the setting name, equals sign, and setting value)\nAdditional information on configuration options can be found on the Synthea wiki.\n\nYou should now feel comfortable with the basics of how to run Synthea to generate synthetic health records. The next section will describe some options for customizing the patients that Synthea produces."
  },
  {
    "objectID": "modules/synthea-test-server.html",
    "href": "modules/synthea-test-server.html",
    "title": "Standing up a FHIR Testing Server",
    "section": "",
    "text": "Learning objectives\n\n\n\nAfter reading this module, you will be able to answer the following questions:\n\n\n    What options are available for hosting FHIR data for testing and training?\n    There are both cloud-based and local options for hosting FHIR servers, with varying levels of capabilities, ease of setup and access, and performance. As always, the best option depends on the specific use case.\nThis module describes the following options for hosting FHIR data:\nThe approaches listed in this module are intended to be the quickest and easiest options for setting up a FHIR server for testing and training. Other options do exist, and for production capabilities you may want something more robust, but the options here are the best way to get started fast. The options on this page often include a set of default patient data which can be used for basic testing, or you can load your own data created by Synthea."
  },
  {
    "objectID": "modules/synthea-test-server.html#logica-sandbox",
    "href": "modules/synthea-test-server.html#logica-sandbox",
    "title": "Standing up a FHIR Testing Server",
    "section": "1 Logica Sandbox",
    "text": "1 Logica Sandbox\nThe easiest option for hosting data is to use a cloud service - no installation is required on your local computer. The other benefits are that registration is free, a common instance can be shared between multiple people, and you do not have to worry about losing everything when you restart your computer.\nThe Logica FHIR Sandbox is a free service provided by Logica Health that allows the FHIR community to experiment with and develop FHIR applications. The Sandbox supports SMART-on-FHIR and includes a number of pre-installed apps. We recommend the Logica Sandbox as a good first step.\nThis option does have a few downsides however: you are dependent on the service staying online and providing appropriate security to make sure your data is accessible to you and only to you. Real health data and synthetic data containing alterations you want to keep private should never be uploaded to a Logica sandbox. Anything stored in a Logica sandbox should also have a local backup copy, just in case.\nThere are no published limits on the Logica Sandbox, in terms of number of Patients, number of Resources, physical size, or bandwidth usage, however we recommend keeping your population as small as possible - both in terms of number of patients and the total amount of data per patient - in order to ensure good performance. Timeouts may occur if you try to upload files larger than roughly 2 MB. If a timeout occurs while uploading a file, wait a few minutes for it to finish processing before trying again - the server will throw an error if you try to upload a second patient while one is already processing.\nSignup Steps\nTo create your own Logica Sandbox, first register at https://sandbox.logicahealth.org. You will need to provide an email address, where you will receive a confirmation email which you should click to activate your new account. Sign in using your email and password and accept the terms of use.\nNow you can create a new sandbox by clicking the New Sandbox button. The creation screen is shown below.\n\nChoose a name, ID, and FHIR version that are appropriate for your usage. We recommend enabling the “Allow Open FHIR Endpoint” setting as this will make it easier to load an initial set of data, and it may be disabled later for security.\nIf you plan to load patients for a specific use case, you may want to disable the “Import sample patients and practitioners” option to ensure only your selected patients are loaded. Feel free to select or deselect the sample applications option - it will have no impact on basic FHIR operations.\nAfter clicking create, it will take ~15 seconds to setup the instance. Once ready, click on the row to go to the dashboard for your server. Feel free to explore the various options and features available, however this guide will not touch on any of them. See the Logica Sandbox Confluence page and FAQs for additional information. For now visit the Settings tab to see your “Open FHIR Server URL” - this is the server base URL that should be used for loading patients in the Loading Synthea Patients section below.\nLater, once you have loaded all the patients you want, if you want to require security on the server, return to this Settings tab and click the pencil icon to edit, and uncheck “Allow Open FHIR Endpoint”."
  },
  {
    "objectID": "modules/synthea-test-server.html#docker-based-options",
    "href": "modules/synthea-test-server.html#docker-based-options",
    "title": "Standing up a FHIR Testing Server",
    "section": "2 Docker-based Options",
    "text": "2 Docker-based Options\nIf for any reason you do not wish to use a cloud-based service like a Logica Sandbox, Docker offers a relatively painless way to get a FHIR server running on your local computer. Any of these options may also be setup to run natively, but using Docker allows you to bypass a lot of the setup and configuration that would otherwise be required.\n\n\n\n\n\n\nWhat is Docker?\n\n\n\n\n\nAt its most basic level, Docker is a tool that allows you to run packaged software. Packaging software to run on Docker allows it to be preconfigured, include any additional dependencies it may require, and run on nearly any hardware and operating system. This is in contrast to traditional software which needs to be built separately or even developed separately for Windows and Mac, may need separate libraries to be installed first, and may have a complex setup process. Docker is very commonly used for running servers.\nKey terms: - Images are the packaged software definition. Images are tagged with a version so that you can use either the latest available, or a specific other version if necessary. Images may be layered on top of one another in order to combine them into a single software package. - Containers are the running instances of images. A container can be thought of as a separate virtual computer that is running the image.\nDetailed technical documentation on Docker is available at https://docs.docker.com/get-started/overview/.\n\n\n\nWhile Docker-based options generally require some configuration, especially when you want your test data to persist after you reboot, they can be setup quickly and do not require programming knowledge to get started. Each of these options can be installed either locally on your own computer if you will be the only person using it, or on a shared server for ease of access by multiple people. Your options may vary based on your organization’s security requirements. The following instructions are intended for a Windows-based or Mac-based local installation.\n\n\n\n\n\n\nWarning: Data Persistence on Docker\n\n\n\nAssume that Docker-based options will not persist data unless they specifically state that they do by default or you specifically configure them to do so. For example if you shut down Docker or restart your computer any patients you had loaded will be gone the next time you start up the server. Please review all documentation before loading a lot of data to make sure you do not lose work. Generally it is not possible to configure a live running Docker container to enable persistence; they need to be started with the proper settings.\n\n\nIn order to use these options, you must first install Docker Desktop from https://www.docker.com/products/docker-desktop/. (Note that Docker Desktop is generally not free for organizations and professional use. There are free alternatives however they require more manual effort to get everything working. Setting up an alternative to Docker is outside the scope of this page.)\nOnce Docker is installed, launch Docker Desktop, and confirm it is running with the docker ps command on the command line. This command shows you the currently running Docker containers. If you have just installed Docker for the first time, this should print only a header row:\n$ docker ps\nCONTAINER ID   IMAGE                                      COMMAND                  CREATED        STATUS                 PORTS\n$\nGit is also required for several of the Docker-based options.\n\n2.1 Logica Sandbox Community Edition\nThis set of Docker images mirrors the public Logica Sandbox, but can be run locally. If you like the full suite of what Logica provides but either want higher performance or do not want to use a fully public Internet service, this is a good option.\nQuick Start Make sure Docker is running, then clone the project, change to the directory, and launch the services with the following commands:\ngit clone https://github.com/logicahealth/sandbox-community-edition.git\ncd sandbox-community-edition\ndocker compose up\nLaunching the services will take a while the first time as it needs to download the Docker images. Wait until the logging output stops, then open the sandbox at http://sandbox:3001. From here the steps are identical to the steps for the cloud service steps listed above.\nFull instructions are available at https://github.com/logicahealth/sandbox-community-edition.\n\n\n2.2 HAPI\nHAPI is the FHIR server implementation that the Logica Sandbox uses under the covers. If all you want is a plain FHIR server to run queries against, without any of the bells and whistles, HAPI is a good option.\nTo quickly pull and run the HAPI FHIR server on port 8080, make sure Docker is running, and then run the following:\ndocker pull hapiproject/hapi:latest\ndocker run -p 8080:8080 hapiproject/hapi:latest\nWait until the logging output shows Started Application in ___ seconds and you will have a FHIR server running with a base URL of http://localhost:8080/fhir. There is also a web UI for a few actions such as listing and uploading resources at http://localhost:8080/.\nFor more detail on the HAPI FHIR docker image, see https://hub.docker.com/r/hapiproject/hapi.\n\n\n2.3 Other Docker Options\nIf you know that you intend to run research on a server that is not based on HAPI, it may be advantageous to run the same type of FHIR server locally to ensure the capabilities you need for your use case are supported. Details on particular servers is out of scope for this page, but a few links are provided below to Docker setup guides for other common FHIR server implementations.\nOther popular FHIR servers include:\n\nMicrosoft/Azure FHIR Server\nLinuxForHealth FHIR Server (formerly IBM)\nBlueHalo FHIR Server (formerly Asymmetrik)"
  },
  {
    "objectID": "modules/synthea-test-server.html#public-test-servers",
    "href": "modules/synthea-test-server.html#public-test-servers",
    "title": "Standing up a FHIR Testing Server",
    "section": "3 Public Test Servers",
    "text": "3 Public Test Servers\nSome options for public test servers are listed on the HL7 Confluence with basic information and limitations of each. A couple notable items:\n\nHAPI FHIR Reference Server\n\nWeb UI: http://hapi.fhir.org\nDSTU2 Endpoint: http://hapi.fhir.org/baseDstu2\nSTU3 Endpoint: http://hapi.fhir.org/baseDstu3\nR4 Endpoint: http://hapi.fhir.org/baseR4\nR5 Endpoint: http://hapi.fhir.org/baseR5\n\nNLM HAPI FHIR servers\n\nSTU3 Endpoint: https://lforms-fhir.nlm.nih.gov/baseDstu3\nR4 Endpoint: https://lforms-fhir.nlm.nih.gov/baseR4\n\n\nNote that these are open to the public so there is no guarantee of availability of any data you upload nor of the service itself."
  },
  {
    "objectID": "modules/synthea-test-server.html#loading-synthea-data",
    "href": "modules/synthea-test-server.html#loading-synthea-data",
    "title": "Standing up a FHIR Testing Server",
    "section": "4 Loading Synthea Data",
    "text": "4 Loading Synthea Data\nFinally, once your server is running, you can load your Synthea data into it. In this section we assume you are using the default Synthea settings: FHIR R4, Bundles are of type transaction, all resource types are exported, etc., since certain setting changes may affect how you load the data. It is completely fine if you ran Synthea multiple times and your output folder contains several runs all mixed together, but it can be difficult to separate them out if that is the case.\nWe recommend using the curl utility (which should be available by default on most computers, but if not it can be downloaded from https://curl.se/download.html), with the following arguments:\ncurl -d @FILE -H 'Content-Type: application/json' SERVER\nwhere:\nFILE is the path to a FHIR Bundle .json file\nSERVER is your FHIR server's base URL\n-H 'Content-Type: application/json' sets the content type to JSON to ensure the server handles it correctly\nIf you strongly prefer a graphical tool, Insomnia, which allows you to invoke APIs such as FHIR endpoints, is a good choice. For uploading multiple files though, the snippets below which call curl in a loop are likely to be the easiest. If you have experience with other tools such as Postman, feel free to use those instead.\nThe key to loading Synthea patients is to ensure files are loaded in the following order, so that references to resources across files will work correctly. You should not see any error messages when loading files. Replace SERVER in the following examples with your FHIR server’s base URL.\nFirst, load all hospitalInformation*.json files. These contain the Organization resources that are referenced by Encounters in the patient data.\nfor file in hospitalInformation*.json\n  do curl -d @$file -H 'Content-Type: application/json' SERVER\ndone\nSecond, load all practitioner*.json files. These contain Practitioners and PractitionerRoles.\nfor file in practitioner*.json\n  do curl -d @$file -H 'Content-Type: application/json' SERVER\ndone\nFinally, load all individual patient files. All patient file names start with a capital letter, unlike the hospital and practioner files above, so we can use that to select just the files that were not already uploaded in the previous two steps.\nfor file in [A-Z]*.json\n  do curl -d @$file -H 'Content-Type: application/json' SERVER\ndone\nOnce all the data has been loaded onto your server, you can access it as any other FHIR server by making API calls to the various resource endpoints."
  },
  {
    "objectID": "modules/tabular-intro.html",
    "href": "modules/tabular-intro.html",
    "title": "Introduction to Analyzing FHIR Data in a Tabular Format",
    "section": "",
    "text": "Learning objectives\n\n\n\n\n\n    Understand why it may be useful to convert FHIR-formatted data to a tabular format, and the skillsets needed to perform these conversions.\n\n\n    Understand why it may be preferable to use Python or R to ingest FHIR-formatted data for final analysis in a statistics package like SAS or Stata.\nResearchers who want to analyze FHIR-formatted data will typically need to convert data from FHIR format into a table-based format that can be used directly in analysis environments like Python, R, SAS, or Stata. Data analysis in these environments typically requires tidy data:\nFHIR’s data format does not meet this definition of “tidy.” While instances of FHIR resources do typically map onto observational units, the data contained within instances of FHIR resources are not “flat” – instead, data are stored in nested data structures. In some cases, like Observation.component, there may even be multiple “observational units” inside of a single FHIR resource instance.\nFortunately, FHIR’s computable JSON or XML data format makes it possible to use software to convert FHIR data into a tabular format. This is can be done with custom code, or via existing purpose-build libraries.\nThere are purpose-built libraries for Python and R that facilitate FHIR-to-tabular conversion:\nA technical introduction to using these libraries with synthetic FHIR-format data is provided in Using Python and Using R. The approach described in these modules can typically be performed by an informaticist, analyst, or statistician who is familiar with one of these environments and has reviewed the content on this website."
  },
  {
    "objectID": "modules/tabular-intro.html#using-other-analysis-environments",
    "href": "modules/tabular-intro.html#using-other-analysis-environments",
    "title": "Introduction to Analyzing FHIR Data in a Tabular Format",
    "section": "Using other analysis environments",
    "text": "Using other analysis environments\nIf you do not want to use Python or R to analyze your data, it is possible to use a different analysis tool like SAS or Stata.\nModern versions of data analysis tools like SAS and Stata have the ability to directly read generic JSON or XML data. For example, SAS can read JSON via the JSON engine and XML via this method. Stata can read JSON via a third-party library or using its integration with Python. Other approaches like using an ODBC driver may also work.\nHowever, it may be simpler to use Python or R to convert FHIR-formatted data to tabular, and then import this into your analysis tool of choice. This can be done via Pandas in Python or the foreign package in R."
  },
  {
    "objectID": "modules/tabular-intro.html#cloud-tools",
    "href": "modules/tabular-intro.html#cloud-tools",
    "title": "Introduction to Analyzing FHIR Data in a Tabular Format",
    "section": "Cloud tools",
    "text": "Cloud tools\nIf you are able to use public cloud providers like Amazon AWS, Google Cloud, or Microsoft Azure, you may be able to use tools that are part of these platforms to ingest FHIR-formatted data and analyze it. Use of these tools is beyond the scope of this module, but some additional information is linked below.\n\nAmazon AWS\n\nAnalyze healthcare FHIR data with Amazon Neptune\nAnalyzing healthcare FHIR data with Amazon Redshift PartiQL\n\nGoogle Cloud\n\nAnalyzing FHIR data in BigQuery\n\nMicrosoft Azure\n\nAnalyzing FHIR data with Azure Synapse Analytics"
  },
  {
    "objectID": "modules/tabular-python.html",
    "href": "modules/tabular-python.html",
    "title": "Analyzing FHIR Data in a Tabular Format With Python",
    "section": "",
    "text": "Learning objectives\n\n\n\n\n\n    Understand the high-level approaches for converting FHIR-formatted data into tabular for analysis in Python.\n\n\n    Learn how the FHIR-PYrate library facilitates requesting data from a FHIR server, and creating tidy tabular data tables.\nData analysis approaches in Python often use Pandas DataFrames to store tabular data. There are two primary approaches to loading FHIR-formatted data into Pandas DataFrames:\nTo use FHIR-PYrate, you will need a Python 3 runtime with FHIR-PYrate and Pandas installed."
  },
  {
    "objectID": "modules/tabular-python.html#fhir-testing-server",
    "href": "modules/tabular-python.html#fhir-testing-server",
    "title": "Analyzing FHIR Data in a Tabular Format With Python",
    "section": "1 FHIR testing server",
    "text": "1 FHIR testing server\nThe examples in this module use a FHIR testing server populated with Synthea data in FHIR R4 format via Logica Health’s Sandbox service.\nThe endpoint for this testing server is:\nhttps://api.logicahealth.org/FHIRResearchSynthea/open\nHowever, any FHIR server loaded with testing data can be used. See Standing up a FHIR Testing Server for instructions to set up your own test server.\nThe code blocks in the following section show sample output immediately after. This is similar to the code cells and results in a Jupyter notebook."
  },
  {
    "objectID": "modules/tabular-python.html#retrieving-fhir-data",
    "href": "modules/tabular-python.html#retrieving-fhir-data",
    "title": "Analyzing FHIR Data in a Tabular Format With Python",
    "section": "2 Retrieving FHIR data",
    "text": "2 Retrieving FHIR data\nOnce your environment is set up, you can run the following Python code to retrieve instances of the Patient resource from a test server:\n\n# Load dependencies\nfrom fhir_pyrate import Pirate\nimport pandas as pd\n\n# Instantiate a Pirate object using the FHIR-PYrate library to query a test FHIR server\nsearch = Pirate(\n    auth=None,\n    base_url=\"https://api.logicahealth.org/FHIRResearchSynthea/open/\",\n    print_request_url=True,\n)\n\n# Use the whimsically named `steal_bundles()` method to instantiate a search interaction\n#\n# For more information, see https://github.com/UMEssen/FHIR-PYrate/#pirate\nbundles = search.steal_bundles(\n    resource_type='Patient',\n    request_params={\n        \"_count\": 10 # Get 10 instances per page\n    },\n    num_pages=1 # Get 1 page (so a total of 10 instances)\n)\n\n# Execute the search and convert to a Pandas DataFrame\ndf = search.bundles_to_dataframe(bundles)\n\ndf.head(5)\n\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Patient?_count=10\n\n\nQuery (Patient):   0%|          | 0/1 [00:00&lt;?, ?it/s]Query (Patient): 100%|██████████| 1/1 [00:00&lt;00:00, 722.04it/s]\n\n\n\n\n\n\n\n\n\nresourceType\nid\nmeta_versionId\nmeta_lastUpdated\nmeta_source\ntext_status\ntext_div\nextension_0_url\nextension_0_extension_0_url\nextension_0_extension_0_valueCoding_system\n...\naddress_0_country\nmaritalStatus_coding_0_system\nmaritalStatus_coding_0_code\nmaritalStatus_coding_0_display\nmaritalStatus_text\nmultipleBirthBoolean\ncommunication_0_language_coding_0_system\ncommunication_0_language_coding_0_code\ncommunication_0_language_coding_0_display\ncommunication_0_language_text\n\n\n\n\n0\nPatient\n1\n1\n2023-04-06T20:52:11.000+00:00\n#wQwWCylvgEiNKNbB\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/us/core/StructureDefinitio...\nombCategory\nurn:oid:2.16.840.1.113883.6.238\n...\nUS\nhttp://terminology.hl7.org/CodeSystem/v3-Marit...\nM\nM\nM\nFalse\nurn:ietf:bcp:47\nen-US\nEnglish\nEnglish\n\n\n1\nPatient\n180\n1\n2023-04-06T20:53:35.000+00:00\n#N1sYXaxE6wGQilNA\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/us/core/StructureDefinitio...\nombCategory\nurn:oid:2.16.840.1.113883.6.238\n...\nUS\nhttp://terminology.hl7.org/CodeSystem/v3-Marit...\nS\nNever Married\nNever Married\nFalse\nurn:ietf:bcp:47\nen-US\nEnglish\nEnglish\n\n\n2\nPatient\n293\n1\n2023-04-06T20:56:31.000+00:00\n#ZAAeVXzDXxeetcQS\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/us/core/StructureDefinitio...\nombCategory\nurn:oid:2.16.840.1.113883.6.238\n...\nUS\nhttp://terminology.hl7.org/CodeSystem/v3-Marit...\nS\nS\nS\nFalse\nurn:ietf:bcp:47\nen-US\nEnglish\nEnglish\n\n\n3\nPatient\n612\n1\n2023-04-06T20:57:01.000+00:00\n#sTSlRxyopDL1X4fa\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/us/core/StructureDefinitio...\nombCategory\nurn:oid:2.16.840.1.113883.6.238\n...\nUS\nhttp://terminology.hl7.org/CodeSystem/v3-Marit...\nS\nS\nS\nFalse\nurn:ietf:bcp:47\nen-US\nEnglish\nEnglish\n\n\n4\nPatient\n931\n1\n2023-04-06T20:57:13.000+00:00\n#ElqD7MaHoYuk6qSo\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/us/core/StructureDefinitio...\nombCategory\nurn:oid:2.16.840.1.113883.6.238\n...\nUS\nhttp://terminology.hl7.org/CodeSystem/v3-Marit...\nS\nS\nS\nFalse\nurn:ietf:bcp:47\nen-US\nEnglish\nEnglish\n\n\n\n\n5 rows × 87 columns\n\n\n\nIt is easier to see the contents of this DataFrame by printing out its first row vertically:\n\n# Print the first row of the DataFrame vertically for easier reading.\npd.set_option('display.max_rows', 100)  # Show all rows\ndf.head(1).T\n\n\n\n\n\n\n\n\n0\n\n\n\n\nresourceType\nPatient\n\n\nid\n1\n\n\nmeta_versionId\n1\n\n\nmeta_lastUpdated\n2023-04-06T20:52:11.000+00:00\n\n\nmeta_source\n#wQwWCylvgEiNKNbB\n\n\ntext_status\ngenerated\n\n\ntext_div\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\n\n\nextension_0_url\nhttp://hl7.org/fhir/us/core/StructureDefinitio...\n\n\nextension_0_extension_0_url\nombCategory\n\n\nextension_0_extension_0_valueCoding_system\nurn:oid:2.16.840.1.113883.6.238\n\n\nextension_0_extension_0_valueCoding_code\n2054-5\n\n\nextension_0_extension_0_valueCoding_display\nBlack or African American\n\n\nextension_0_extension_1_url\ntext\n\n\nextension_0_extension_1_valueString\nBlack or African American\n\n\nextension_1_url\nhttp://hl7.org/fhir/us/core/StructureDefinitio...\n\n\nextension_1_extension_0_url\nombCategory\n\n\nextension_1_extension_0_valueCoding_system\nurn:oid:2.16.840.1.113883.6.238\n\n\nextension_1_extension_0_valueCoding_code\n2186-5\n\n\nextension_1_extension_0_valueCoding_display\nNot Hispanic or Latino\n\n\nextension_1_extension_1_url\ntext\n\n\nextension_1_extension_1_valueString\nNot Hispanic or Latino\n\n\nextension_2_url\nhttp://hl7.org/fhir/StructureDefinition/patien...\n\n\nextension_2_valueString\nDelois358 Hintz995\n\n\nextension_3_url\nhttp://hl7.org/fhir/us/core/StructureDefinitio...\n\n\nextension_3_valueCode\nM\n\n\nextension_4_url\nhttp://hl7.org/fhir/StructureDefinition/patien...\n\n\nextension_4_valueAddress_city\nLawrence\n\n\nextension_4_valueAddress_state\nMassachusetts\n\n\nextension_4_valueAddress_country\nUS\n\n\nextension_5_url\nhttp://synthetichealth.github.io/synthea/disab...\n\n\nextension_5_valueDecimal\n0.098274\n\n\nextension_6_url\nhttp://synthetichealth.github.io/synthea/quali...\n\n\nextension_6_valueDecimal\n62.901726\n\n\nidentifier_0_system\nhttps://github.com/synthetichealth/synthea\n\n\nidentifier_0_value\n439b24b4-6f25-4093-b101-47a39bd061ca\n\n\nidentifier_1_type_coding_0_system\nhttp://terminology.hl7.org/CodeSystem/v2-0203\n\n\nidentifier_1_type_coding_0_code\nMR\n\n\nidentifier_1_type_coding_0_display\nMedical Record Number\n\n\nidentifier_1_type_text\nMedical Record Number\n\n\nidentifier_1_system\nhttp://hospital.smarthealthit.org\n\n\nidentifier_1_value\n439b24b4-6f25-4093-b101-47a39bd061ca\n\n\nidentifier_2_type_coding_0_system\nhttp://terminology.hl7.org/CodeSystem/v2-0203\n\n\nidentifier_2_type_coding_0_code\nSS\n\n\nidentifier_2_type_coding_0_display\nSocial Security Number\n\n\nidentifier_2_type_text\nSocial Security Number\n\n\nidentifier_2_system\nhttp://hl7.org/fhir/sid/us-ssn\n\n\nidentifier_2_value\n999-57-3355\n\n\nidentifier_3_type_coding_0_system\nhttp://terminology.hl7.org/CodeSystem/v2-0203\n\n\nidentifier_3_type_coding_0_code\nDL\n\n\nidentifier_3_type_coding_0_display\nDriver's License\n\n\nidentifier_3_type_text\nDriver's License\n\n\nidentifier_3_system\nurn:oid:2.16.840.1.113883.4.3.25\n\n\nidentifier_3_value\nS99925942\n\n\nidentifier_4_type_coding_0_system\nhttp://terminology.hl7.org/CodeSystem/v2-0203\n\n\nidentifier_4_type_coding_0_code\nPPN\n\n\nidentifier_4_type_coding_0_display\nPassport Number\n\n\nidentifier_4_type_text\nPassport Number\n\n\nidentifier_4_system\nhttp://standardhealthrecord.org/fhir/Structure...\n\n\nidentifier_4_value\nX42032818X\n\n\nname_0_use\nofficial\n\n\nname_0_family\nMoen819\n\n\nname_0_given_0\nWillian804\n\n\nname_0_prefix_0\nMr.\n\n\ntelecom_0_system\nphone\n\n\ntelecom_0_value\n555-135-7303\n\n\ntelecom_0_use\nhome\n\n\ngender\nmale\n\n\nbirthDate\n1955-10-09\n\n\naddress_0_extension_0_url\nhttp://hl7.org/fhir/StructureDefinition/geoloc...\n\n\naddress_0_extension_0_extension_0_url\nlatitude\n\n\naddress_0_extension_0_extension_0_valueDecimal\n42.319305\n\n\naddress_0_extension_0_extension_1_url\nlongitude\n\n\naddress_0_extension_0_extension_1_valueDecimal\n-71.173653\n\n\naddress_0_line_0\n545 Tromp Port Unit 55\n\n\naddress_0_city\nNeedham\n\n\naddress_0_state\nMassachusetts\n\n\naddress_0_postalCode\n02492\n\n\naddress_0_country\nUS\n\n\nmaritalStatus_coding_0_system\nhttp://terminology.hl7.org/CodeSystem/v3-Marit...\n\n\nmaritalStatus_coding_0_code\nM\n\n\nmaritalStatus_coding_0_display\nM\n\n\nmaritalStatus_text\nM\n\n\nmultipleBirthBoolean\nFalse\n\n\ncommunication_0_language_coding_0_system\nurn:ietf:bcp:47\n\n\ncommunication_0_language_coding_0_code\nen-US\n\n\ncommunication_0_language_coding_0_display\nEnglish\n\n\ncommunication_0_language_text\nEnglish\n\n\n\n\n\n\n\nIf you look at the output above, you can see FHIR-PYrate collapsed the hierarchical FHIR data structure into DataFrame columns. FHIR-PYrate does this by taking an element from the FHIR-formatted data like Patient.identifier[0].value and converting to an underscore-delimited column name like identifier_0_value. (Note that Patient.identifier has multiple values in the FHIR data, so there are multiple identifier_N_... columns in the DataFrame.)"
  },
  {
    "objectID": "modules/tabular-python.html#selecting-specific-columns",
    "href": "modules/tabular-python.html#selecting-specific-columns",
    "title": "Analyzing FHIR Data in a Tabular Format With Python",
    "section": "3 Selecting specific columns",
    "text": "3 Selecting specific columns\nUsually not every single value from a FHIR instance is needed for analysis. There are two ways to get a more concise DataFrame:\n\nUse the approach above to load all elements into a DataFrame, remove the unneeded columns, and rename the remaining columns as needed. The process_function capability in FHIR-PYrate allows you to integrate this approach into the bundles_to_dataframe() method call.\nUse FHIRPath to select specific elements and map them onto column names.\n\nThe second approach is typically more concise. For example, to generate a DataFrame like this…\n\n\n\nid\ngender\ndate_of_birth\nmarital_status\n\n\n\n\n…\n…\n…\n…\n\n\n\n…you could use the following code:\n\n# Instantiate and perform the FHIR search interaction in a single function call\ndf = search.steal_bundles_to_dataframe(\n    resource_type='Patient',\n    request_params={\n        \"_count\": 10  # Get 10 instances per page\n    },\n    num_pages=1,  # Get 1 page (so a total of 10 instances)\n    fhir_paths=[\n        (\"id\", \"identifier[0].value\"),\n        (\"gender\", \"gender\"),\n        (\"date_of_birth\", \"birthDate\"),\n        (\"marital_status\", \"maritalStatus.coding[0].code\")\n    ])\ndf\n\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Patient?_count=10\n\n\nQuery & Build DF (Patient):   0%|          | 0/1 [00:00&lt;?, ?it/s]Query & Build DF (Patient): 100%|██████████| 1/1 [00:00&lt;00:00, 198.33it/s]\n\n\n\n\n\n\n\n\n\nid\ngender\ndate_of_birth\nmarital_status\n\n\n\n\n0\n439b24b4-6f25-4093-b101-47a39bd061ca\nmale\n1955-10-09\nM\n\n\n1\n99285aac-e5e3-4f5b-857d-f67271c97304\nfemale\n2017-12-02\nS\n\n\n2\n2fa15bc7-8866-461a-9000-f739e425860a\nmale\n1945-12-10\nS\n\n\n3\n2fa15bc7-8866-461a-9000-f739e425860a\nmale\n1945-12-10\nS\n\n\n4\n2fa15bc7-8866-461a-9000-f739e425860a\nmale\n1945-12-10\nS\n\n\n5\n41166989-975d-4d17-b9de-17f94cb3eec1\nmale\n1946-03-29\nM\n\n\n6\n2b083021-e93f-4991-bf49-fd4f20060ef8\nfemale\n2002-10-24\nS\n\n\n7\n29e51479-f742-4474-8f8e-d2607d5269f6\nmale\n1999-12-12\nS\n\n\n8\n262b819a-5193-404a-9787-b7f599358035\nmale\n2002-04-15\nS\n\n\n9\naff8f143-2375-416f-901d-b0e4c73e3e58\nmale\n1997-12-26\nS\n\n\n\n\n\n\n\nWhile FHIRPath can be quite complex, its use in FHIR-PYrate is often straight forward. Nested elements are separated with ., and elements with multiple sub-values are identified by [N] where N is an integer starting at 0. The element paths can typically be constructed by loading all elements into a DataFrame and then manually deriving the FHIRPaths from the column names, or by looking at the hierarchy resource pages in the FHIR specification (see Key FHIR Resources for more information on reading the FHIR specification)."
  },
  {
    "objectID": "modules/tabular-python.html#elements-with-multiple-sub-values",
    "href": "modules/tabular-python.html#elements-with-multiple-sub-values",
    "title": "Analyzing FHIR Data in a Tabular Format With Python",
    "section": "4 Elements with multiple sub-values",
    "text": "4 Elements with multiple sub-values\nThere are multiple identifier[N].value values for each instance of Patient in this dataset.\n\n# Instantiate and perform the FHIR search interaction in a single function call\ndf = search.steal_bundles_to_dataframe(\n    resource_type='Patient',\n    request_params={\n        \"_count\": 10  # Get 10 instances per page\n    },\n    num_pages=1,  # Get 1 page (so a total of 10 instances)\n    fhir_paths=[\n        (\"id\", \"identifier[0].value\"),\n        (\"identifiers\", \"identifier.value\")\n    ])\ndf\n\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Patient?_count=10\n\n\nQuery & Build DF (Patient):   0%|          | 0/1 [00:00&lt;?, ?it/s]Query & Build DF (Patient): 100%|██████████| 1/1 [00:00&lt;00:00, 684.45it/s]\n\n\n\n\n\n\n\n\n\nid\nidentifiers\n\n\n\n\n0\n439b24b4-6f25-4093-b101-47a39bd061ca\n[439b24b4-6f25-4093-b101-47a39bd061ca, 439b24b...\n\n\n1\n99285aac-e5e3-4f5b-857d-f67271c97304\n[99285aac-e5e3-4f5b-857d-f67271c97304, 99285aa...\n\n\n2\n2fa15bc7-8866-461a-9000-f739e425860a\n[2fa15bc7-8866-461a-9000-f739e425860a, 2fa15bc...\n\n\n3\n2fa15bc7-8866-461a-9000-f739e425860a\n[2fa15bc7-8866-461a-9000-f739e425860a, 2fa15bc...\n\n\n4\n2fa15bc7-8866-461a-9000-f739e425860a\n[2fa15bc7-8866-461a-9000-f739e425860a, 2fa15bc...\n\n\n5\n41166989-975d-4d17-b9de-17f94cb3eec1\n[41166989-975d-4d17-b9de-17f94cb3eec1, 4116698...\n\n\n6\n2b083021-e93f-4991-bf49-fd4f20060ef8\n[2b083021-e93f-4991-bf49-fd4f20060ef8, 2b08302...\n\n\n7\n29e51479-f742-4474-8f8e-d2607d5269f6\n[29e51479-f742-4474-8f8e-d2607d5269f6, 29e5147...\n\n\n8\n262b819a-5193-404a-9787-b7f599358035\n[262b819a-5193-404a-9787-b7f599358035, 262b819...\n\n\n9\naff8f143-2375-416f-901d-b0e4c73e3e58\n[aff8f143-2375-416f-901d-b0e4c73e3e58, aff8f14...\n\n\n\n\n\n\n\nTo convert to separate columns, you can do the following:\n\ndf.join(\n    pd.DataFrame(\n        df.pop('identifiers').values.tolist()\n    ).add_prefix('identifier_')\n)\n\n\n\n\n\n\n\n\nid\nidentifier_0\nidentifier_1\nidentifier_2\nidentifier_3\nidentifier_4\n\n\n\n\n0\n439b24b4-6f25-4093-b101-47a39bd061ca\n439b24b4-6f25-4093-b101-47a39bd061ca\n439b24b4-6f25-4093-b101-47a39bd061ca\n999-57-3355\nS99925942\nX42032818X\n\n\n1\n99285aac-e5e3-4f5b-857d-f67271c97304\n99285aac-e5e3-4f5b-857d-f67271c97304\n99285aac-e5e3-4f5b-857d-f67271c97304\n999-62-8033\nNone\nNone\n\n\n2\n2fa15bc7-8866-461a-9000-f739e425860a\n2fa15bc7-8866-461a-9000-f739e425860a\n2fa15bc7-8866-461a-9000-f739e425860a\n999-93-7537\nS99948707\nX14078167X\n\n\n3\n2fa15bc7-8866-461a-9000-f739e425860a\n2fa15bc7-8866-461a-9000-f739e425860a\n2fa15bc7-8866-461a-9000-f739e425860a\n999-93-7537\nS99948707\nX14078167X\n\n\n4\n2fa15bc7-8866-461a-9000-f739e425860a\n2fa15bc7-8866-461a-9000-f739e425860a\n2fa15bc7-8866-461a-9000-f739e425860a\n999-93-7537\nS99948707\nX14078167X\n\n\n5\n41166989-975d-4d17-b9de-17f94cb3eec1\n41166989-975d-4d17-b9de-17f94cb3eec1\n41166989-975d-4d17-b9de-17f94cb3eec1\n999-17-8717\nS99933732\nX75257608X\n\n\n6\n2b083021-e93f-4991-bf49-fd4f20060ef8\n2b083021-e93f-4991-bf49-fd4f20060ef8\n2b083021-e93f-4991-bf49-fd4f20060ef8\n999-83-6040\nS99998967\nNone\n\n\n7\n29e51479-f742-4474-8f8e-d2607d5269f6\n29e51479-f742-4474-8f8e-d2607d5269f6\n29e51479-f742-4474-8f8e-d2607d5269f6\n999-48-8328\nS99955051\nNone\n\n\n8\n262b819a-5193-404a-9787-b7f599358035\n262b819a-5193-404a-9787-b7f599358035\n262b819a-5193-404a-9787-b7f599358035\n999-19-7941\nS99986287\nNone\n\n\n9\naff8f143-2375-416f-901d-b0e4c73e3e58\naff8f143-2375-416f-901d-b0e4c73e3e58\naff8f143-2375-416f-901d-b0e4c73e3e58\n999-35-9084\nS99998334\nX10377495X\n\n\n\n\n\n\n\nThis will give you separate identifier_0, identifier_1, … columns for each Patient.identifier[N] value."
  },
  {
    "objectID": "modules/tabular-python.html#retrieving-related-data",
    "href": "modules/tabular-python.html#retrieving-related-data",
    "title": "Analyzing FHIR Data in a Tabular Format With Python",
    "section": "5 Retrieving related data",
    "text": "5 Retrieving related data\nTo retrieve instances of related resources, additional request_params can be added. See Using the FHIR API to Access Data for more information on constructing the parameters for FHIR search interactions.\nIn the example below, instances of Patient and instances of related Observation resources are requested:\n\n# Instantiate and perform the FHIR search interaction in a single function call\ndfs = search.steal_bundles_to_dataframe(\n    resource_type='Patient',\n    request_params={\n        # Get instances of Observation where `Observation.patient` refers to a fetched Patient instance\n        \"_revinclude\": \"Observation:patient\",\n\n        \"_count\": 10  # Get 10 instances per page\n    },\n    num_pages=1,  # Get 1 page (so a total of 10 instances)\n)\n\n# `dfs` is a dictionary where the key is the FHIR resource type, and the value is the DataFrame\n#\n# Split these into separate variables for easy access:\ndf_patients = dfs['Patient']\ndf_observations = dfs['Observation']\n\n# Look at the first row of the Observations DataFrame\ndf_observations.head(1).T\n\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Patient?_count=10&_revinclude=Observation:patient\n\n\nQuery & Build DF (Patient):   0%|          | 0/1 [00:00&lt;?, ?it/s]Query & Build DF (Patient): 100%|██████████| 1/1 [00:00&lt;00:00, 43.19it/s]\n\n\n\n\n\n\n\n\n\n0\n\n\n\n\nresourceType\nObservation\n\n\nid\n2048\n\n\nmeta_versionId\n1\n\n\nmeta_lastUpdated\n2023-04-06T20:58:59.000+00:00\n\n\nmeta_source\n#aCMN9zUZkrDZoyGR\n\n\nstatus\nfinal\n\n\ncategory_0_coding_0_system\nhttp://terminology.hl7.org/CodeSystem/observat...\n\n\ncategory_0_coding_0_code\nvital-signs\n\n\ncategory_0_coding_0_display\nvital-signs\n\n\ncode_coding_0_system\nhttp://loinc.org\n\n\ncode_coding_0_code\n29463-7\n\n\ncode_coding_0_display\nBody Weight\n\n\ncode_text\nBody Weight\n\n\nsubject_reference\nPatient/1989\n\n\nencounter_reference\nEncounter/2045\n\n\neffectiveDateTime\n2012-01-01T22:52:53-05:00\n\n\nissued\n2012-01-01T22:52:53.991-05:00\n\n\nvalueQuantity_value\n42.979797\n\n\nvalueQuantity_unit\nkg\n\n\nvalueQuantity_system\nhttp://unitsofmeasure.org\n\n\nvalueQuantity_code\nkg\n\n\ncomponent_0_code_coding_0_system\nNaN\n\n\ncomponent_0_code_coding_0_code\nNaN\n\n\ncomponent_0_code_coding_0_display\nNaN\n\n\ncomponent_0_code_text\nNaN\n\n\ncomponent_0_valueQuantity_value\nNaN\n\n\ncomponent_0_valueQuantity_unit\nNaN\n\n\ncomponent_0_valueQuantity_system\nNaN\n\n\ncomponent_0_valueQuantity_code\nNaN\n\n\ncomponent_1_code_coding_0_system\nNaN\n\n\ncomponent_1_code_coding_0_code\nNaN\n\n\ncomponent_1_code_coding_0_display\nNaN\n\n\ncomponent_1_code_text\nNaN\n\n\ncomponent_1_valueQuantity_value\nNaN\n\n\ncomponent_1_valueQuantity_unit\nNaN\n\n\ncomponent_1_valueQuantity_system\nNaN\n\n\ncomponent_1_valueQuantity_code\nNaN\n\n\nvalueCodeableConcept_coding_0_system\nNaN\n\n\nvalueCodeableConcept_coding_0_code\nNaN\n\n\nvalueCodeableConcept_coding_0_display\nNaN\n\n\nvalueCodeableConcept_text\nNaN\n\n\n\n\n\n\n\nAs of April 2023, FHIR-PYrate does not have a good approach to fhir_paths for searches that return instances of multiple FHIR resource types.\nTo work around this, you can also iterate over all the rows in a DataFrame and request related resources using trade_rows_for_bundles():\n\ndf_observations2 = search.trade_rows_for_dataframe(\n    df_patients,\n    resource_type=\"Observation\",\n\n    # Limit to 10 instances of Observation per patient\n    request_params={\n        \"_count\": \"10\"\n    },\n    num_pages=1,\n\n    # Load Observations where `Observation.subject` references the instance of Patient\n    # identified by `id` in the `df_patients` DataFrame\n    df_constraints={\"subject\": \"id\"},\n    fhir_paths=[\n      (\"observation_id\", \"id\"),\n      (\"patient\", \"subject.reference\"),\n      (\"status\", \"status\"),\n      (\"code\", \"code.coding[0].code\"),\n      (\"code_display\", \"code.coding[0].display\"),\n      (\"value\", \"valueQuantity.value\"),\n      (\"value_units\", \"valueQuantity.unit\"),\n      (\"datetime\", \"effectiveDateTime\")\n    ]\n)\n\n# Look at the first row of the Observations DataFrame\ndf_observations2.head(15)\n\nQuery & Build DF (Observation):   0%|          | 0/10 [00:00&lt;?, ?it/s]                                                                      Query & Build DF (Observation):   0%|          | 0/10 [00:00&lt;?, ?it/s]Query & Build DF (Observation):  10%|█         | 1/10 [00:00&lt;00:02,  3.37it/s]                                                                              Query & Build DF (Observation):  10%|█         | 1/10 [00:00&lt;00:02,  3.37it/s]Query & Build DF (Observation):  20%|██        | 2/10 [00:00&lt;00:02,  3.48it/s]                                                                              Query & Build DF (Observation):  20%|██        | 2/10 [00:00&lt;00:02,  3.48it/s]Query & Build DF (Observation):  30%|███       | 3/10 [00:00&lt;00:02,  3.23it/s]                                                                              Query & Build DF (Observation):  30%|███       | 3/10 [00:01&lt;00:02,  3.23it/s]Query & Build DF (Observation):  40%|████      | 4/10 [00:01&lt;00:01,  3.35it/s]                                                                              Query & Build DF (Observation):  40%|████      | 4/10 [00:01&lt;00:01,  3.35it/s]Query & Build DF (Observation):  50%|█████     | 5/10 [00:01&lt;00:01,  3.36it/s]                                                                              Query & Build DF (Observation):  50%|█████     | 5/10 [00:01&lt;00:01,  3.36it/s]Query & Build DF (Observation):  60%|██████    | 6/10 [00:01&lt;00:01,  2.73it/s]                                                                              Query & Build DF (Observation):  60%|██████    | 6/10 [00:02&lt;00:01,  2.73it/s]Query & Build DF (Observation):  70%|███████   | 7/10 [00:02&lt;00:01,  2.99it/s]                                                                              Query & Build DF (Observation):  70%|███████   | 7/10 [00:02&lt;00:01,  2.99it/s]Query & Build DF (Observation):  80%|████████  | 8/10 [00:02&lt;00:00,  3.27it/s]                                                                              Query & Build DF (Observation):  80%|████████  | 8/10 [00:02&lt;00:00,  3.27it/s]Query & Build DF (Observation):  90%|█████████ | 9/10 [00:02&lt;00:00,  2.96it/s]                                                                              Query & Build DF (Observation):  90%|█████████ | 9/10 [00:03&lt;00:00,  2.96it/s]Query & Build DF (Observation): 100%|██████████| 10/10 [00:03&lt;00:00,  3.09it/s]Query & Build DF (Observation): 100%|██████████| 10/10 [00:03&lt;00:00,  3.12it/s]\n\n\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&subject=1\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&subject=180\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&subject=293\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&subject=612\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&subject=931\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&subject=1250\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&subject=1806\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&subject=1989\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&subject=2172\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&subject=2370\n\n\n\n\n\n\n\n\n\nobservation_id\npatient\nstatus\ncode\ncode_display\ndatetime\nvalue\nvalue_units\nid\n\n\n\n\n0\n122\nPatient/1\nfinal\n72166-2\nTobacco smoking status NHIS\n2015-12-06T14:48:37-05:00\nNaN\nNaN\n1\n\n\n1\n121\nPatient/1\nfinal\n55284-4\nBlood Pressure\n2015-12-06T14:48:37-05:00\nNaN\nNaN\n1\n\n\n2\n61\nPatient/1\nfinal\n72166-2\nTobacco smoking status NHIS\n2011-11-13T14:48:37-05:00\nNaN\nNaN\n1\n\n\n3\n120\nPatient/1\nfinal\n39156-5\nBody Mass Index\n2015-12-06T14:48:37-05:00\n25.783578\nkg/m2\n1\n\n\n4\n60\nPatient/1\nfinal\n2085-9\nHigh Density Lipoprotein Cholesterol\n2011-11-13T14:48:37-05:00\n79.213320\nmg/dL\n1\n\n\n5\n69\nPatient/1\nfinal\n72514-3\nPain severity - 0-10 verbal numeric rating [Sc...\n2012-11-18T14:48:37-05:00\n0.845428\n{score}\n1\n\n\n6\n68\nPatient/1\nfinal\n8302-2\nBody Height\n2012-11-18T14:48:37-05:00\n190.900092\ncm\n1\n\n\n7\n70\nPatient/1\nfinal\n29463-7\nBody Weight\n2012-11-18T14:48:37-05:00\n95.644696\nkg\n1\n\n\n8\n110\nPatient/1\nfinal\n72166-2\nTobacco smoking status NHIS\n2014-11-30T14:48:37-05:00\nNaN\nNaN\n1\n\n\n9\n72\nPatient/1\nfinal\n55284-4\nBlood Pressure\n2012-11-18T14:48:37-05:00\nNaN\nNaN\n1\n\n\n10\n247\nPatient/180\nfinal\n77606-2\nWeight-for-length Per age and sex\n2018-08-11T23:47:47-04:00\n87.806367\n%\n180\n\n\n11\n246\nPatient/180\nfinal\n29463-7\nBody Weight\n2018-08-11T23:47:47-04:00\n9.618441\nkg\n180\n\n\n12\n245\nPatient/180\nfinal\n72514-3\nPain severity - 0-10 verbal numeric rating [Sc...\n2018-08-11T23:47:47-04:00\n2.566816\n{score}\n180\n\n\n13\n244\nPatient/180\nfinal\n8302-2\nBody Height\n2018-08-11T23:47:47-04:00\n70.813536\ncm\n180\n\n\n14\n249\nPatient/180\nfinal\n72166-2\nTobacco smoking status NHIS\n2018-08-11T23:47:47-04:00\nNaN\nNaN\n180\n\n\n\n\n\n\n\nNote that this will only display value for instances of Observation that record a value in Observation.valueQuantity. Typically, you would filter by Observation.code and then choose the appropriate data type for Observation.value[x] to import. For example, http://loinc.org|72166-2 is the LOINC for smoking status. To get smoking status records for all patients in df_patients:\n\ndf_observations2 = search.trade_rows_for_dataframe(\n    df_patients,\n    resource_type=\"Observation\",\n\n    # Limit to 10 instances of Observation per patient\n    request_params={\n        \"_count\": \"10\",\n        \"code\": \"http://loinc.org|72166-2\"\n    },\n    num_pages=1,\n\n    # Load Observations where `Observation.subject` references the instance of Patient\n    # identified by `id` in the `df_patients` DataFrame\n    df_constraints={\"subject\": \"id\"},\n    fhir_paths=[\n      (\"observation_id\", \"id\"),\n      (\"patient\", \"subject.reference\"),\n      (\"status\", \"status\"),\n      (\"code\", \"code.coding[0].code\"),\n      (\"code_display\", \"code.coding[0].display\"),\n      (\"value\", \"valueCodeableConcept.coding[0].code\"),\n      (\"value_display\", \"valueCodeableConcept.coding[0].display\"),\n      (\"datetime\", \"effectiveDateTime\")\n    ]\n)\n\n# Look at the first row of the Observations DataFrame\ndf_observations2.head(15)\n\nQuery & Build DF (Observation):   0%|          | 0/10 [00:00&lt;?, ?it/s]                                                                      Query & Build DF (Observation):   0%|          | 0/10 [00:00&lt;?, ?it/s]Query & Build DF (Observation):  10%|█         | 1/10 [00:00&lt;00:02,  3.81it/s]                                                                              Query & Build DF (Observation):  10%|█         | 1/10 [00:00&lt;00:02,  3.81it/s]Query & Build DF (Observation):  20%|██        | 2/10 [00:00&lt;00:02,  3.86it/s]                                                                              Query & Build DF (Observation):  20%|██        | 2/10 [00:00&lt;00:02,  3.86it/s]Query & Build DF (Observation):  30%|███       | 3/10 [00:00&lt;00:01,  3.95it/s]                                                                              Query & Build DF (Observation):  30%|███       | 3/10 [00:01&lt;00:01,  3.95it/s]Query & Build DF (Observation):  40%|████      | 4/10 [00:01&lt;00:01,  3.97it/s]                                                                              Query & Build DF (Observation):  40%|████      | 4/10 [00:01&lt;00:01,  3.97it/s]Query & Build DF (Observation):  50%|█████     | 5/10 [00:01&lt;00:01,  4.11it/s]                                                                              Query & Build DF (Observation):  50%|█████     | 5/10 [00:01&lt;00:01,  4.11it/s]Query & Build DF (Observation):  60%|██████    | 6/10 [00:01&lt;00:01,  3.89it/s]                                                                              Query & Build DF (Observation):  60%|██████    | 6/10 [00:01&lt;00:01,  3.89it/s]Query & Build DF (Observation):  70%|███████   | 7/10 [00:01&lt;00:00,  3.77it/s]                                                                              Query & Build DF (Observation):  70%|███████   | 7/10 [00:02&lt;00:00,  3.77it/s]Query & Build DF (Observation):  80%|████████  | 8/10 [00:02&lt;00:00,  3.71it/s]                                                                              Query & Build DF (Observation):  80%|████████  | 8/10 [00:02&lt;00:00,  3.71it/s]Query & Build DF (Observation):  90%|█████████ | 9/10 [00:02&lt;00:00,  3.67it/s]                                                                              Query & Build DF (Observation):  90%|█████████ | 9/10 [00:02&lt;00:00,  3.67it/s]Query & Build DF (Observation): 100%|██████████| 10/10 [00:02&lt;00:00,  3.63it/s]Query & Build DF (Observation): 100%|██████████| 10/10 [00:02&lt;00:00,  3.77it/s]\n\n\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&code=http://loinc.org|72166-2&subject=1\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&code=http://loinc.org|72166-2&subject=180\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&code=http://loinc.org|72166-2&subject=293\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&code=http://loinc.org|72166-2&subject=612\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&code=http://loinc.org|72166-2&subject=931\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&code=http://loinc.org|72166-2&subject=1250\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&code=http://loinc.org|72166-2&subject=1806\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&code=http://loinc.org|72166-2&subject=1989\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&code=http://loinc.org|72166-2&subject=2172\nhttps://api.logicahealth.org/FHIRResearchSynthea/open/Observation?_count=10&code=http://loinc.org|72166-2&subject=2370\n\n\n\n\n\n\n\n\n\nobservation_id\npatient\nstatus\ncode\ncode_display\nvalue\nvalue_display\ndatetime\nid\n\n\n\n\n0\n122\nPatient/1\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2015-12-06T14:48:37-05:00\n1\n\n\n1\n61\nPatient/1\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2011-11-13T14:48:37-05:00\n1\n\n\n2\n110\nPatient/1\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2014-11-30T14:48:37-05:00\n1\n\n\n3\n84\nPatient/1\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2012-11-18T14:48:37-05:00\n1\n\n\n4\n95\nPatient/1\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2013-11-24T14:48:37-05:00\n1\n\n\n5\n136\nPatient/1\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2016-12-11T14:48:37-05:00\n1\n\n\n6\n163\nPatient/1\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2017-12-17T14:48:37-05:00\n1\n\n\n7\n20\nPatient/1\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2009-11-01T14:48:37-05:00\n1\n\n\n8\n42\nPatient/1\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2010-11-07T14:48:37-05:00\n1\n\n\n9\n176\nPatient/1\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2018-12-23T14:48:37-05:00\n1\n\n\n10\n249\nPatient/180\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2018-08-11T23:47:47-04:00\n180\n\n\n11\n235\nPatient/180\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2018-05-12T23:47:47-04:00\n180\n\n\n12\n264\nPatient/180\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2018-11-10T22:47:47-05:00\n180\n\n\n13\n200\nPatient/180\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2017-12-02T22:47:47-05:00\n180\n\n\n14\n288\nPatient/180\nfinal\n72166-2\nTobacco smoking status NHIS\n266919005\nNever smoker\n2019-05-11T23:47:47-04:00\n180\n\n\n\n\n\n\n\nMore information about the search interaction used above to filter Observations is here."
  },
  {
    "objectID": "modules/tabular-python.html#additional-resources",
    "href": "modules/tabular-python.html#additional-resources",
    "title": "Analyzing FHIR Data in a Tabular Format With Python",
    "section": "6 Additional resources",
    "text": "6 Additional resources\nNIH’s Office of Data Science Strategy has online exercises for converting FHIR-formatted data into tabular format for further analysis. These exercises include implementations in both Python and R.\nNote that the Python version of these exercises was created before the FHIR-PYrate library existed, so they use the “writing Python code to manually convert FHIR instances in JSON Format into DataFrames” approach. This approach may still be useful for use cases that are not well-supported by FHIR-PYrate or for integrating FHIR data with data from other web APIs."
  },
  {
    "objectID": "modules/tabular-r.html",
    "href": "modules/tabular-r.html",
    "title": "Analyzing FHIR Data in a Tabular Format With R",
    "section": "",
    "text": "Learning objectives\n\n\n\n\n\n    Understand the high-level approaches for converting FHIR-formatted data into tabular for analysis in R.\n\n\n    Learn how the fhircrackr library facilitates requesting data from a FHIR server, and creating tidy tabular data tables.\nData analysis approaches in R typically uses data frames to store tabular data. There are two primary approaches to loading FHIR-formatted data into Pandas DataFrames:\nTo use fhircrackr, you will need a R runtime with fhircrackr installed. Typically R users work in the RStudio IDE but this is not strictly necessary."
  },
  {
    "objectID": "modules/tabular-r.html#fhir-testing-server",
    "href": "modules/tabular-r.html#fhir-testing-server",
    "title": "Analyzing FHIR Data in a Tabular Format With R",
    "section": "1 FHIR testing server",
    "text": "1 FHIR testing server\nThe examples in this module use a FHIR testing server populated with Synthea data in FHIR R4 format via Logica Health’s Sandbox service.\nThe endpoint for this testing server is:\nhttps://api.logicahealth.org/FHIRResearchSynthea/open\nHowever, any FHIR server loaded with testing data can be used. See Standing up a FHIR Testing Server for instructions to set up your own test server.\nThe code blocks in the following section show sample output immediately after. This is similar to the code blocks and results in a rendered RMarkdown file."
  },
  {
    "objectID": "modules/tabular-r.html#retrieving-fhir-data",
    "href": "modules/tabular-r.html#retrieving-fhir-data",
    "title": "Analyzing FHIR Data in a Tabular Format With R",
    "section": "2 Retrieving FHIR data",
    "text": "2 Retrieving FHIR data\nOnce your environment is set up, you can run the following R code to retrieve instances of the Patient resource from a test server:\n\n# Load dependencies\nlibrary(fhircrackr)\nlibrary(tidyverse) # Not strictly necessary, but helpful for working with data in R\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Define the URL of the FHIR server and the request that will be made\nrequest &lt;- fhir_url(url = \"https://api.logicahealth.org/FHIRResearchSynthea/open\", resource = \"Patient\")\n\n# Perform the request\npatient_bundle &lt;- fhir_search(request = request, max_bundles = 1, verbose = 0)\n\n# This method defines the mapping from FHIR to data frame columns.\n# If the `cols` argument is omitted, all data elements will be included in the data frame.\ntable_desc_patient &lt;- fhir_table_description(\n    resource = \"Patient\"\n)\n\n# Convert to R data frame\ndf_patient &lt;- fhir_crack(bundles = patient_bundle, design = table_desc_patient, verbose = 0)\n\ndf_patient %&gt;% head(5)\n\n\n\n  \n\n\n\nIt is easier to see the contents of this DataFrame by printing out its first row vertically:\n\ndf_patient[1,] %&gt;% t\n\nnaddress.city                             \"Needham\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \naddress.countrynaddress.extension                        \"http://hl7.org/fhir/StructureDefinition/geolocation\"                                                                                                                                                                                                                                                                                                                                                                                                                                  \naddress.extension.extension              \"latitude:::longitude\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \naddress.extension.extension.valueDecimal \"42.319304553912225:::-71.17365303910063\"                                                                                                                                                                                                                                                                                                                                                                                                                                              \naddress.line                             \"545 Tromp Port Unit 55\"                                                                                                                                                                                                                                                                                                                                                                                                                                                               \naddress.postalCode                       \"02492\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \naddress.state                            \"Massachusetts\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \nbirthDatencommunication.language.coding.code       \"en-US\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \ncommunication.language.coding.display    \"English\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \ncommunication.language.coding.system     \"urn:ietf:bcp:47\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \ncommunication.language.text              \"English\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \ndeceasedDateTime                         NA                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \nextension                                \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-race:::http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity:::http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName:::http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex:::http://hl7.org/fhir/StructureDefinition/patient-birthPlace:::http://synthetichealth.github.io/synthea/disability-adjusted-life-years:::http://synthetichealth.github.io/synthea/quality-adjusted-life-years\"\nextension.extension                      \"ombCategory:::text:::ombCategory:::text\"                                                                                                                                                                                                                                                                                                                                                                                                                                              \nextension.extension.valueCoding.code     \"2054-5:::2186-5\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \nextension.extension.valueCoding.display  \"Black or African American:::Not Hispanic or Latino\"                                                                                                                                                                                                                                                                                                                                                                                                                                   \nextension.extension.valueCoding.system   \"urn:oid:2.16.840.1.113883.6.238:::urn:oid:2.16.840.1.113883.6.238\"                                                                                                                                                                                                                                                                                                                                                                                                                    \nextension.extension.valueString          \"Black or African American:::Not Hispanic or Latino\"                                                                                                                                                                                                                                                                                                                                                                                                                                   \nextension.valueAddress.city              \"Lawrence\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \nextension.valueAddress.country           \"US\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \nextension.valueAddress.state             \"Massachusetts\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \nextension.valueCode                      \"M\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \nextension.valueDecimal                   \"0.09827400029822156:::62.90172599970178\"                                                                                                                                                                                                                                                                                                                                                                                                                                              \nextension.valueString                    \"Delois358 Hintz995\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \ngender                                   \"male\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \nidnidentifier.system                        \"https://github.com/synthetichealth/synthea:::http://hospital.smarthealthit.org:::http://hl7.org/fhir/sid/us-ssn:::urn:oid:2.16.840.1.113883.4.3.25:::http://standardhealthrecord.org/fhir/StructureDefinition/passportNumber\"                                                                                                                                                                                                                                                         \nidentifier.type.coding.code              \"MR:::SS:::DL:::PPN\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \nidentifier.type.coding.display           \"Medical Record Number:::Social Security Number:::Driver's License:::Passport Number\"                                                                                                                                                                                                                                                                                                                                                                                                  \nidentifier.type.coding.system            \"http://terminology.hl7.org/CodeSystem/v2-0203:::http://terminology.hl7.org/CodeSystem/v2-0203:::http://terminology.hl7.org/CodeSystem/v2-0203:::http://terminology.hl7.org/CodeSystem/v2-0203\"                                                                                                                                                                                                                                                                                        \nidentifier.type.text                     \"Medical Record Number:::Social Security Number:::Driver's License:::Passport Number\"                                                                                                                                                                                                                                                                                                                                                                                                  \nidentifier.value                         \"439b24b4-6f25-4093-b101-47a39bd061ca:::439b24b4-6f25-4093-b101-47a39bd061ca:::999-57-3355:::S99925942:::X42032818X\"                                                                                                                                                                                                                                                                                                                                                                   \nmaritalStatus.coding.code                \"M\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \nmaritalStatus.coding.display             \"M\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \nmaritalStatus.coding.system              \"http://terminology.hl7.org/CodeSystem/v3-MaritalStatus\"                                                                                                                                                                                                                                                                                                                                                                                                                               \nmaritalStatus.text                       \"M\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \nmeta.lastUpdated                         \"2023-04-06T20:52:11.000+00:00\"                                                                                                                                                                                                                                                                                                                                                                                                                                                        \nmeta.source                              \"#wQwWCylvgEiNKNbB\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \nmeta.versionIdnmultipleBirthBoolean                     \"false\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \nmultipleBirthInteger                     NA                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \nname.family                              \"Moen819\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \nname.given                               \"Willian804\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \nname.prefix                              \"Mr.\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  \nname.use                                 \"official\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ntelecom.system                           \"phone\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \ntelecom.use                              \"home\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \ntelecom.valuentext.status                              \"generated\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n\n\nIf you look at the output above, you can see fhircrackr collapsed the hierarchical FHIR data structure into data frame columns, with multiple values delimited by ::: by default. For example, Patient.identifier has multiple values that appear in the data frame as:\n\n\n\n\n\n\n\nColumn name\nExample Values\n\n\n\n\nidentifier.type.text\nMedical Record Number:::Social Security Number:::Driver's License:::Passport Number\n\n\nidentifier.value\n439b24b4-6f25-4093-b101-47a39bd061ca:::439b24b4-6f25-4093-b101-47a39bd061ca:::999-57-3355:::S99925942:::X42032818X\n\n\n\nSplitting up these values is discussed below."
  },
  {
    "objectID": "modules/tabular-r.html#selecting-specific-columns",
    "href": "modules/tabular-r.html#selecting-specific-columns",
    "title": "Analyzing FHIR Data in a Tabular Format With R",
    "section": "3 Selecting specific columns",
    "text": "3 Selecting specific columns\nUsually not every single value from a FHIR instance is needed for analysis. There are two ways to get a more concise data frame:\n\nUse the approach above to load all elements into a data frame, remove the unneeded columns, and rename the remaining columns as needed.\nUse XPath to select specific elements and map them onto column names.\n\nThe second approach is typically more concise. For example, to generate a DataFrame like this…\n\n\n\nid\ngender\ndate_of_birth\nmarital_status\n\n\n\n\n…\n…\n…\n…\n\n\n\n…you could use the following code:\n\ntable_desc_patient &lt;- fhir_table_description(\n    resource = \"Patient\",\n    cols = c(\n        id = \"id\",\n        gender = \"gender\",\n        date_of_birth = \"birthDate\",\n        # Rather than having fhircrackr concatenate all `Patient.maritalStatus` values\n        # into one cell, you can select a specific value with XPath:\n        marital_status = \"maritalStatus/coding[1]/code\"\n    )\n)\n\ndf_patient &lt;- fhir_crack(bundles = patient_bundle, design = table_desc_patient, verbose=0)\n\ndf_patient %&gt;% head(5)\n\n\n\n  \n\n\n\nWhile XPath expressions can be quite complex, thier use in fhircrackr is often straight-forward. Nested elements are separated with /, and elements with multiple sub-values are identified by [N] where N is an integer starting at 1.\nThere are two approaches to identifying element paths to construct XPath expressions:\n\nLook at the FHIR specification or the relevant FHIR Implementation Guide to determine the paths of available data elements. For example, the Patient page in the FHIR specification describes the elements and their hierarchy for instances of Patient.\nPrint out the raw data returned by the FHIR server. Fhircrackr uses XML-formatted data, and the following code will print out one of the instances of Patient requested above:\n\nxml2::xml_find_first(x = patient_bundle[[1]], xpath = \"./entry[1]/resource\") %&gt;%\n  paste0 %&gt;%\n  cat\n\n&lt;resource&gt;\n  &lt;Patient&gt;\n    &lt;id value=\"1\"/&gt;\n    &lt;meta&gt;\n      &lt;versionId value=\"1\"/&gt;\n      &lt;lastUpdated value=\"2023-04-06T20:52:11.000+00:00\"/&gt;\n      &lt;source value=\"#wQwWCylvgEiNKNbB\"/&gt;\n    &lt;/meta&gt;\n    &lt;text&gt;\n      &lt;status value=\"generated\"/&gt;\n    &lt;/text&gt;\n    &lt;extension url=\"http://hl7.org/fhir/us/core/StructureDefinition/us-core-race\"&gt;\n      &lt;extension url=\"ombCategory\"&gt;\n        &lt;valueCoding&gt;\n          &lt;system value=\"urn:oid:2.16.840.1.113883.6.238\"/&gt;\n          &lt;code value=\"2054-5\"/&gt;\n          &lt;display value=\"Black or African American\"/&gt;\n        &lt;/valueCoding&gt;\n      &lt;/extension&gt;\n      &lt;extension url=\"text\"&gt;\n        &lt;valueString value=\"Black or African American\"/&gt;\n      &lt;/extension&gt;\n    &lt;/extension&gt;\n    &lt;extension url=\"http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity\"&gt;\n      &lt;extension url=\"ombCategory\"&gt;\n        &lt;valueCoding&gt;\n          &lt;system value=\"urn:oid:2.16.840.1.113883.6.238\"/&gt;\n          &lt;code value=\"2186-5\"/&gt;\n          &lt;display value=\"Not Hispanic or Latino\"/&gt;\n        &lt;/valueCoding&gt;\n      &lt;/extension&gt;\n      &lt;extension url=\"text\"&gt;\n        &lt;valueString value=\"Not Hispanic or Latino\"/&gt;\n      &lt;/extension&gt;\n    &lt;/extension&gt;\n    &lt;extension url=\"http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName\"&gt;\n      &lt;valueString value=\"Delois358 Hintz995\"/&gt;\n    &lt;/extension&gt;\n    &lt;extension url=\"http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex\"&gt;\n      &lt;valueCode value=\"M\"/&gt;\n    &lt;/extension&gt;\n    &lt;extension url=\"http://hl7.org/fhir/StructureDefinition/patient-birthPlace\"&gt;\n      &lt;valueAddress&gt;\n        &lt;city value=\"Lawrence\"/&gt;\n        &lt;state value=\"Massachusetts\"/&gt;\n        &lt;country value=\"US\"/&gt;\n      &lt;/valueAddress&gt;\n    &lt;/extension&gt;\n    &lt;extension url=\"http://synthetichealth.github.io/synthea/disability-adjusted-life-years\"&gt;\n      &lt;valueDecimal value=\"0.09827400029822156\"/&gt;\n    &lt;/extension&gt;\n    &lt;extension url=\"http://synthetichealth.github.io/synthea/quality-adjusted-life-years\"&gt;\n      &lt;valueDecimal value=\"62.90172599970178\"/&gt;\n    &lt;/extension&gt;\n    &lt;identifier&gt;\n      &lt;system value=\"https://github.com/synthetichealth/synthea\"/&gt;\n      &lt;value value=\"439b24b4-6f25-4093-b101-47a39bd061ca\"/&gt;\n    &lt;/identifier&gt;\n    &lt;identifier&gt;\n      &lt;type&gt;\n        &lt;coding&gt;\n          &lt;system value=\"http://terminology.hl7.org/CodeSystem/v2-0203\"/&gt;\n          &lt;code value=\"MR\"/&gt;\n          &lt;display value=\"Medical Record Number\"/&gt;\n        &lt;/coding&gt;\n        &lt;text value=\"Medical Record Number\"/&gt;\n      &lt;/type&gt;\n      &lt;system value=\"http://hospital.smarthealthit.org\"/&gt;\n      &lt;value value=\"439b24b4-6f25-4093-b101-47a39bd061ca\"/&gt;\n    &lt;/identifier&gt;\n    &lt;identifier&gt;\n      &lt;type&gt;\n        &lt;coding&gt;\n          &lt;system value=\"http://terminology.hl7.org/CodeSystem/v2-0203\"/&gt;\n          &lt;code value=\"SS\"/&gt;\n          &lt;display value=\"Social Security Number\"/&gt;\n        &lt;/coding&gt;\n        &lt;text value=\"Social Security Number\"/&gt;\n      &lt;/type&gt;\n      &lt;system value=\"http://hl7.org/fhir/sid/us-ssn\"/&gt;\n      &lt;value value=\"999-57-3355\"/&gt;\n    &lt;/identifier&gt;\n    &lt;identifier&gt;\n      &lt;type&gt;\n        &lt;coding&gt;\n          &lt;system value=\"http://terminology.hl7.org/CodeSystem/v2-0203\"/&gt;\n          &lt;code value=\"DL\"/&gt;\n          &lt;display value=\"Driver's License\"/&gt;\n        &lt;/coding&gt;\n        &lt;text value=\"Driver's License\"/&gt;\n      &lt;/type&gt;\n      &lt;system value=\"urn:oid:2.16.840.1.113883.4.3.25\"/&gt;\n      &lt;value value=\"S99925942\"/&gt;\n    &lt;/identifier&gt;\n    &lt;identifier&gt;\n      &lt;type&gt;\n        &lt;coding&gt;\n          &lt;system value=\"http://terminology.hl7.org/CodeSystem/v2-0203\"/&gt;\n          &lt;code value=\"PPN\"/&gt;\n          &lt;display value=\"Passport Number\"/&gt;\n        &lt;/coding&gt;\n        &lt;text value=\"Passport Number\"/&gt;\n      &lt;/type&gt;\n      &lt;system value=\"http://standardhealthrecord.org/fhir/StructureDefinition/passportNumber\"/&gt;\n      &lt;value value=\"X42032818X\"/&gt;\n    &lt;/identifier&gt;\n    &lt;name&gt;\n      &lt;use value=\"official\"/&gt;\n      &lt;family value=\"Moen819\"/&gt;\n      &lt;given value=\"Willian804\"/&gt;\n      &lt;prefix value=\"Mr.\"/&gt;\n    &lt;/name&gt;\n    &lt;telecom&gt;\n      &lt;system value=\"phone\"/&gt;\n      &lt;value value=\"555-135-7303\"/&gt;\n      &lt;use value=\"home\"/&gt;\n    &lt;/telecom&gt;\n    &lt;gender value=\"male\"/&gt;\n    &lt;birthDate value=\"1955-10-09\"/&gt;\n    &lt;address&gt;\n      &lt;extension url=\"http://hl7.org/fhir/StructureDefinition/geolocation\"&gt;\n        &lt;extension url=\"latitude\"&gt;\n          &lt;valueDecimal value=\"42.319304553912225\"/&gt;\n        &lt;/extension&gt;\n        &lt;extension url=\"longitude\"&gt;\n          &lt;valueDecimal value=\"-71.17365303910063\"/&gt;\n        &lt;/extension&gt;\n      &lt;/extension&gt;\n      &lt;line value=\"545 Tromp Port Unit 55\"/&gt;\n      &lt;city value=\"Needham\"/&gt;\n      &lt;state value=\"Massachusetts\"/&gt;\n      &lt;postalCode value=\"02492\"/&gt;\n      &lt;country value=\"US\"/&gt;\n    &lt;/address&gt;\n    &lt;maritalStatus&gt;\n      &lt;coding&gt;\n        &lt;system value=\"http://terminology.hl7.org/CodeSystem/v3-MaritalStatus\"/&gt;\n        &lt;code value=\"M\"/&gt;\n        &lt;display value=\"M\"/&gt;\n      &lt;/coding&gt;\n      &lt;text value=\"M\"/&gt;\n    &lt;/maritalStatus&gt;\n    &lt;multipleBirthBoolean value=\"false\"/&gt;\n    &lt;communication&gt;\n      &lt;language&gt;\n        &lt;coding&gt;\n          &lt;system value=\"urn:ietf:bcp:47\"/&gt;\n          &lt;code value=\"en-US\"/&gt;\n          &lt;display value=\"English\"/&gt;\n        &lt;/coding&gt;\n        &lt;text value=\"English\"/&gt;\n      &lt;/language&gt;\n    &lt;/communication&gt;\n  &lt;/Patient&gt;\n&lt;/resource&gt;\n\n\n\nIn some cases, you may need to construct more complex expressions like the one to extract marital_status from Patient.maritalStatus.coding[0].code. You can use a tool like this XPath tester to help generate XPath expressions, though online tools such as these should not be used with real patient data. For more information on XPath, see this guide."
  },
  {
    "objectID": "modules/tabular-r.html#elements-with-multiple-sub-values",
    "href": "modules/tabular-r.html#elements-with-multiple-sub-values",
    "title": "Analyzing FHIR Data in a Tabular Format With R",
    "section": "4 Elements with multiple sub-values",
    "text": "4 Elements with multiple sub-values\nThere are multiple identifier[N].value values for each instance of Patient in this dataset. By default, fhircrackr will concatenate these into a single cell per row, delimited with ::: (this is configurable; use fhir_table_description(..., sep = ' | ', ...) to delimit with | instead).\nFhircrackr provides some tools to split up multiple values stored in the same cell into separate rows in a “long” data frame:\n\ntable_desc_patient &lt;- fhir_table_description(\n    resource = \"Patient\",\n\n    # Prefix values in cells with indices to facilitate handling cells that contain\n    # multiple values\n    brackets = c(\"[\", \"]\")\n)\n\ndf_patient_indexed &lt;- fhir_crack(bundles = patient_bundle, design = table_desc_patient, verbose = 0)\n\ndf_patient_identifiers &lt;- fhir_melt(\n    indexed_data_frame = df_patient_indexed,\n    columns            = c(\"identifier.type.text\", \"identifier.value\"),\n   brackets           = c(\"[\", \"]\"),\n    sep                = \":::\",\n    all_columns        = FALSE\n)\n\ndf_patient_identifiers %&gt;% head(10)\n\n\n\n  \n\n\n\nThe df_patient_identifiers data frame printed above has one row for each value of Patient.identifier for each instance of Patient. The in-cell indices (surrounded by [ ]) can be removed:\n\ndf_patient_identifiers &lt;- fhir_rm_indices(indexed_data_frame = df_patient_identifiers, brackets = c(\"[\", \"]\"))\n\ndf_patient_identifiers %&gt;% head(10)\n\n\n\n  \n\n\n\nThese can then be merged back into the original data frame as needed. For example, if you want to include the synthetic “Social Security Number” in the original data:\n\ndf_patient %&gt;%\n  # Add in row numbers for joining\n  mutate(\n    row_number = row_number()\n  ) %&gt;%\n  left_join(\n    df_patient_identifiers %&gt;%\n      # Note: this assumes there is just one social security number for each patient in the data.\n      # If this was not true, it would be necessary to remove extra data before joining so there\n      # was one row per patient.\n      filter(`identifier.type.text` == \"Social Security Number\") %&gt;%\n\n      rename(\n        \"ssn\" = \"identifier.value\"\n      ) %&gt;%\n\n      # Exclude the `identifier.type.text` column so it doesn't appear in the joined data frame\n      select(resource_identifier, ssn) %&gt;%\n\n      # Fhircrackr generates the `resource_identifier` column as a string, but it needs to be\n      # an integer for joining.\n      mutate(resource_identifier = as.integer(resource_identifier))\n    ,\n    by=c(\"row_number\" = \"resource_identifier\")\n  ) %&gt;% head(5)\n\n\n\n  \n\n\n\nYou can see that the synthetic SSNs are now split out into a separate column."
  },
  {
    "objectID": "modules/tabular-r.html#retrieving-related-data",
    "href": "modules/tabular-r.html#retrieving-related-data",
    "title": "Analyzing FHIR Data in a Tabular Format With R",
    "section": "5 Retrieving related data",
    "text": "5 Retrieving related data\nTo retrieve instances of related resources, additional request_params can be added. See Using the FHIR API to Access Data for more information on constructing the parameters for FHIR search interactions.\nIn the example below, instances of Patient and instances of related Observation resources are requested:\n\nrequest &lt;- fhir_url(\n  url = \"https://api.logicahealth.org/FHIRResearchSynthea/open\",\n  resource = \"Patient\",\n  parameters = c(\n    \"_revinclude\" = \"Observation:patient\",\n    \"_count\" = \"10\" # Limit the number of patients returned to 10\n  )\n)\n\nresponse &lt;- fhir_search(request = request, max_bundles = 1, verbose = 0)\n\ntable_desc_patient &lt;- fhir_table_description(\n    resource = \"Patient\",\n    cols = c(\n        id = \"id\",\n        gender = \"gender\",\n        date_of_birth = \"birthDate\",\n        marital_status = \"maritalStatus/coding[1]/code\"\n    )\n)\n\ndf_patient &lt;- fhir_crack(bundles = patient_bundle, design = table_desc_patient, verbose = 0)\n\ntable_desc_observation &lt;- fhir_table_description(\n    resource = \"Observation\"\n)\n\ndf_observation &lt;- fhir_crack(bundles = response, design = table_desc_observation, verbose = 0)\n\ndf_observation %&gt;% glimpse\n\nRows: 1,464\nColumns: 32\n$ category.coding.code                &lt;chr&gt; \"vital-signs\", \"vital-signs\", \"vit…\n$ category.coding.display             &lt;chr&gt; \"vital-signs\", \"vital-signs\", \"vit…\n$ category.coding.system              &lt;chr&gt; \"http://terminology.hl7.org/CodeSy…\n$ code.coding.code                    &lt;chr&gt; \"29463-7\", \"39156-5\", \"59576-9\", \"…\n$ code.coding.display                 &lt;chr&gt; \"Body Weight\", \"Body Mass Index\", …\n$ code.coding.system                  &lt;chr&gt; \"http://loinc.org\", \"http://loinc.…\n$ code.text                           &lt;chr&gt; \"Body Weight\", \"Body Mass Index\", …\n$ component.code.coding.code          &lt;chr&gt; NA, NA, NA, \"8462-4:::8480-6\", NA,…\n$ component.code.coding.display       &lt;chr&gt; NA, NA, NA, \"Diastolic Blood Press…\n$ component.code.coding.system        &lt;chr&gt; NA, NA, NA, \"http://loinc.org:::ht…\n$ component.code.text                 &lt;chr&gt; NA, NA, NA, \"Diastolic Blood Press…\n$ component.valueQuantity.code        &lt;chr&gt; NA, NA, NA, \"mm[Hg]:::mm[Hg]\", NA,…\n$ component.valueQuantity.system      &lt;chr&gt; NA, NA, NA, \"http://unitsofmeasure…\n$ component.valueQuantity.unit        &lt;chr&gt; NA, NA, NA, \"mm[Hg]:::mm[Hg]\", NA,…\n$ component.valueQuantity.value       &lt;chr&gt; NA, NA, NA, \"87.86099222765435:::1…\n$ effectiveDateTime                   &lt;chr&gt; \"2012-01-01T22:52:53-05:00\", \"2012…\n$ encounter.reference                 &lt;chr&gt; \"Encounter/2045\", \"Encounter/2045\"…\n$ id                                  &lt;chr&gt; \"2048\", \"2049\", \"2050\", \"2051\", \"2…\n$ issued                              &lt;chr&gt; \"2012-01-01T22:52:53.991-05:00\", \"…\n$ meta.lastUpdated                    &lt;chr&gt; \"2023-04-06T20:58:59.000+00:00\", \"…\n$ meta.source                         &lt;chr&gt; \"#aCMN9zUZkrDZoyGR\", \"#aCMN9zUZkrD…\n$ meta.versionId                      &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",…\n$ status                              &lt;chr&gt; \"final\", \"final\", \"final\", \"final\"…\n$ subject.reference                   &lt;chr&gt; \"Patient/1989\", \"Patient/1989\", \"P…\n$ valueCodeableConcept.coding.code    &lt;chr&gt; NA, NA, NA, NA, \"266919005\", NA, N…\n$ valueCodeableConcept.coding.display &lt;chr&gt; NA, NA, NA, NA, \"Never smoker\", NA…\n$ valueCodeableConcept.coding.system  &lt;chr&gt; NA, NA, NA, NA, \"http://snomed.inf…\n$ valueCodeableConcept.text           &lt;chr&gt; NA, NA, NA, NA, \"Never smoker\", NA…\n$ valueQuantity.code                  &lt;chr&gt; \"kg\", \"kg/m2\", \"%\", NA, NA, \"cm\", …\n$ valueQuantity.system                &lt;chr&gt; \"http://unitsofmeasure.org\", \"http…\n$ valueQuantity.unit                  &lt;chr&gt; \"kg\", \"kg/m2\", \"%\", NA, NA, \"cm\", …\n$ valueQuantity.value                 &lt;chr&gt; \"42.97979680881811\", \"18.823562729…\n\n\nThis includes many different kinds of observations. The Observation.code element identifies the type of Observation. In this case,http://loinc.org|72166-2 is the LOINC for smoking status. To get smoking status records identified by this LOINC:\n\nrequest &lt;- fhir_url(\n    url = \"https://api.logicahealth.org/FHIRResearchSynthea/open\",\n    resource = \"Observation\",\n    parameters = c(\n        \"_include\" = \"Observation:patient\",\n        \"code\" = \"http://loinc.org|72166-2\"\n    )\n)\n\n# `max_bundles = 1` limits the responses to a subset of Observations for the purposes of\n# this example -- this argument can be removed to get all relevant Observations/Patients (but\n# the query takes longer to run)\nresponse &lt;- fhir_search(request = request, max_bundles = 1, verbose = 0)\n\ntable_desc_patient &lt;- fhir_table_description(\n    resource = \"Patient\",\n    cols = c(\n        id = \"id\",\n        gender = \"gender\",\n        date_of_birth = \"birthDate\",\n        marital_status = \"maritalStatus/coding[1]/code\"\n    )\n)\n\ndf_patient &lt;- fhir_crack(bundles = patient_bundle, design = table_desc_patient, verbose = 0)\n\ntable_desc_observation &lt;- fhir_table_description(\n    resource = \"Observation\"\n)\n\ndf_observation &lt;- fhir_crack(bundles = response, design = table_desc_observation, verbose = 0)\n\ndf_observation %&gt;% glimpse()\n\nRows: 50\nColumns: 20\n$ category.coding.code                &lt;chr&gt; \"survey\", \"survey\", \"survey\", \"sur…\n$ category.coding.display             &lt;chr&gt; \"survey\", \"survey\", \"survey\", \"sur…\n$ category.coding.system              &lt;chr&gt; \"http://terminology.hl7.org/CodeSy…\n$ code.coding.code                    &lt;chr&gt; \"72166-2\", \"72166-2\", \"72166-2\", \"…\n$ code.coding.display                 &lt;chr&gt; \"Tobacco smoking status NHIS\", \"To…\n$ code.coding.system                  &lt;chr&gt; \"http://loinc.org\", \"http://loinc.…\n$ code.text                           &lt;chr&gt; \"Tobacco smoking status NHIS\", \"To…\n$ effectiveDateTime                   &lt;chr&gt; \"2015-12-06T14:48:37-05:00\", \"2011…\n$ encounter.reference                 &lt;chr&gt; \"Encounter/116\", \"Encounter/51\", \"…\n$ id                                  &lt;chr&gt; \"122\", \"61\", \"110\", \"84\", \"95\", \"1…\n$ issued                              &lt;chr&gt; \"2015-12-06T14:48:37.413-05:00\", \"…\n$ meta.lastUpdated                    &lt;chr&gt; \"2023-04-06T20:52:11.000+00:00\", \"…\n$ meta.source                         &lt;chr&gt; \"#wQwWCylvgEiNKNbB\", \"#wQwWCylvgEi…\n$ meta.versionId                      &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",…\n$ status                              &lt;chr&gt; \"final\", \"final\", \"final\", \"final\"…\n$ subject.reference                   &lt;chr&gt; \"Patient/1\", \"Patient/1\", \"Patient…\n$ valueCodeableConcept.coding.code    &lt;chr&gt; \"266919005\", \"266919005\", \"2669190…\n$ valueCodeableConcept.coding.display &lt;chr&gt; \"Never smoker\", \"Never smoker\", \"N…\n$ valueCodeableConcept.coding.system  &lt;chr&gt; \"http://snomed.info/sct\", \"http://…\n$ valueCodeableConcept.text           &lt;chr&gt; \"Never smoker\", \"Never smoker\", \"N…\n\n\nThe df_observation data frame contains just smoking status Observations. The df_patient data frame contains the Patients referenced by the Observations in df_observation.\nMore information about the search interaction used above to filter Observations is here."
  },
  {
    "objectID": "modules/tabular-r.html#additional-resources",
    "href": "modules/tabular-r.html#additional-resources",
    "title": "Analyzing FHIR Data in a Tabular Format With R",
    "section": "6 Additional resources",
    "text": "6 Additional resources\nNIH’s Office of Data Science Strategy has online exercises for converting FHIR-formatted data into tabular format for further analysis. These exercises include implementations in both Python and R. The R exercises go into greater depth on using fhircrackr to access FHIR data in R, including integrating FHIR data with data from other web APIs."
  },
  {
    "objectID": "modules/terminology.html",
    "href": "modules/terminology.html",
    "title": "Terminology and FHIR",
    "section": "",
    "text": "Learning objectives\n\n\n\nAfter reading this module, you will be able to answer the following questions:\n\n\n    What key role does standard terminology play in enabling health data interoperability?\n    Standard terminology allows data to move across systems while maintaining shared meaning.\n\n\n    What are some use cases for terminology in research?\n    Use cases include helping researchers automatically build cohorts and aggregating data across different systems or institutions.\n\n\n    What are the key FHIR resources related to terminology?\n    CodeSystems define a specific terminology and its concepts; ValueSets identify a subset of relevant concepts from one or more code systems; ConceptMaps map one set of concepts onto another.\nTerminology is critical for interoperability between clinical systems, representing “concepts in an unambiguous manner between a sender and receiver of information” (2017).\nTerminology in health informatics consists of mappings between concepts and codes that are defined within a code system.\nThe same concept may appear in multiple code systems. Implementers create mappings to relate concepts that exist in different code systems.1"
  },
  {
    "objectID": "modules/terminology.html#terminologys-importance-for-research",
    "href": "modules/terminology.html#terminologys-importance-for-research",
    "title": "Terminology and FHIR",
    "section": "1 Terminology’s importance for research",
    "text": "1 Terminology’s importance for research\nUsing standard terminologies allows researchers to access, exchange, organize, and utilize health data in a consistent and reliable way.\nFor example, using a standard terminology for conditions in a problem list lets systems build cohorts based on the presence or absence of a specific set of conditions.\nStandard terminology also lets applications combine data from multiple systems and institutions, though implementers must still ensure concept meanings are used consistently.2\nFHIR supports defining code systems, mapping between them, and “binding” a FHIR data element to a specific subset of concepts from selected code systems."
  },
  {
    "objectID": "modules/terminology.html#common-health-related-code-systems",
    "href": "modules/terminology.html#common-health-related-code-systems",
    "title": "Terminology and FHIR",
    "section": "2 Common health-related code systems",
    "text": "2 Common health-related code systems\nHealth data often contains codes from the following code systems:\n\nLOINC: Logical Observation Identifiers Names and Codes\nSNOMED CT: Systematized Nomenclature of Medicine–Clinical Terms\nICD: International Statistical Classification of Diseases and Related Health Problems\nRxNorm: Medical prescription Normalized\nCVX: Vaccine administered\n\nBelow are details about each of these code systems. Additionally, HIMSS provides a longer list of common code systems.\n\n2.1 LOINC\nLOINC identifies health measurements, observations, and documents. It often represents the “question” of an observation, with other standards representing the “answer” (such as SNOMED CT). The Regenstrief Institute, which maintains LOINC, calls it “the global lingua franca for identifying tests and observations.” (Regenstrief, n.d.a)\n\nStructure\nA LOINC code distinguishes a given observation (test ordered, survey question, or clinical document) across six dimensions known as Parts (Regenstrief, n.d.b). The table below defines each Part and provides an example using the LOINC concept a manual count of white blood cells in cerebral spinal fluid specimen with code 806-0.\n\n\n\n\n\n\n\n\nLOINC Part\nDefinition\nExample\n\n\n\n\nComponent (Analyte)\nThe substance or entity being measured\nLeukocytes (white blood cells)\n\n\nProperty\nThe characteristic or attribute of the analyte\nNCnc (Number concentration)\n\n\nTime\nThe interval of time over which an observation was made\nPt (Point in time)\n\n\nSystem (Specimen)\nThe specimen or thing upon which the observation was made\nCSF (Cerebral spinal fluid)\n\n\nScale\nHow the observation value is quantified or expressed: quantitative, ordinal, nominal\nQn (Quantitative)\n\n\nMethod\n(Optional) A high-level classification of how the observation was made. Only needed when the technique affects the clinical interpretation of the results.\nManual Count\n\n\n\nLOINC creates three different human-readable descriptions for each of its concepts (Regenstrief, n.d.b):\n\n\n\nText Label (Name)\nExample for LOINC 806-0 (test above)\n\n\n\n\nFully-Specified Name (FSN)\nLeukocytes: NCnc: Pt: CSF: Qn: Manual count\n\n\nLong Common Name\nLeukocytes [#/volume] in Cerebral spinal fluid by Manual count\n\n\nShort Name\nWBC # CSF Manual\n\n\n\n\n\n\n2.2 SNOMED CT\nSNOMED CT is a clinical terminology standard developed by SNOMED International. SNOMED CT is often the “answer” for a test or measurement (where LOINC would be the “question”). SNOMED International further details the utility of SNOMED CT as follows:\n\nSNOMED CT:\n\nIs the most comprehensive, multilingual clinical healthcare terminology in the world\nIs a resource with comprehensive, scientifically validated clinical content\nEnables consistent representation of clinical content in electronic health records\nIs mapped to other international standards\nIs in use in more than eighty countries\n\n\n\nStructure\nSNOMED CT is comprised of (International, n.d.):\n\nConcepts: Unique clinical meaning with a computer readable code. Can have multiple descriptions.\nDescriptions: Human readable explanation of a concept (what a doctor would read).\nRelationships: Correlation between related concepts, i.e., “synonyms.” Provides computer readable definitions of concepts and supports data searches.\nThere are two main types of relationships in SNOMED CT:\n\nHierarchical relationships establish each SNOMED CT concept as a child of a more general concept. Each concept in SNOMED CT has at least one hierarchical relationship. For example, 840533007 (SARS-CoV-2) has an is a relationship with its parent, 415360003 (SARS coronavirus), which in turn is a 868196001 (Subgenus Sarbecovirus).\nAttribute relationships define non-hierarchical relationships between two concepts. Concepts can have as many attribute relationships as needed. For example, 399150003 (PCR test for SARS) has a Component relationship with 415360003 (SARS coronavirus).3\n\n\nBelow is an example of how SNOMED might represent a condition (acute post-streptococcal glomerulenephritis) and its associated relationships:4\n\n\n\n\nflowchart BT\n    A{{SNOMED - CT Concept}}\n    B[Clinical Finding\\n404684003]\n    C[Body Structure\\n123037004]\n    D[Both Kidneys\\n17373004]\n    E[Acute post-streptococcal glomerulonephritis\\n68544003]\n    F[Organism\\n410607006]\n    G[Beta-hemolytic Streptococcus, group A\\n413643004]\n\n    B --&gt; |is a|A\n    F --&gt; |is a|A\n    F --&gt; |is a|B\n    G --&gt; |is a|F\n    G --&gt; |Causative agent|E\n    E --&gt; |Finding site|D\n    D --&gt; |is a|C\n    C --&gt; |is a|B\n    C --&gt; |is a|A\n\n\n\n\n\n\n\n\n2.3 ICD-10\nICD is a medical classification list that contains codes for diseases, signs and symptoms, abnormal findings, complaints, social circumstances, and external causes of injury or diseases. The WHO, which publishes ICD, writes:\n\nClinical terms coded with ICD are the main basis for health recording and statistics on disease in primary, secondary and tertiary care, as well as on cause of death certificates. These data and statistics support payment systems, service planning, administration of quality and safety, and health services research. Diagnostic guidance linked to categories of ICD also standardizes data collection and enables large scale research.\n\nICD-10 is widely used and replaced ICD-9 in the US in the 2010s. ICD-11 is the latest version of ICD, with active use beginning in January 2022.\n\nStructure\nAn ICD-10 code can range between 3 and 7 alphanumeric characters and has three major parts (MedicalBillingandCoding 2023):\n\nCategory: A letter followed by two numbers, which describes the general type of injury or disease.\nSubclassification (optional): Up to three digits, further specifying an injury or disease. The subclassification follows the category after a decimal point. Each digit of the subclassification adds more specificity, explaining the cause, manifestation, location, severity, and type of injury or disease.\nExtension (optional): One of three letters describing the type of encounter for a given injury or disease: A (initial encounter), D (subsequent encounter), or S (sequila). The extension follows the subclassification.\n\nBelow is an example of different levels of specificity for an ICD-10 code (MedicalBillingandCoding 2023). The injury is a closed fracture of distal phalanx of right index finger.\n\nS62 – fracture at wrist and hand level\n\nS62.0 – fracture at navicular [scaphoid] bone of wrist\n…\nS62.5 – fracture of thumb\nS62.6 – fracture of other and unspecified finger(s)\n\nS62.60 – fracture of unspecified phalanx of finger\nS62.61 – displaced fracture of proximal phalanx of finger\n…\nS62.63 – displaced fracture of distal phalanx of finger\n\nS62.630 – displaced fracture of distal phalanx of right index finger\n\nS62.630A – … initial encounter for closed fracture\nS62.630B – … initial encounter for open fracture\nS62.630D – … initial encounter for fracture with routine healing\n\n\n\n\n\n\n\n\n2.4 RxNorm\nThe NIH National Library of Medicine (NLM) produces RxNorm and summarizes its purpose as follows:\n\nRxNorm provides normalized names for clinical drugs and links its names to many of the drug vocabularies commonly used in pharmacy management and drug interaction software… By providing links between these vocabularies, RxNorm can mediate messages between systems not using the same software and vocabulary.\n\nIts scope includes the names of prescription and many over-the-counter drugs approved for use in the US, including generic and branded medications. RxNorm does not cover bulk powders, food, dietary supplements, and medical devices.\n\nStructure\nNLM completes the following three steps when classifying a drug (NIH, n.d.):\n\nGroup source data: When NLM receives drug names with different formats that refer to the same medication, it groups them all together and refers to them as synonyms. A group of synonyms is called a concept. Below are examples of synonyms that refer to the same concept:\n\nNaproxen Tab 250 MG\nNaproxen 250mg tablet (product)\nNAPROXEN@250 mg@ORAL@TABLET\nNaproxen 250 MILLIGRAM In 1 TABLET ORAL TABLET\nNAPROXEN 250MG TAB,UD [VA Product]\n\nCreate a normalized name for a concept: After grouping synonyms into a concept, RxNorm creates a normalized name with the ingredient, strength, and dose form. The name also includes if the drug is branded or in a pack. For the concept above, the RxNorm normalized name is “Naproxen 250 MG Oral Tablet.” The branded version is “Naproxen 250 MG Oral Tablet [Prosaid].”\nThe general format for an RxNorm normalized name depends on two factors: (1) generic vs. branded, and (2) single vs. pack. Below summarizes the general formats for each scenario:\n\nGeneric drugs: Ingredient Strength Dose Form\nBranded drugs: Ingredient Strength Dose Form [Brand Name]\nGeneric drug packs: {# (Ingredient Strength Dose Form) / # (Ingredient Strength Dose Form)} Pack\nBranded drug packs: {# (Ingredient Strength Dose Form) / # (Ingredient Strength Dose Form)} Pack [Brand Name]\n\nAssign a concept unique identifier (RXCUI): The RXCUI is a numeric identifier that is a code assigned to a given concept. For example, the RXCUI for the above concept example is 198013.\n\nRxNorm normalized names have different levels of specificity, defined by the term type (TTY). For example, depending on the TTY, an RxNorm normalized name might only include the ingredient, might only include the dose form, or one of many combinations of descriptors.\n\n\n\n\n\n\nExpand to view the different TTYs\n\n\n\n\n\n\n\n\nTTY\nName\nDescription\nExample\n\n\n\n\nIN\nIngredient\nA compound or moiety that gives the drug its distinctive clinical properties. Ingredients generally use the United States Adopted Name (USAN).\nFluoxetine\n\n\nPIN\nPrecise Ingredient\nA specified form of the ingredient that may or may not be clinically active. Most precise ingredients are salt or isomer forms.\nFluoxetine Hydrochloride\n\n\nMIN\nMultiple Ingredients\nTwo or more ingredients appearing together in a single drug preparation, created from SCDF. In rare cases when IN/PIN or PIN/PIN combinations of the same base ingredient exist, created from SCD.\nFluoxetine / Olanzapine\n\n\nDF\nDose Form\nSee Appendix 2 for a full list of Dose Forms.\nOral Solution\n\n\nDFG\nDose Form Group\nSee Appendix 3 for a full list of Dose Form Groups.\nOral Liquid\n\n\nSCDC\nSemantic Clinical Drug Component\nIngredient + Strength\nFluoxetine 4 MG/ML\n\n\nSCDF\nSemantic Clinical Drug Form\nIngredient + Dose Form\nFluoxetine Oral Solution\n\n\nSCDG\nSemantic Clinical Dose Form Group\nIngredient + Dose Form Group\nFluoxetine Oral Product\n\n\nSCD\nSemantic Clinical Drug\nIngredient + Strength + Dose Form\nFluoxetine 4 MG/ML Oral Solution\n\n\nBN\nBrand Name\nA proprietary name for a family of products containing a specific active ingredient.\nProzac\n\n\nSBDC\nSemantic Branded Drug Component\nIngredient + Strength + Brand Name\nFluoxetine 4 MG/ML [Prozac]\n\n\nSBDF\nSemantic Branded Drug Form\nIngredient + Dose Form + Brand Name\nFluoxetine Oral Solution [Prozac]\n\n\nSBDG\nSemantic Branded Dose Form Group\nBrand Name + Dose Form Group\nProzac Pill\n\n\nSBD\nSemantic Branded Drug\nIngredient + Strength + Dose Form + Brand Name\nFluoxetine 4 MG/ML Oral Solution [Prozac]\n\n\nPSN\nPrescribable Name\nSynonym of another TTY, given for clarity and for display purposes in electronic prescribing applications. Only one PSN per concept.\nLeena 28 Day Pack\n\n\nSY\nSynonym\nSynonym of another TTY, given for clarity.\nProzac 4 MG/ML Oral Solution\n\n\nTMSY\nTall Man Lettering Synonym\nTall Man Lettering synonym of another TTY, given to distinguish between commonly confused drugs.\nFLUoxetine 10 MG Oral Capsule [PROzac]\n\n\nBPCK\nBrand Name Pack\n{# (Ingredient Strength Dose Form) / # (Ingredient Strength Dose Form)} Pack [Brand Name]\n{12 (Ethinyl Estradiol 0.035 MG / Norethindrone 0.5 MG Oral Tablet) / 9 (Ethinyl Estradiol 0.035 MG / Norethindrone 1 MG Oral Tablet) / 7 (Inert Ingredients 1 MG Oral Tablet) } Pack [Leena 28 Day]\n\n\nGPCK\nGeneric Pack\n{# (Ingredient + Strength + Dose Form) / # (Ingredient + Strength + Dose Form)} Pack\n{11 (varenicline 0.5 MG Oral Tablet) / 42 (varenicline 1 MG Oral Tablet) } Pack\n\n\n\n\n\n\n\n\n\n2.5 CVX\nCVX is a standard terminology for vaccines in the US. It is developed and maintained by the CDC’s National Center of Immunization and Respiratory Diseases (NCIRD).(CDC 2018)\nConcepts in CVX are assigned a short numeric code (e.g., 207 for Moderna’s initial COVID-19 vaccine). Each vaccine also has a short description, a full name, and a status (e.g., Active or Inactive).\nCVX codes are also mapped into groups by disease targeted, and to vaccine manufacturers."
  },
  {
    "objectID": "modules/terminology.html#terminology-in-fhir",
    "href": "modules/terminology.html#terminology-in-fhir",
    "title": "Terminology and FHIR",
    "section": "3 Terminology in FHIR",
    "text": "3 Terminology in FHIR\nThere are three key FHIR resources for terminology:\n\nCodeSystem resource: Describes a code system, its concepts, and the codes identifying the concepts. E.g., the LOINC code system.\nValueSet resource: Specifies a specific set of codes from code system(s). E.g., LOINC concepts identifying types of cancer staging systems.\nConceptMap resource: Identifies relationships between sets of concepts. E.g., Mapping from SNOMED CT to ICD-10\n\nWe review these resources in detail below.\n\n3.1 CodeSystem resource details\nThe CodeSystem FHIR resource defines an organized, managed collection of concepts that belong to a given terminology system. The CodeSystem resource represents properties of standard terminologies (like LOINC and ICD-10) in a computable format. These properties include:\n\nThe canonical identifier for the code system (typically a URL like http://loinc.org for LOINC, or an OID like 2.16.840.1.113883.6.1 (which also represents LOINC)\nVersion\nThe concepts defined by the code system\nPublication metadata like a human-readable description, copyright information, and publication date\nProperties of the code system, such as concept permanence, case-sensitivity, and if it defines a compositional grammar.\n\nHere’s an example of a CodeSystem FHIR resource:\n{\n  \"resourceType\" : \"CodeSystem\",\n  \"id\" : \"example\",\n  \"meta\" : {\n    \"profile\" : [\"http://hl7.org/fhir/StructureDefinition/shareablecodesystem\"]\n  },\n  \"text\" : {\n    \"status\" : \"additional\",\n    \"div\" : \"...\"\n  },\n  \"url\" : \"http://hl7.org/fhir/CodeSystem/example\",\n  \"identifier\" : [{\n    \"system\" : \"urn:ietf:rfc:3986\",\n    \"value\" : \"urn:oid:2.16.840.1.113883.4.642.4.1827\"\n  },\n  {\n    \"system\" : \"http://acme.com/identifiers/codesystems\",\n    \"value\" : \"internal-cholesterol-inl\"\n  }],\n  \"version\" : \"5.0.0-cibuild\",\n  \"name\" : \"ACMECholCodesBlood\",\n  \"title\" : \"ACME Codes for Cholesterol in Serum/Plasma\",\n  \"status\" : \"draft\",\n  \"experimental\" : true,\n  \"date\" : \"2016-01-28\",\n  \"publisher\" : \"Acme Co\",\n  \"contact\" : [{\n    \"name\" : \"FHIR project team\",\n    \"telecom\" : [{\n      \"system\" : \"url\",\n      \"value\" : \"http://hl7.org/fhir\"\n    }]\n  }],\n  \"description\" : \"This is an example code system that includes all the ACME codes for serum/plasma cholesterol from v2.36.\",\n  \"caseSensitive\" : true,\n  \"content\" : \"complete\",\n  \"filter\" : [{\n    \"code\" : \"acme-plasma\",\n    \"description\" : \"An internal filter used to select codes that are only used with plasma\",\n    \"operator\" : [\"=\"],\n    \"value\" : \"the value of this filter is either 'true' or 'false'\"\n  }],\n  \"concept\" : [{\n    \"code\" : \"chol-mmol\",\n    \"display\" : \"SChol (mmol/L)\",\n    \"definition\" : \"Serum Cholesterol, in mmol/L\",\n    \"designation\" : [{\n      \"use\" : {\n        \"system\" : \"http://acme.com/config/fhir/codesystems/internal\",\n        \"code\" : \"internal-label\"\n      },\n      \"value\" : \"From ACME POC Testing\"\n    }]\n  },\n  {\n    \"code\" : \"chol-mass\",\n    \"display\" : \"SChol (mg/L)\",\n    \"definition\" : \"Serum Cholesterol, in mg/L\",\n    \"designation\" : [{\n      \"use\" : {\n        \"system\" : \"http://acme.com/config/fhir/codesystems/internal\",\n        \"code\" : \"internal-label\"\n      },\n      \"value\" : \"From Paragon Labs\"\n    }]\n  },\n  {\n    \"code\" : \"chol\",\n    \"display\" : \"SChol\",\n    \"definition\" : \"Serum Cholesterol\",\n    \"designation\" : [{\n      \"use\" : {\n        \"system\" : \"http://acme.com/config/fhir/codesystems/internal\",\n        \"code\" : \"internal-label\"\n      },\n      \"value\" : \"Obdurate Labs uses this with both kinds of units...\"\n    }]\n  }]\n}\n\nResearch applications\nPotential research applications include:\n\nIdentifying which code system a given code comes from.\nLooking up the concept definition or other metadata associated with a given code.\nUsing concept relationship metadata to reason about or filter data.\n\n\n\n\n3.2 ValueSet resource details\nThe ValueSet FHIR resource “specifies a set of codes drawn from one or more code systems, intended for use in a particular context.” ValueSets don’t refer directly to CodeSystems; rather, they identify the relevant CodeSystem by its URI.\nHere’s an example of a ValueSet FHIR resource:\n{\n  \"resourceType\" : \"ValueSet\",\n  \"id\" : \"example-cpt-all\",\n  \"text\" : {\n    \"status\" : \"generated\",\n    \"div\" : \"...\"\n  },\n  \"url\" : \"http://hl7.org/fhir/ValueSet/example-cpt-all\",\n  \"identifier\" : [{\n    \"system\" : \"urn:ietf:rfc:3986\",\n    \"value\" : \"urn:oid:2.16.840.1.113883.4.642.3.3138\"\n  }],\n  \"version\" : \"5.0.0-cibuild\",\n  \"name\" : \"AllCPTCodes\",\n  \"title\" : \"All CPT codes\",\n  \"status\" : \"active\",\n  \"experimental\" : true,\n  \"date\" : \"2015-03-12\",\n  \"publisher\" : \"Health Level Seven International (Vocabulary)\",\n  \"description\" : \"A value set that includes all CPT codes\",\n  \"useContext\" : [{\n    \"code\" : {\n      \"system\" : \"http://example.org/fhir/CodeSystem/use-contexts\",\n      \"code\" : \"species\"\n    },\n    \"valueCodeableConcept\" : {\n      \"coding\" : [{\n        \"system\" : \"http://snomed.info/sct\",\n        \"code\" : \"337915000\",\n        \"display\" : \"Homo sapiens (organism)\"\n      }]\n    }\n  }],\n  \"jurisdiction\" : [{\n    \"coding\" : [{\n      \"system\" : \"urn:iso:std:iso:3166\",\n      \"code\" : \"US\"\n    }]\n  }],\n  \"copyright\" : \"CPT Copyright © 2014 American Medical Association. All rights reserved.\",\n  \"compose\" : {\n    \"include\" : [{\n      \"system\" : \"http://www.ama-assn.org/go/cpt\"\n    }]\n  }\n}\n\nResearch applications\nPotential research applications include:\n\nCurating a list of concepts for use in a particular context.\nIdentifying a specific set of concepts from specific code systems allowed in a data element.\nValidating that FHIR-formatted data have only the expected codes.\n\n\n\n\n3.3 ConceptMap\nThe ConceptMap FHIR resource maps a set of concepts to other concepts. The example below maps SNOMED CT to ICD-10 using an instance of the ConceptMap resource:\n{\n  \"resourceType\" : \"ConceptMap\",\n  \"id\" : \"103\",\n  \"text\" : {\n    \"status\" : \"extensions\",\n    \"div\" : \"...\"\n  },\n  \"url\" : \"http://hl7.org/fhir/ConceptMap/103\",\n  \"identifier\" : [{\n    \"system\" : \"urn:ietf:rfc:3986\",\n    \"value\" : \"urn:oid:2.16.840.1.113883.4.642.14.7\"\n  },\n  {\n    \"system\" : \"urn:ietf:rfc:3986\",\n    \"value\" : \"urn:uuid:53cd62ee-033e-414c-9f58-3ca97b5ffc3b\"\n  }],\n  \"version\" : \"5.0.0-cibuild\",\n  \"name\" : \"SNOMEDCTToICD10CMMappingsForFractureOfUlna\",\n  \"title\" : \"SNOMED CT to ICD-10-CM mappings for fracture of ulna\",\n  \"status\" : \"draft\",\n  \"experimental\" : true,\n  \"date\" : \"2012-06-13\",\n  \"publisher\" : \"HL7, Inc\",\n  \"contact\" : [{\n    \"name\" : \"FHIR project team (example)\",\n    \"telecom\" : [{\n      \"system\" : \"url\",\n      \"value\" : \"http://hl7.org/fhir\"\n    }]\n  }],\n  \"description\" : \"Example rule-based mappings between SNOMED CT to ICD-10-CM for fracture of ulna\",\n  \"jurisdiction\" : [{\n    \"coding\" : [{\n      \"system\" : \"http://unstats.un.org/unsd/methods/m49/m49.htm\",\n      \"code\" : \"840\",\n      \"display\" : \"United States of America\"\n    }]\n  }],\n  \"purpose\" : \"Show example rule based mappings\",\n  \"copyright\" : \"Creative Commons 0\",\n  \"sourceScopeCanonical\" : \"http://snomed.info/sct?fhir_vs\",\n  \"group\" : [{\n    \"source\" : \"http://snomed.info/sct\",\n    \"target\" : \"http://hl7.org/fhir/sid/icd-10-cm\",\n    \"element\" : [{\n      \"code\" : \"263204007\",\n      \"target\" : [{\n        \"code\" : \"S52.209A\",\n        \"relationship\" : \"source-is-broader-than-target\",\n        \"comment\" : \"The target mapping to ICD-10-CM is 'source-is-broader-than-target', since additional patient data on the encounter (initial vs. subsequent) and fracture type is required for a valid ICD-10-CM mapping.\"\n      }]\n    },\n    {\n      \"code\" : \"263204007\",\n      \"target\" : [{\n        \"code\" : \"S52.209D\",\n        \"relationship\" : \"source-is-broader-than-target\",\n        \"comment\" : \"The target mapping to ICD-10-CM is 'source-is-broader-than-target', since additional patient data on the encounter (initial vs. subsequent), fracture type and healing (for subsequent encounter) is required for a valid ICD-10-CM mapping.\"\n      }]\n    }]\n  }]\n}\n\nResearch applications\nPotential research applications include:\n\nCreating mappings between two different code systems (e.g., mapping ICD-9 codes in historical records to ICD-10).\nMapping a custom code system (e.g., custom diagnosis codes for a hospital) to a standardized code system for multi-hospital data aggregation."
  },
  {
    "objectID": "modules/terminology.html#footnotes",
    "href": "modules/terminology.html#footnotes",
    "title": "Terminology and FHIR",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe ConceptMap FHIR resource supports mapping concepts across code systems. See below for details.↩︎\nSemantic interoperability is the term used by informaticists to describe systems that can exchange data with “unambiguous, shared meaning.”↩︎\nSNOMED CT relationship types are defined by SNOMED concepts. In this case, “Component” is represented by the SNOMED CT code 246093002 .↩︎\nAdapted from SNOMED CT - Georgia Tech - Health Informatics in the Cloud (YouTube).↩︎"
  },
  {
    "objectID": "roles.html",
    "href": "roles.html",
    "title": "Roles",
    "section": "",
    "text": "Investigator A clinician/scientist who is in a research PI, co-I, or staff scientist position. Their role requires enough technical informatics understanding to design and conduct research, and interface closely with technical staff responsible for implementation of informatics approaches including FHIR.\nResearch Leaders Member of the leadership responsible for shaping research strategy and capacity across an institution’s research portfolio. This persona may include roles like CTR PIs, Institute directors, or health system executives like Chief Scientific Officers or Chief Research Informatics Officers.\nInformaticist A technical role primarily responsible for working hands-on with clinical data. This role involve elements of software engineering, but is not focused primarily on developing software. Deep familiarity with clinical data and databases can be assumed, but there may be heterogeneous experience with FHIR and related technology.\nSoftware Engineer A technical role involved in developing software for clinically-focused research. This role may have some hands-on experience with FHIR and related technology, but likely does not have comprehensive knowledge of the space. This role differs from the “Informaticist” in that it focuses on creating software, rather than on data modeling and manipulation.\nClinician Scientist/Trainee A role for practicing clinicians or clinician-trainees. This role is involved with research as a clinical subject matter expert or co-investigator, but is not be responsible for an entire study (or they would be in the “Investigator” role). Their role in research is focused on the clinical aspects related to their area of expertise, and could involve activities like chart review, creating a “phenotyping strategy” to identify a condition using EHR data, or designing a patient- or provider-facing intervention.\nTrainer This role is responsible for leading future CTR-led trainings. People in this role are likely hands-on technical, or technical leaders. There may be overlap with the “Informaticist” and “Software Engineer” roles."
  },
  {
    "objectID": "sections/advanced-topics.html",
    "href": "sections/advanced-topics.html",
    "title": "Advanced Topics",
    "section": "",
    "text": "Advanced Topics is focused on technical leaders who are conducting their own trainings, or researchers who are interested in a deeper dive."
  },
  {
    "objectID": "sections/advanced-topics.html#synthetic-data-fhir-testing-servers",
    "href": "sections/advanced-topics.html#synthetic-data-fhir-testing-servers",
    "title": "Advanced Topics",
    "section": "Synthetic Data & FHIR Testing Servers",
    "text": "Synthetic Data & FHIR Testing Servers\n\nSynthea Synthetic Data Overview\nRunning Synthea\nCustomizing Synthea\nStanding Up a FHIR Testing Server"
  },
  {
    "objectID": "sections/advanced-topics.html#other-topics",
    "href": "sections/advanced-topics.html#other-topics",
    "title": "Advanced Topics",
    "section": "Other Topics",
    "text": "Other Topics\n\nFHIR Versions\nMaking Contributions to This Website\nStyle Guide"
  },
  {
    "objectID": "sections/overview.html",
    "href": "sections/overview.html",
    "title": "Overview",
    "section": "",
    "text": "The Overview provides an introduction to FHIR for research, and details on two additional areas of general interest for researchers: SMART on FHIR and its research applications, and data modeling in FHIR.\nSelect your role to highlight the content that is most relevant to you:\nInvestigator Research Leader Informaticist Software Engineer Clinician Scientist/Trainee"
  },
  {
    "objectID": "sections/overview.html#fhir-for-research",
    "href": "sections/overview.html#fhir-for-research",
    "title": "Overview",
    "section": "FHIR for Research",
    "text": "FHIR for Research\n\nFHIR from 10,000 Feet\nFHIR from 1,000 Feet\nReal-World Research Using FHIR\nBrief History of FHIR\nTerminology Introduction\nCommon Data Models & FHIR\nThe FHIR Community & Documentation\nKey FHIR Resources\nUsing the FHIR API to Access Data"
  },
  {
    "objectID": "sections/overview.html#smart-on-fhir",
    "href": "sections/overview.html#smart-on-fhir",
    "title": "Overview",
    "section": "SMART on FHIR",
    "text": "SMART on FHIR\n\nRecommended: complete highlighted “FHIR for Research” modules for your role first\nHigh Level Overview\nTechnical Quick Start"
  },
  {
    "objectID": "sections/overview.html#data-modeling-in-fhir",
    "href": "sections/overview.html#data-modeling-in-fhir",
    "title": "Overview",
    "section": "Data Modeling in FHIR",
    "text": "Data Modeling in FHIR\n\nRecommended: complete highlighted “FHIR for Research” modules for your role first\nReading a FHIR specification\nReal world FHIR specifications\nWriting a FHIR specification"
  },
  {
    "objectID": "sections/working-with-data.html",
    "href": "sections/working-with-data.html",
    "title": "Working with FHIR Data",
    "section": "",
    "text": "Working with FHIR Data covers approaches to gathering and analyzing FHIR-formatted data for research purposes.\nSelect your role to highlight the content that is most relevant to you:\nInvestigator Research Leader Informaticist Software Engineer Clinician Scientist/Trainee"
  },
  {
    "objectID": "sections/working-with-data.html#tabular-analysis",
    "href": "sections/working-with-data.html#tabular-analysis",
    "title": "Working with FHIR Data",
    "section": "Tabular Analysis",
    "text": "Tabular Analysis\n\nRecommended: complete highlighted FHIR for Research modules for your role first\nIntroduction to Analyzing FHIR Data in a Tabular Format\nAnalyzing FHIR Data in a Tabular Format With R\nAnalyzing FHIR Data in a Tabular Format With Python"
  },
  {
    "objectID": "sections/working-with-data.html#redcap",
    "href": "sections/working-with-data.html#redcap",
    "title": "Working with FHIR Data",
    "section": "REDCap",
    "text": "REDCap\n\nRecommended: complete highlighted FHIR for Research modules for your role first\nIntroduction\nREDCap on FHIR"
  },
  {
    "objectID": "style-guide.html",
    "href": "style-guide.html",
    "title": "Style Guide",
    "section": "",
    "text": "We use the RStudio Visual R Markdown interchangeably with writing raw Markdown in another editor like VSCode. Visual R Markdown will automatically reformat .md or .qmd files when opening them, so we do not get hung up on specific Markdown styling as we accept the default output of Visual R Markdown.\nThe following are style rules that are not impacted by Visual R Markdown automatic reformatting.\nVisual R Markdown uses Pandoc’s flavor of Markdown so that’s what we use when manually writing Markdown. Quarto’s Markdown guide is also helpful.\nIf you write Markdown by hand, you should run it through the Pandoc Markdown formatter by toggling the RStudio Visual R Markdown mode on and off. This will avoid trivial changes showing up in git commits if subsequent authors edit your file with Visual R Markdown."
  },
  {
    "objectID": "style-guide.html#headings",
    "href": "style-guide.html#headings",
    "title": "Style Guide",
    "section": "Headings",
    "text": "Headings\n\nHeadings in .qmd files should start at &lt;h2&gt; (i.e., ## in Markdown). The title element of the front matter at the top of each .qmd file is automatically inserted as the &lt;h1&gt; for the page.\nThe contents of heading tags, excluding the page titles, should be Sentence case (the first letter is capitalized), not Title Case. Page titles should be Title Case.\nHeadings should not be numbered manually – this happens automatically."
  },
  {
    "objectID": "style-guide.html#frontmatter",
    "href": "style-guide.html#frontmatter",
    "title": "Style Guide",
    "section": "Frontmatter",
    "text": "Frontmatter\nEach module needs frontmatter like the following:\n---\ntitle: FHIR From 1,000 Feet\n\nroles:\n  - Informaticist\n  - Software Engineer\n\nlearning_objectives:\n  - question: \"How does hand-written Markdown interact with Markdown generated by RStudio's Visual R Markdown mode?\"\n    answer: \"We rely on Visual R Markdown to generate the finalized Markdown styling for pages on this website. If you are writing Markdown by hand, you should run it through Visual R Markdown before committing.\"\n  - question: \"What are the key stylistic concerns for writing FHIR for Research content?\"\n    answer: \"Key stylistic concerns include capitalization of titles and headings, proper citations and alt text on images, and consistent referencing of FHIR resources and the FHIR specification.\"\n  - question: \"What are the standardized ways to reference FHIR resources and the FHIR specification?\"\n    answer: \"Resources should appear like [`Patient`](https://www.hl7.org/fhir/patient.html). Links to the FHIR spec should point to a specific version when used as the source for a quote or other content that may change between versions. FHIR \"Resource Content\" tables and the analogous tables from profiles may appear as screenshots.\"\n---\n\nTitle\nUse this website to properly capitalize titles.\n\n\nArea and topic\nThe area and topic properties are used to create the “breadcrumb” above the title on module pages.\n\n\nTargeted roles\nRoles should be listed as a YAML array in the frontmatter. The following roles are valid, and should appear verbatim as below:\n- Investigator\n- Research Leaders\n- Informaticist\n- Software Engineer\n- Clinician Scientist/Trainee"
  },
  {
    "objectID": "style-guide.html#voice",
    "href": "style-guide.html#voice",
    "title": "Style Guide",
    "section": "Voice",
    "text": "Voice\nSee Microsoft’s and Google’s style guides for examples of using first person, second person, and imperative voice in writing.\n\nFirst person\nAvoid singular first person pronouns (“I”/“me”).\nUse plural first person sparingly (“we”/“us”) to refer to the authors.\nNever use the global “we”: “We need to solve world-hunger.”\n\n\nSecond person\nWrite as though you are speaking to the reader and use second person “you.” Avoid using phrases like, “the reader.”\n\n\nImperative\nWhen providing instructions, use imperative voice where possible.\nFrom Microsoft’s style guide:\n\nChange your password (Instead of We recommend that you change your password.)\nThat didn’t work. Try again. (Instead of We weren’t able to run the Solution Checker. Try running it again.)"
  },
  {
    "objectID": "style-guide.html#editing-for-clarity-and-brevity",
    "href": "style-guide.html#editing-for-clarity-and-brevity",
    "title": "Style Guide",
    "section": "Editing for clarity and brevity",
    "text": "Editing for clarity and brevity\n\nCheck each paragraph for the following:\n\nEach paragraph has a purpose.\n\nWhat is this paragraph telling you? If you can’t easily answer that question or the answer is the same as a nearby paragraph, remove or rewrite the paragraph.\n\nEach sentence supports this purpose.\n\nHow does this sentence tie into the purpose of the paragraph? If you can’t easily answer the question, then remove the sentence or move it to a new paragraph.\n\nEach sentence has a unique purpose.\n\nWhat is this sentence telling you? If it’s the same thing as a previous sentence, consider removing.\nExceptions are when the repetition:\n\nis intentional to solidify understanding\nprovides a new perspective\n\n\nEach sentence or phrase is meaningful.\n\nDoes the meaning of the paragraph change if you remove the sentence or phrase? If not, remove.\nExample “At its most basic definition, terminology in IT refers to a code mapping to a concept.”\n\nYou can remove “At its most basic definition” without losing meaning.\n\n\n\n\n\nCheck each sentence for the following:\n\nEach word has a unique purpose.\n\nIf you remove the word, does the meaning of the sentence change? If not, remove the word.\nExample “These meet virtually on a weekly basis for a conference call.”\n\nvirtually and conference call are redundant: only one is necessary.\n\n\n“Very” and “really” are absent.\n\nCtrl-f for “very” and “really”. Remove these words.\nIf necessary, replace the verb or adjective with a more description verb or adjective.\n\nExamples “It’s really good.”\n\n“It’s excellent.”\n\n\n\nAdverbs are rare. Use them only when you can’t replace them with a more descriptive verb.\n\nCtrl-f for “ly”. For each adverb you find:\n\nDoes the meaning of the sentence change if you remove the adverb? If not, remove.\nCan you replace the modified verb with a more descriptive verb and remove the adverb? Use a thesaurus for this. If so, replace the verb and remove the adverb.\nIf you can’t remove or replace the adverb, keep it.\n\nExample “developing multiple Resources specifically for that purpose.”\n\nspecifically is unnecessary.\n\nExample “There is only one hierarchical relationship attribute.”\n\nonly is redundant to one.\n\nExample “She ran quickly”\n\n“She sprinted”\n\nExample “Adverbs and adjectives appear infrequently.”\n\n“Adverbs and adjectives are rare.”\n\n\nNominalizations are rare. (Nominalizations are verbs that have become nouns. They often end in “ion” or “ing”)\n\nCtrl-f for “ion” or “ing”. Does this word have a verb as a root? If so, can you replace the verb/“ion”-word combination with the root verb?\nExample “The sentence provides an explanation.”\n\nexplanation is a nominalization of to explain. You can rewrite this sentence as “The sentence explains.”\n\nExample “Her understanding of the situation meant that they could proceed.”\n\nunderstanding is a nominalization of to understand. You can rewrite this sentence as “Because she understood the situation, they could proceed.”\n\n\nSentences are simple, as long as simplicity doesn’t reduce readability.\n\nLook for sentences with 2 or more commas (where the commas aren’t part of a list).\nDoes the sentence have multiple purposes? If so, try dividing it into two separate sentences.\n\nExample “After they went to the park, they drove to a restaurant, and at the restaurant, they had dinner.”\n\nThe sentence says what they did after the park, and what they did at the restaurant.\n“After they went to the park, they drove to a restaurant. At the restaurant, they had dinner.”\n\n\nCan you reorganize or rewrite the sentence to use fewer commas?\n\nExample “In many cases, the reverse mappings are valid, but this cannot be assumed to be the case.”\n\n“Reverse mappings are sometimes valid, but not always.”\nor just “Reverse mappings may not be valid.”\n\nExample “Using standard terminology should be a simple and logical step in health IT. However, with the complexities of many diagnoses systems, clinical narrative transferred via PDF format, various coding systems, and the cost of digitizing volumes of reference material/dictionaries, it isn’t as easy as you would think.”\n\n“Using standard terminology is more difficult than expected given:\n\nthe complexities of many diagnoses systems,\nclinical narrative transferred via PDF format,\nvarious coding systems, and\nthe cost of digitizing volumes of reference material/dictionaries”\n\n\n\nIs the concept split into two parts with something in the middle? If so, move whatever is in the middle at the beginning or end.\n\nExample “Her dog, who was so cute, chased the ball.”\n\n“who was so cute” divides “Her dog chased the ball” in half.\n“Her adorable dog chased the ball.” is better.\n\n\n\nYou avoid jargon\n\nExample “Note in the first row that Patient also has a type, which gives inheritence of additional attributes we’ll discuss below.”\n\ninheritance is a software development concept that likely won’t be easily understood by people who aren’t already familiar with HL7 data types or software development.\nInstead, define inheritance inline or use a different word.\n\n\nYou use plain language. You use simpler words where the simple word has the same meaning.\n\nExample Try words like “use” instead of “utilize,” “about” instead of “approximately” and “try” instead of “attempt.”\nExample\n\nOriginal: “It is suggested that the wire should be connected to the terminal by the engineer when the switch-box assembly is completed.”\nSimplified: “We suggest that you connect the wire to the terminal when you finish assembling the switch-box.”"
  },
  {
    "objectID": "style-guide.html#structure",
    "href": "style-guide.html#structure",
    "title": "Style Guide",
    "section": "Structure",
    "text": "Structure\n\nLearning objectives\nAt the top of each module, there should be a learning objectives call-out box that looks like the following:\n\n\n\n\n\n\nLearning objectives\n\n\n\nAfter completing this module, you will be able to answer the following questions:\n\nHow does hand-written Markdown interact with Markdown generated by RStudio’s Visual R Markdown mode?\nWhat are the key stylistic concerns for writing FHIR for Research content?\nWhat are the standardized ways to reference FHIR resources and the FHIR specification?\n\n\n\n\n\nKey points\nAt the bottom of the module,"
  },
  {
    "objectID": "style-guide.html#quotes",
    "href": "style-guide.html#quotes",
    "title": "Style Guide",
    "section": "Quotes",
    "text": "Quotes\nQuotes or excerpts longer than a sentence should be in &lt;blockquote&gt; tags (in Markdown, each line is prefixed with &gt;) like this:\n\nThis is a blockquote. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
  },
  {
    "objectID": "style-guide.html#code",
    "href": "style-guide.html#code",
    "title": "Style Guide",
    "section": "Code",
    "text": "Code\nUse fences like this:\n```json\n{\n    \"some json\": \"goes here\"\n}\n```\nThis will provide syntax highlighting for the indicated language, like this:\n{\n    \"some json\": \"goes here\"\n}"
  },
  {
    "objectID": "style-guide.html#links",
    "href": "style-guide.html#links",
    "title": "Style Guide",
    "section": "Links",
    "text": "Links\nFrom the Google documentation guide:\n\nMarkdown link syntax allows you to set a link title, just as HTML does. Use it wisely.\nTitling your links as “link” or “here” tells the reader precisely nothing when quickly scanning your doc and is a waste of space:\nSee the syntax guide for more info: [link](syntax_guide.md).\nOr, check out the style guide [here](style_guide.md).\nDO NOT DO THIS.\nInstead, write the sentence naturally, then go back and wrap the most appropriate phrase with the link:\nSee the [syntax guide](syntax_guide.md) for more info.\nOr, check out the [style guide](style_guide.md)."
  },
  {
    "objectID": "style-guide.html#citing",
    "href": "style-guide.html#citing",
    "title": "Style Guide",
    "section": "Citing",
    "text": "Citing\nWhen citing web-based content, simply add a hyperlink as described above.\nWhen citing printed content or any content where an academic reader would expect a formal citation, use Quarto’s built-in citation capabilities. References should be added to references.bib in the root of the repository."
  },
  {
    "objectID": "style-guide.html#images",
    "href": "style-guide.html#images",
    "title": "Style Guide",
    "section": "Images",
    "text": "Images\nImages should link the source (or include a proper citation if it’s from an “academic” source) and alt text, like this:\n\n\n\nAn example caption for an image. Photo by Andriyko Podilnyk on Unsplash.\n\n\nIn the source code, this looks like:\n![An example caption for an image. Photo by [Andriyko Podilnyk](https://unsplash.com/@andriyko) on [Unsplash](https://unsplash.com/photos/RCfi7vgJjUY).](images/kitten-unsplash.jpg){fig-alt=\"A kitten walking in a field of green grass.\"}\nThis is rendered to HTML as:\n&lt;div class=\"quarto-figure quarto-figure-center\"&gt;\n   &lt;figure class=\"figure\"&gt;\n      &lt;p&gt;&lt;img src=\"images/kitten-unsplash.jpg\" class=\"img-fluid figure-img\" alt=\"A kitten walking in a field of green grass.\"&gt;&lt;/p&gt;\n      &lt;p&gt;&lt;/p&gt;\n      &lt;figcaption class=\"figure-caption\"&gt;An example caption for an image. Photo by &lt;a href=\"https://unsplash.com/@andriyko\"&gt;Andriyko Podilnyk&lt;/a&gt; on &lt;a href=\"https://unsplash.com/photos/RCfi7vgJjUY\"&gt;Unsplash&lt;/a&gt;.&lt;/figcaption&gt;\n      &lt;p&gt;&lt;/p&gt;\n   &lt;/figure&gt;\n&lt;/div&gt;\nNote the &lt;img&gt; tag in the rendered HTML has an alt property. This is critical for accessibility, and all images must have this."
  },
  {
    "objectID": "style-guide.html#referencing-fhir-artifacts",
    "href": "style-guide.html#referencing-fhir-artifacts",
    "title": "Style Guide",
    "section": "Referencing FHIR artifacts",
    "text": "Referencing FHIR artifacts\n\nFHIR resources should be referred to as “FHIR resources”, not “Resources” or “resources” to avoid confusion with other kinds of resources.\nSpecific FHIR resources should be referred to like “Patient,” and hyperlinked to the relevant FHIR spec page the first time they appear (or again if you think it’s likely the reader will want to refer to the FHIR spec, like if you are introducing a screenshot of the “Resource Content” spec table, it is probably helpful to link back to the FHIR resource’s page in the spec).\n\nThis mirrors the capitalization that appears on the FHIR resources list.\n\nOnce you have linked to the FHIR spec’s resource page for the first time, refer to the resource like: Patient.\nReference to specific elements should be in backticks like `Patient.name` when referencing the “name” element in Patient. Use the full element path including the resource name unless it’s too unwieldy/repetitive.\n\nDon’t hyperlink Patient.name directly, but if it’s useful to link to the element details, you can do it like so:\n\nThe Patient.name element (details here) stores one or more names associated with an individual.\n\nLinks to the FHIR spec should be…\n\n…to the current version (https://www.hl7.org/fhir/patient.html) if you are generally referring to something in the spec in a way that is version-independent.\n…to a specific version if you are referring to something specific – like a specific element or quoting the spec – that could change over time you should link to a specific version (https://www.hl7.org/fhir/R4B/patient.html)\n\nA heuristic for this: if you think the link might be broken in a future FHIR release, use a release-specific link.\nLikewise, if you refer to content that might change (even if the link still resolves), use a release-specific link.\nIf we want to “upgrade” the documentation in the future, we can search for all instances of https://www.hl7.org/fhir/R4B/, and then check those links for"
  },
  {
    "objectID": "style-guide.html#referencing-the-fhir-specification",
    "href": "style-guide.html#referencing-the-fhir-specification",
    "title": "Style Guide",
    "section": "Referencing the FHIR specification",
    "text": "Referencing the FHIR specification\nFor narrative content, use long block quotes with a link in the preceding sentence.\n\n\n\n\n\n\nExample of citing the FHIR spec\n\n\n\nThe FHIR specification notes that it can be difficult to know where to start:\n\nFHIR is a platform specification that defines a set of capabilities used across the healthcare process, in all jurisdictions, and in lots of different contexts. While the basics of the FHIR specification are relatively straight-forward (see the Overviews: General, Developers, Clinical, and Architects), it can still be difficult to know where to start when implementing a solution based on FHIR.\n\n\n\nNote that this links to a specific version of FHIR (https://www.hl7.org/fhir/R4B/modules.html) as it is a direct quote.\nAlso note that the hyperlinks in the excerpt are maintained in the blockquote. The easiest way to accomplish this is to copy from the FHIR spec and directly paste into the .qmd file.\nWe will often refer to the “Resource Content”/“Profile Content” table for a FHIR resource or profile. This should be implemented as a single screenshot taken on a high DPI screen (like a MacBook screen) at 100% browser zoom for each table.\nScreenshots of profiles’ tables should include the tabs at the top to identify which view of the table is being displayed. The screenshot should be introduced with a link to the profile in question, like below.\nFor example, here is the differential from the Device Metric Observation Profile R4B:\n\n\n\n\n\nCaptions are not necessary for these screenshots. However, the images still need alt text and should link to the page where the screenshot was taken. Version-specific links should be used.\nThe same approach should be used for these tables in FHIR resources, though it is not necessary to include the tabs.\nHere’s a screenshot from the Observation resource as an example:\n\n\n\n\n\nNote that the image hyperlink includes the #resource anchor to bring the reader directly to the “Resource Content” table in the documentation.\nIt is ok to only include part of these tables in the screenshot if that is beneficial. The example from Observation above is quite long, and it might be helpful to crop unnecessary parts. If you do this, you should do some lightweight image editing like so:\n\n\n\n\n\nIf we do this frequently, we can look into standardizing how this is done for consistency."
  },
  {
    "objectID": "test.html",
    "href": "test.html",
    "title": "Test",
    "section": "",
    "text": "{\n  \"json\": \"example\",\n  \"bad\": true,\n  // this shouldn't break\n}\n{\n  \"resourceType\": \"Patient\",\n  \"id\": \"example\",\n  \"text\": {\n    \"status\": \"generated\",\n    \"div\": \"&lt;div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"&gt;\\n\\t\\t\\t&lt;table&gt;\\n\\t\\t\\t\\t&lt;tbody&gt;\\n\\t\\t\\t\\t\\t&lt;tr&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;Name&lt;/td&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;Peter James \\n              &lt;b&gt;Chalmers&lt;/b&gt; (&quot;Jim&quot;)\\n            &lt;/td&gt;\\n\\t\\t\\t\\t\\t&lt;/tr&gt;\\n\\t\\t\\t\\t\\t&lt;tr&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;Address&lt;/td&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;534 Erewhon, Pleasantville, Vic, 3999&lt;/td&gt;\\n\\t\\t\\t\\t\\t&lt;/tr&gt;\\n\\t\\t\\t\\t\\t&lt;tr&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;Contacts&lt;/td&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;Home: unknown. Work: (03) 5555 6473&lt;/td&gt;\\n\\t\\t\\t\\t\\t&lt;/tr&gt;\\n\\t\\t\\t\\t\\t&lt;tr&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;Id&lt;/td&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;MRN: 12345 (Acme Healthcare)&lt;/td&gt;\\n\\t\\t\\t\\t\\t&lt;/tr&gt;\\n\\t\\t\\t\\t&lt;/tbody&gt;\\n\\t\\t\\t&lt;/table&gt;\\n\\t\\t&lt;/div&gt;\"\n  },\n  \"identifier\": [\n    {\n      \"use\": \"usual\",\n      \"type\": {\n        \"coding\": [\n          {\n            \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n            \"code\": \"MR\"\n          }\n        ]\n      },\n      \"system\": \"urn:oid:1.2.36.146.595.217.0.1\",\n      \"value\": \"12345\",\n      \"period\": {\n        \"start\": \"2001-05-06\"\n      },\n      \"assigner\": {\n        \"display\": \"Acme Healthcare\"\n      }\n    }\n  ],\n  \"active\": true,\n  \"name\": [\n    {\n      \"use\": \"official\",\n      \"family\": \"Chalmers\",\n      \"given\": [\n        \"Peter\",\n        \"James\"\n      ]\n    },\n    {\n      \"use\": \"usual\",\n      \"given\": [\n        \"Jim\"\n      ]\n    },\n    {\n      \"use\": \"maiden\",\n      \"family\": \"Windsor\",\n      \"given\": [\n        \"Peter\",\n        \"James\"\n      ],\n      \"period\": {\n        \"end\": \"2002\"\n      }\n    }\n  ],\n  \"telecom\": [\n    {\n      \"use\": \"home\"\n    },\n    {\n      \"system\": \"phone\",\n      \"value\": \"(03) 5555 6473\",\n      \"use\": \"work\",\n      \"rank\": 1\n    },\n    {\n      \"system\": \"phone\",\n      \"value\": \"(03) 3410 5613\",\n      \"use\": \"mobile\",\n      \"rank\": 2\n    },\n    {\n      \"system\": \"phone\",\n      \"value\": \"(03) 5555 8834\",\n      \"use\": \"old\",\n      \"period\": {\n        \"end\": \"2014\"\n      }\n    }\n  ],\n  \"gender\": \"male\",\n  \"birthDate\": \"1974-12-25\",\n  \"_birthDate\": {\n    \"extension\": [\n      {\n        \"url\": \"http://hl7.org/fhir/StructureDefinition/patient-birthTime\",\n        \"valueDateTime\": \"1974-12-25T14:35:45-05:00\"\n      }\n    ]\n  },\n  \"deceasedBoolean\": false,\n  \"address\": [\n    {\n      \"use\": \"home\",\n      \"type\": \"both\",\n      \"text\": \"534 Erewhon St PeasantVille, Rainbow, Vic  3999\",\n      \"line\": [\n        \"534 Erewhon St\"\n      ],\n      \"city\": \"PleasantVille\",\n      \"district\": \"Rainbow\",\n      \"state\": \"Vic\",\n      \"postalCode\": \"3999\",\n      \"period\": {\n        \"start\": \"1974-12-25\"\n      }\n    }\n  ],\n  \"contact\": [\n    {\n      \"relationship\": [\n        {\n          \"coding\": [\n            {\n              \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0131\",\n              \"code\": \"N\"\n            }\n          ]\n        }\n      ],\n      \"name\": {\n        \"family\": \"du MarchÃ©\",\n        \"_family\": {\n          \"extension\": [\n            {\n              \"url\": \"http://hl7.org/fhir/StructureDefinition/humanname-own-prefix\",\n              \"valueString\": \"VV\"\n            }\n          ]\n        },\n        \"given\": [\n          \"BÃ©nÃ©dicte\"\n        ]\n      },\n      \"telecom\": [\n        {\n          \"system\": \"phone\",\n          \"value\": \"+33 (237) 998327\"\n        }\n      ],\n      \"address\": {\n        \"use\": \"home\",\n        \"type\": \"both\",\n        \"line\": [\n          \"534 Erewhon St\"\n        ],\n        \"city\": \"PleasantVille\",\n        \"district\": \"Rainbow\",\n        \"state\": \"Vic\",\n        \"postalCode\": \"3999\",\n        \"period\": {\n          \"start\": \"1974-12-25\"\n        }\n      },\n      \"gender\": \"female\",\n      \"period\": {\n        \"start\": \"2012\"\n      }\n    }\n  ],\n  \"managingOrganization\": {\n    \"reference\": \"Organization/1\"\n  }\n}\n# This is Python code which should be unaffected by json viewer\n\nprint(42);\n{\n  \"json\": \"example\",\n  \"evil\": true,\n  \"div\": \"&lt;div&gt;&lt;h3&gt;Testing JS injection attack.&lt;/h3&gt;&lt;p&gt;Test failed if you saw an alert() popup. Inspect element to see script.&lt;/p&gt;&lt;img onerror='alert(`Vulnerability Found!`)' src=''&gt;&lt;/div&gt;\"\n}"
  },
  {
    "objectID": "test.html#json-viewer-examples",
    "href": "test.html#json-viewer-examples",
    "title": "Test",
    "section": "",
    "text": "{\n  \"json\": \"example\",\n  \"bad\": true,\n  // this shouldn't break\n}\n{\n  \"resourceType\": \"Patient\",\n  \"id\": \"example\",\n  \"text\": {\n    \"status\": \"generated\",\n    \"div\": \"&lt;div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"&gt;\\n\\t\\t\\t&lt;table&gt;\\n\\t\\t\\t\\t&lt;tbody&gt;\\n\\t\\t\\t\\t\\t&lt;tr&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;Name&lt;/td&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;Peter James \\n              &lt;b&gt;Chalmers&lt;/b&gt; (&quot;Jim&quot;)\\n            &lt;/td&gt;\\n\\t\\t\\t\\t\\t&lt;/tr&gt;\\n\\t\\t\\t\\t\\t&lt;tr&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;Address&lt;/td&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;534 Erewhon, Pleasantville, Vic, 3999&lt;/td&gt;\\n\\t\\t\\t\\t\\t&lt;/tr&gt;\\n\\t\\t\\t\\t\\t&lt;tr&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;Contacts&lt;/td&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;Home: unknown. Work: (03) 5555 6473&lt;/td&gt;\\n\\t\\t\\t\\t\\t&lt;/tr&gt;\\n\\t\\t\\t\\t\\t&lt;tr&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;Id&lt;/td&gt;\\n\\t\\t\\t\\t\\t\\t&lt;td&gt;MRN: 12345 (Acme Healthcare)&lt;/td&gt;\\n\\t\\t\\t\\t\\t&lt;/tr&gt;\\n\\t\\t\\t\\t&lt;/tbody&gt;\\n\\t\\t\\t&lt;/table&gt;\\n\\t\\t&lt;/div&gt;\"\n  },\n  \"identifier\": [\n    {\n      \"use\": \"usual\",\n      \"type\": {\n        \"coding\": [\n          {\n            \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n            \"code\": \"MR\"\n          }\n        ]\n      },\n      \"system\": \"urn:oid:1.2.36.146.595.217.0.1\",\n      \"value\": \"12345\",\n      \"period\": {\n        \"start\": \"2001-05-06\"\n      },\n      \"assigner\": {\n        \"display\": \"Acme Healthcare\"\n      }\n    }\n  ],\n  \"active\": true,\n  \"name\": [\n    {\n      \"use\": \"official\",\n      \"family\": \"Chalmers\",\n      \"given\": [\n        \"Peter\",\n        \"James\"\n      ]\n    },\n    {\n      \"use\": \"usual\",\n      \"given\": [\n        \"Jim\"\n      ]\n    },\n    {\n      \"use\": \"maiden\",\n      \"family\": \"Windsor\",\n      \"given\": [\n        \"Peter\",\n        \"James\"\n      ],\n      \"period\": {\n        \"end\": \"2002\"\n      }\n    }\n  ],\n  \"telecom\": [\n    {\n      \"use\": \"home\"\n    },\n    {\n      \"system\": \"phone\",\n      \"value\": \"(03) 5555 6473\",\n      \"use\": \"work\",\n      \"rank\": 1\n    },\n    {\n      \"system\": \"phone\",\n      \"value\": \"(03) 3410 5613\",\n      \"use\": \"mobile\",\n      \"rank\": 2\n    },\n    {\n      \"system\": \"phone\",\n      \"value\": \"(03) 5555 8834\",\n      \"use\": \"old\",\n      \"period\": {\n        \"end\": \"2014\"\n      }\n    }\n  ],\n  \"gender\": \"male\",\n  \"birthDate\": \"1974-12-25\",\n  \"_birthDate\": {\n    \"extension\": [\n      {\n        \"url\": \"http://hl7.org/fhir/StructureDefinition/patient-birthTime\",\n        \"valueDateTime\": \"1974-12-25T14:35:45-05:00\"\n      }\n    ]\n  },\n  \"deceasedBoolean\": false,\n  \"address\": [\n    {\n      \"use\": \"home\",\n      \"type\": \"both\",\n      \"text\": \"534 Erewhon St PeasantVille, Rainbow, Vic  3999\",\n      \"line\": [\n        \"534 Erewhon St\"\n      ],\n      \"city\": \"PleasantVille\",\n      \"district\": \"Rainbow\",\n      \"state\": \"Vic\",\n      \"postalCode\": \"3999\",\n      \"period\": {\n        \"start\": \"1974-12-25\"\n      }\n    }\n  ],\n  \"contact\": [\n    {\n      \"relationship\": [\n        {\n          \"coding\": [\n            {\n              \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0131\",\n              \"code\": \"N\"\n            }\n          ]\n        }\n      ],\n      \"name\": {\n        \"family\": \"du MarchÃ©\",\n        \"_family\": {\n          \"extension\": [\n            {\n              \"url\": \"http://hl7.org/fhir/StructureDefinition/humanname-own-prefix\",\n              \"valueString\": \"VV\"\n            }\n          ]\n        },\n        \"given\": [\n          \"BÃ©nÃ©dicte\"\n        ]\n      },\n      \"telecom\": [\n        {\n          \"system\": \"phone\",\n          \"value\": \"+33 (237) 998327\"\n        }\n      ],\n      \"address\": {\n        \"use\": \"home\",\n        \"type\": \"both\",\n        \"line\": [\n          \"534 Erewhon St\"\n        ],\n        \"city\": \"PleasantVille\",\n        \"district\": \"Rainbow\",\n        \"state\": \"Vic\",\n        \"postalCode\": \"3999\",\n        \"period\": {\n          \"start\": \"1974-12-25\"\n        }\n      },\n      \"gender\": \"female\",\n      \"period\": {\n        \"start\": \"2012\"\n      }\n    }\n  ],\n  \"managingOrganization\": {\n    \"reference\": \"Organization/1\"\n  }\n}\n# This is Python code which should be unaffected by json viewer\n\nprint(42);\n{\n  \"json\": \"example\",\n  \"evil\": true,\n  \"div\": \"&lt;div&gt;&lt;h3&gt;Testing JS injection attack.&lt;/h3&gt;&lt;p&gt;Test failed if you saw an alert() popup. Inspect element to see script.&lt;/p&gt;&lt;img onerror='alert(`Vulnerability Found!`)' src=''&gt;&lt;/div&gt;\"\n}"
  },
  {
    "objectID": "test.html#this-is-a-quarto-website.",
    "href": "test.html#this-is-a-quarto-website.",
    "title": "Test",
    "section": "This is a Quarto website.",
    "text": "This is a Quarto website.\nFull Quarto Docs at https://quarto.org/docs/guide/.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "test.html#markdown-demo",
    "href": "test.html#markdown-demo",
    "title": "Test",
    "section": "Markdown Demo",
    "text": "Markdown Demo\n\nlist item 1\nlist item italic\nlist item bold\nlist item inline code\n\nnested list item 1\n\n\n\nBlockquote\n\n\n\n\ntable\ncol 1\ncol 2\n\n\n\n\nrow\nA\nB\n\n\nrow\nC\nD"
  },
  {
    "objectID": "test.html#html-demo",
    "href": "test.html#html-demo",
    "title": "Test",
    "section": "HTML Demo",
    "text": "HTML Demo\n\nButton"
  },
  {
    "objectID": "webinar-refs.html",
    "href": "webinar-refs.html",
    "title": "May 2023 Webinar References",
    "section": "",
    "text": "Brandt PS, Pacheco JA, Adekkanattu P, Sholle ET, Abedian S, Stone DJ, et al. Design and validation of a FHIR-based EHR-driven phenotyping toolbox. Journal of the American Medical Informatics Association 2022;29:1449–60. https://doi.org/10.1093/jamia/ocac063.\nCheng AC, Banasiewicz MK, Johnson JD, Sulieman L, Kennedy N, Delacqua F, et al. Evaluating automated electronic case report form data entry from electronic health records. J Clin Trans Sci 2023;7:e29. https://doi.org/10.1017/cts.2022.514.\nLobach DF, Boxwala A, Kashyap N, Heaney-Huls K, Chiao AB, Rafter T, et al. Integrating a Patient Engagement App into an Electronic Health Record-Enabled Workflow Using Interoperability Standards. Appl Clin Inform 2022;13:1163–71. https://doi.org/10.1055/s-0042-1758736.\nStrasberg HR, Rhodes B, Del Fiol G, Jenders RA, Haug PJ, Kawamoto K. Contemporary clinical decision support standards using Health Level Seven International Fast Healthcare Interoperability Resources. Journal of the American Medical Informatics Association 2021;28:1796–806. https://doi.org/10.1093/jamia/ocab070.\nTarumi S, Takeuchi W, Chalkidis G, Rodriguez-Loya S, Kuwata J, Flynn M, et al. Leveraging Artificial Intelligence to Improve Chronic Disease Care: Methods and Application to Pharmacotherapy Decision Support for Type-2 Diabetes Mellitus. Methods Inf Med 2021;60:e32–43. https://doi.org/10.1055/s-0041-1728757.\nWesley DB, Blumenthal J, Shah S, Littlejohn RA, Pruitt Z, Dixit R, et al. A novel application of SMART on FHIR architecture for interoperable and scalable integration of patient-reported outcome data with electronic health records. Journal of the American Medical Informatics Association 2021;28:2220–5. https://doi.org/10.1093/jamia/ocab110.\nZong N, Stone DJ, Sharma DK, Wen A, Wang C, Yu Y, et al. Modeling cancer clinical trials using HL7 FHIR to support downstream applications: A case study with colorectal cancer data. International Journal of Medical Informatics 2021;145:104308. https://doi.org/10.1016/j.ijmedinf.2020.104308."
  },
  {
    "objectID": "workshops/fhir-bulk-data/index.html#workshop-notebook",
    "href": "workshops/fhir-bulk-data/index.html#workshop-notebook",
    "title": "FHIR Bulk Data Workshop",
    "section": "Workshop notebook",
    "text": "Workshop notebook\nThe Jupyter Notebook for the workshop can be found here."
  },
  {
    "objectID": "workshops/fhir-bulk-data/slides.html#what-is-fhir-bulk-data",
    "href": "workshops/fhir-bulk-data/slides.html#what-is-fhir-bulk-data",
    "title": "FHIR for Research",
    "section": "What is FHIR Bulk Data?",
    "text": "What is FHIR Bulk Data?\n\nHL7 specification, published in November 2021\nhttps://hl7.org/fhir/uv/bulkdata/\n\nFrom the spec:\n\nProviders and organizations accountable for managing the health of populations often need to efficiently access large volumes of information on a group of individuals. For example, a health system may want to periodically retrieve updated clinical data from an EHR to a research database…"
  },
  {
    "objectID": "workshops/fhir-bulk-data/slides.html#why-do-we-need-fhir-bulk-data",
    "href": "workshops/fhir-bulk-data/slides.html#why-do-we-need-fhir-bulk-data",
    "title": "FHIR for Research",
    "section": "Why do we need FHIR Bulk Data?",
    "text": "Why do we need FHIR Bulk Data?\nFrom the spec:\n\nExisting FHIR APIs work well for accessing small amounts of data, but large exports can require hundreds of thousands of requests.\n\nFHIR Bulk Data provides a simpler, standard mechanism to extract large amounts of FHIR-format data from an EHR."
  },
  {
    "objectID": "workshops/fhir-bulk-data/slides.html#why-now",
    "href": "workshops/fhir-bulk-data/slides.html#why-now",
    "title": "FHIR for Research",
    "section": "Why now?",
    "text": "Why now?\nThe Office of the National Coordinator for Health Information Technology (ONC)’s Health IT Certification Program requires adoption of FHIR Bulk Data APIs:\n\n“ONC Supports Adoption and Implementation of Bulk Data APIs”\n§170.315(g)(10) Standardized API for patient and population services\nFHIR Bulk Data group-export required for December 2022 certification deadline for USCDI data elements\n\n\n\n45 CFR 170.315(g)(10) is:\n\nIn Title 45 of the Code of Federal Regulations\nPart 170, Section 315, Paragraph 170.315(g)(10)\nMore information on how the CFR is structured\nText of the CFR: https://www.ecfr.gov/current/title-45/subtitle-A/subchapter-D/part-170/subpart-C/section-170.315#p-170.315(g)(10)\n\nhttps://youtu.be/QZQ-Ldc8dKQ?t=2040 talks about the ONC requirements for group-export\nComments on the 21st Century Cures Act Proposed Interoperability Rule - SMART Health IT talks about FHIR Bulk Data and USCDI"
  },
  {
    "objectID": "workshops/fhir-bulk-data/slides.html#aside-ehi-export",
    "href": "workshops/fhir-bulk-data/slides.html#aside-ehi-export",
    "title": "FHIR for Research",
    "section": "Aside: EHI export",
    "text": "Aside: EHI export\n\nONC’s program also requires population-level data export (“EHI export”):\n\n§170.315(b)(10) Electronic Health Information export\n\nPatient population electronic health information export. Create an export of all the electronic health information that can be stored at the time of certification by the product, of which the Health IT Module is a part.\n\n§170.315(b)(10) fact sheet (pdf)\n\nmust be available to their customers by December 31, 2023\n\nCan be implemented with FHIR Bulk Data, but does not necessarily have to be FHIR Bulk Data\n\nFHIR(ish) example: athenaPractice (née GE Centricity) https://docs.mydata.athenahealth.com/fhir-r4/ehiexport.html, which uses NDJSON, FHIR resources, and some custom resources defined in this Implementation Guide."
  },
  {
    "objectID": "workshops/fhir-bulk-data/slides.html#vendor-support",
    "href": "workshops/fhir-bulk-data/slides.html#vendor-support",
    "title": "FHIR for Research",
    "section": "Vendor support",
    "text": "Vendor support\n\nWidespread vendor support for FHIR Bulk Data export of groups of patients thanks to December 2022 ONC certification deadline\nList of vendors with §170.315(g)(10) certification: https://chpl.healthit.gov\n\nFilter for Certification Criteria → 2015 Cures Update Certification Criteria → 170.315 (G)(10): Standardized Api for Patient and Population Services (Cures Update)\n\nExamples: Epic, Cerner"
  },
  {
    "objectID": "workshops/fhir-bulk-data/slides.html#fhir-bulk-data-specifications",
    "href": "workshops/fhir-bulk-data/slides.html#fhir-bulk-data-specifications",
    "title": "FHIR for Research",
    "section": "FHIR Bulk Data specifications",
    "text": "FHIR Bulk Data specifications\nImplementations use these specs:\n\nhttps://hl7.org/fhir/uv/bulkdata/export.html defines the request flow for retrieving Bulk Data from a FHIR server\nhttps://www.hl7.org/fhir/smart-app-launch/backend-services.html further describes the authorization/authentication flow"
  },
  {
    "objectID": "workshops/fhir-bulk-data/slides.html#high-level-fhir-bulk-data-request-steps",
    "href": "workshops/fhir-bulk-data/slides.html#high-level-fhir-bulk-data-request-steps",
    "title": "FHIR for Research",
    "section": "High level FHIR Bulk Data request steps",
    "text": "High level FHIR Bulk Data request steps\n\nGet an access token from the FHIR server\nRequest: GET https://fhir.example.org/Group/[id]/$export\nReceive the requested FHIR data (“NDJSON” format)\n\nCan be split into multiple files by the server to support arbitrarily large data sets"
  },
  {
    "objectID": "workshops/fhir-bulk-data/slides.html#characteristics-of-research-that-may-benefit-from-fhir-bulk-data",
    "href": "workshops/fhir-bulk-data/slides.html#characteristics-of-research-that-may-benefit-from-fhir-bulk-data",
    "title": "FHIR for Research",
    "section": "Characteristics of research that may benefit from FHIR Bulk Data",
    "text": "Characteristics of research that may benefit from FHIR Bulk Data\n\n\nNeed for direct access to (identified) EHR data for a specific group of patients\n\nNote that there is an open source library from Microsoft for de-identifying FHIR Bulk Data\n\nThe necessary data elements are part of USCDI, or otherwise included in EHR’s FHIR implementation\nReal-time access is not needed (other FHIR APIs are better for this)\nOne-off data pull or regular updates\nMulti-site research without existing shared CDM"
  },
  {
    "objectID": "workshops/fhir-bulk-data/slides.html#non-ehr-uses-of-fhir-bulk-data",
    "href": "workshops/fhir-bulk-data/slides.html#non-ehr-uses-of-fhir-bulk-data",
    "title": "FHIR for Research",
    "section": "Non-EHR uses of FHIR Bulk Data",
    "text": "Non-EHR uses of FHIR Bulk Data\nFrom this FHIR DevDays 2022 presentation:\n\nCMS ACO Beneficiary Claims Data (pilot)\nCMS Data at the Point of Care (pilot)\nCMS Claims to Part D Sponsors (pilot)"
  },
  {
    "objectID": "workshops/fhir-bulk-data/slides.html#technical-workshop-agenda",
    "href": "workshops/fhir-bulk-data/slides.html#technical-workshop-agenda",
    "title": "FHIR for Research",
    "section": "Technical workshop agenda",
    "text": "Technical workshop agenda\n\nTechnical overview of example FHIR Bulk Data workflow (slides)\nHands-on in a Jupyter Notebook with Python:\n\nSetup and dependencies\nRetrieving a Bulk Data export\nAnalyzing FHIR-format data\n\nOptional lab"
  },
  {
    "objectID": "workshops/fhir-bulk-data/slides.html#fhir-bulk-data-workflow",
    "href": "workshops/fhir-bulk-data/slides.html#fhir-bulk-data-workflow",
    "title": "FHIR for Research",
    "section": "FHIR Bulk Data workflow",
    "text": "FHIR Bulk Data workflow\n\nGet an access token from the FHIR server\nRequest: GET https://fhir.example.org/Group/[id]/$export\nReceive the requested FHIR data (“NDJSON” format)"
  },
  {
    "objectID": "workshops/fhir-bulk-data/slides.html#additional-resources",
    "href": "workshops/fhir-bulk-data/slides.html#additional-resources",
    "title": "FHIR for Research",
    "section": "Additional resources",
    "text": "Additional resources\n\nhttp://purl.org/fhir-for-research/web\nGoogle Colab notebook showing how to load FHIR Bulk Data into a SQL (SQLite) database"
  },
  {
    "objectID": "workshops/fhir-bulk-data/notebook.html",
    "href": "workshops/fhir-bulk-data/notebook.html",
    "title": "FHIR for Research Workshop - Bulk Data",
    "section": "",
    "text": "http://hl7.org/fhir/uv/bulkdata/index.html\nhttp://www.hl7.org/fhir/smart-app-launch/backend-services.html"
  },
  {
    "objectID": "workshops/fhir-bulk-data/notebook.html#reference",
    "href": "workshops/fhir-bulk-data/notebook.html#reference",
    "title": "FHIR for Research Workshop - Bulk Data",
    "section": "",
    "text": "http://hl7.org/fhir/uv/bulkdata/index.html\nhttp://www.hl7.org/fhir/smart-app-launch/backend-services.html"
  },
  {
    "objectID": "workshops/fhir-bulk-data/notebook.html#fetching-bulk-data-into-dataframes",
    "href": "workshops/fhir-bulk-data/notebook.html#fetching-bulk-data-into-dataframes",
    "title": "FHIR for Research Workshop - Bulk Data",
    "section": "Fetching Bulk Data into DataFrames",
    "text": "Fetching Bulk Data into DataFrames\nThe goal of this workshop is to connect to the SMART Bulk Data Server and fetch a set of sample patient data. While libraries like FHIR-PYrate https://github.com/UMEssen/FHIR-PYrate allow you to fetch data from a server and parse it directly into a DataFrame, these libraries generally do not support FHIR Bulk Data. This workshop will step through the process of building up a tool to fetch Bulk Data and convert it into DataFrames."
  },
  {
    "objectID": "workshops/fhir-bulk-data/notebook.html#motivationpurpose",
    "href": "workshops/fhir-bulk-data/notebook.html#motivationpurpose",
    "title": "FHIR for Research Workshop - Bulk Data",
    "section": "Motivation/Purpose",
    "text": "Motivation/Purpose\n\nIcons in this Guide\n📘 A link to a useful external reference related to the section the icon appears in\n🖐 A hands-on section where you will code something or interact with the server"
  },
  {
    "objectID": "workshops/fhir-bulk-data/notebook.html#background",
    "href": "workshops/fhir-bulk-data/notebook.html#background",
    "title": "FHIR for Research Workshop - Bulk Data",
    "section": "Background",
    "text": "Background\nThe FHIR Bulk Data specification uses SMART Backend Authorization to connect. The basic idea of SMART Backend Authorization is that registered clients make a signed request to a token endpoint to receive a Bearer token, which is then used for subsequent calls to the FHIR server.\nIn practice, client registration is likely to happen as a separate one-time event performed manually. The SMART Backend Auth specification does not define an API for registration.\nFor this workshop, we are connecting to the SMART Bulk Data Server which allows clients to “register” using either a JWKS URL or by raw JWKS. (“registration” in this case is not stored on the server, instead they provide a base URL where that “registration” is stored as state in the URL and clientID). For convenience, the SMART Bulk Data Server launch page allows users to generate a once-off JWKS to use for testing. For production usage, clients must generate their own certificates and JWKS and keep the private key private. In this workshop we use a JWKS generated by the launch page with algorithm “RS384”.\nIMPORTANT: this workshop largely skips error handling and stays on the “happy path” for brevity and readability. We strongly recommend reviewing the specifications and adding better error handling before using any of this code in a production environment.\n\n# The default style for rendering JSON (dictionaries) in Python isn't the best.\n# Use this import and call print(json) when we want a cleaner view.\n\nfrom rich import print"
  },
  {
    "objectID": "workshops/fhir-bulk-data/notebook.html#step-1-getting-our-access-token",
    "href": "workshops/fhir-bulk-data/notebook.html#step-1-getting-our-access-token",
    "title": "FHIR for Research Workshop - Bulk Data",
    "section": "Step 1: Getting our Access Token",
    "text": "Step 1: Getting our Access Token\n\n# First define our credentials\n\nclient_id = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InJlZ2lzdHJhdGlvbi10b2tlbiJ9.eyJqd2tzIjp7ImtleXMiOlt7Imt0eSI6IlJTQSIsImFsZyI6IlJTMzg0IiwibiI6IjNlLUx6cjJfRk5NQVRqZWpZa0Zqd1JxQTdWM3d6TnFMV25WODRjVGd5ZnlNVThvdjRERUk4S0V3cXpBZ0Q5U0ZzaW9FY2dLMjlDcE1tVHpYVy1lblFXYUc4Qk5qTjMxZ1NFNnBFLXpZMWdDOTFSclVjbGUzdENHYXVMeWlCS3JzOHA3WS0tekhLVVlaWjNLWmtUbldON2FFU0docGZQSlJvcUZ3V3BoZFBxc1dNUDdPZjVDUDFRMHJ3OTFaMXZ5TkdoV3l6YWNVd043WkJfVjVoVW1URE1Cb2FSXy1IMnp4YUVQVUZiaHVFU3R1QmozdmZURS10NE5RbWVNSmlaSkd1LVdiZHVMTWN2UzFNYlQwUzZiaEFEbUlHSW5tbkh0MnRlbVhUbXhaVWdTaERocHFaUHZ4alJfV0tZVW5uekM5S2lxaDNsT19lQUtObUV2Q0k1WjhqUSIsImUiOiJBUUFCIiwia2V5X29wcyI6WyJ2ZXJpZnkiXSwiZXh0Ijp0cnVlLCJraWQiOiIwOWEyZGRmMzljZWVmMGRmMDQ1ZDdmNGUzOTZjNzg1MSJ9LHsia3R5IjoiUlNBIiwiYWxnIjoiUlMzODQiLCJuIjoiM2UtTHpyMl9GTk1BVGplallrRmp3UnFBN1Yzd3pOcUxXblY4NGNUZ3lmeU1VOG92NERFSThLRXdxekFnRDlTRnNpb0VjZ0syOUNwTW1UelhXLWVuUVdhRzhCTmpOMzFnU0U2cEUtelkxZ0M5MVJyVWNsZTN0Q0dhdUx5aUJLcnM4cDdZLS16SEtVWVpaM0taa1RuV043YUVTR2hwZlBKUm9xRndXcGhkUHFzV01QN09mNUNQMVEwcnc5MVoxdnlOR2hXeXphY1V3TjdaQl9WNWhVbVRETUJvYVJfLUgyenhhRVBVRmJodUVTdHVCajN2ZlRFLXQ0TlFtZU1KaVpKR3UtV2JkdUxNY3ZTMU1iVDBTNmJoQURtSUdJbm1uSHQydGVtWFRteFpVZ1NoRGhwcVpQdnhqUl9XS1lVbm56QzlLaXFoM2xPX2VBS05tRXZDSTVaOGpRIiwiZSI6IkFRQUIiLCJkIjoiMWtQM0RscFNxS0F0bzFaRF94QnlablJZRk5LbE1LR3QtRi1GZWRMQjAwQm5tbDJSYXpqc0VLVU9mN2V1dkpuSm1nREcyZXVWQnBYdjdlRzNhWnQwOXNjdGI0cklOMEpzT21MM0NhMllpc09jZ3Ftc2dkZi1HNEoyQmZUWDF2bk9XVTdTM2lYekFmNFRlTFJEWHRvZjN4bnZESmtCZndmVG1OZVR5V05nWXFhdDM4VmJjTjFPMVJGNFhPMGk3RktUaVZ0Z3d2RzlLX2hHMXNrQkpMd0R0YXR3SGl6Z2ZJdERtRFMtbTQxaGRUSlFDZUptS3c0eGpJWDlWaXlpRXpsMTFxRmNrWUkzQUl2Q2toTkZMNVh5dkpuV0kyaHpmbTJxa1gzbTRXNEdKZVU0SV9Dbzl0dUd2SUNhZHJ0eFhQZjVWWk4tck5IemszRTVkbEZNNkRUdEFRIiwicCI6Ii1CR0NKaWF2V3ZiRE1SejZzd1lRc2ZEbTBBMnV0S3plZW82WDF0M3hBa0hCZ1pRajltZ25acFlVZEdvWW00NjFLSU1YUE54VWxfX0hWcWFuaUlNMjNvODlWTDJkMkJ1Z3UwcE5PbzhTcXdVNFROOVNIczBPOXUwVWZJRURzRVpPWWdDaDB1ZXBtMFMteG1QZ0F3UkxJTE10NmJUTFYyLVFtT1dHb2xjeno0ayIsInEiOiI1UWdpNjRTMEJaR2JobVJRYWFxc0YySFU5VllFM25Qck1GcHNJdmhvUzNRWEw5RFNOMEpQYWZ4VHVsMW9HS3hsV3FvRDkydks5YWNaVVpZWjU2SHZ4MFdWaGFzUWpGMERmd3NFMV8xRk1OTFppVy1xdVhGOGxRVjlEOHpHSkREYllXeEdOUDYtYkpXVWQycnM3MndtMzFDa3lrbUNsQmk5UWJ5SXRrM3FYLVUiLCJkcCI6ImVHWUhCUDFCbnFTbGxfQzR2S3IwNzJnOG5qNEZ6U3Naei1IbFVDUG9GWEJVdXM5cnBPeG9NeUlrUzF3ekZVenVIX3VBQzhua1JPR2ZuaTdFb1QwT0pIYmhEWF82WENrTW1kbzJJWFhQV2JIdTRXQ0NPdkRMa296LXBHNzVtMVNFTm95WF9nVHlES29RN2JrTHdHc1ZDNG5yZnNLQTdxNzNQejRuV2lONHdnRSIsImRxIjoiQ0pOemEwby15MjZXV2tQclZ1bVRKQlRfdW1nTUtxQkFrRUR5aDZTeGt4RzN4SXlYTW9hREhyN2FDOEp2b1d6akpxX3pFaEt4T04yVzd4MGx2eXlySTlVUk1qNGprbjN4SVpLeURieG9HTm5zVjE4ZEQzQ1diNllTOXNKLU1PQzdkanh0ckpKVll3OS16Ykh0U1ZITmF0TkVPR2JrUXROaVV0SFNkTEVhTTVrIiwicWkiOiJPR1JXYkJ4V2xncy05UUlsaEpFZEdPM0ZDb0FYREkyc3JTUlVwXzlnZVpXcGlxVTZHYUp0MjY4NzdKNHlGR0hhSG83MWN4eHpiOG55NTZCMTFiZm5DT3E2TUwtalI5Ym9RWmo1REhCaE1CYTZuVHI0anpfaE1uQjZqTFdMNFd3dGJwMkdpcXVMTVAyWnI2MGFSZHFJOVAzNlFadXMyVURGUmxLVmJrMlRLeFkiLCJrZXlfb3BzIjpbInNpZ24iXSwiZXh0Ijp0cnVlLCJraWQiOiIwOWEyZGRmMzljZWVmMGRmMDQ1ZDdmNGUzOTZjNzg1MSJ9XX0sImFjY2Vzc1Rva2Vuc0V4cGlyZUluIjoxNSwiaWF0IjoxNjgzOTAwNTEzfQ.OdAI3mUiBsEIF1ViZRyqOb6gpEg3HOxPjSB9kwf9R8w'\n\nprivate_key = \"\"\"-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA3e+Lzr2/FNMATjejYkFjwRqA7V3wzNqLWnV84cTgyfyMU8ov\n4DEI8KEwqzAgD9SFsioEcgK29CpMmTzXW+enQWaG8BNjN31gSE6pE+zY1gC91RrU\ncle3tCGauLyiBKrs8p7Y++zHKUYZZ3KZkTnWN7aESGhpfPJRoqFwWphdPqsWMP7O\nf5CP1Q0rw91Z1vyNGhWyzacUwN7ZB/V5hUmTDMBoaR/+H2zxaEPUFbhuEStuBj3v\nfTE+t4NQmeMJiZJGu+WbduLMcvS1MbT0S6bhADmIGInmnHt2temXTmxZUgShDhpq\nZPvxjR/WKYUnnzC9Kiqh3lO/eAKNmEvCI5Z8jQIDAQABAoIBAQDWQ/cOWlKooC2j\nVkP/EHJmdFgU0qUwoa34X4V50sHTQGeaXZFrOOwQpQ5/t668mcmaAMbZ65UGle/t\n4bdpm3T2xy1visg3Qmw6YvcJrZiKw5yCqayB1/4bgnYF9NfW+c5ZTtLeJfMB/hN4\ntENe2h/fGe8MmQF/B9OY15PJY2Bipq3fxVtw3U7VEXhc7SLsUpOJW2DC8b0r+EbW\nyQEkvAO1q3AeLOB8i0OYNL6bjWF1MlAJ4mYrDjGMhf1WLKITOXXWoVyRgjcAi8KS\nE0UvlfK8mdYjaHN+baqRfebhbgYl5Tgj8Kj224a8gJp2u3Fc9/lVk36s0fOTcTl2\nUUzoNO0BAoGBAPgRgiYmr1r2wzEc+rMGELHw5tANrrSs3nqOl9bd8QJBwYGUI/Zo\nJ2aWFHRqGJuOtSiDFzzcVJf/x1amp4iDNt6PPVS9ndgboLtKTTqPEqsFOEzfUh7N\nDvbtFHyBA7BGTmIAodLnqZtEvsZj4AMESyCzLem0y1dvkJjlhqJXM8+JAoGBAOUI\nIuuEtAWRm4ZkUGmqrBdh1PVWBN5z6zBabCL4aEt0Fy/Q0jdCT2n8U7pdaBisZVqq\nA/dryvWnGVGWGeeh78dFlYWrEIxdA38LBNf9RTDS2YlvqrlxfJUFfQ/MxiQw22Fs\nRjT+vmyVlHdq7O9sJt9QpMpJgpQYvUG8iLZN6l/lAoGAeGYHBP1BnqSll/C4vKr0\n72g8nj4FzSsZz+HlUCPoFXBUus9rpOxoMyIkS1wzFUzuH/uAC8nkROGfni7EoT0O\nJHbhDX/6XCkMmdo2IXXPWbHu4WCCOvDLkoz+pG75m1SENoyX/gTyDKoQ7bkLwGsV\nC4nrfsKA7q73Pz4nWiN4wgECgYAIk3NrSj7LbpZaQ+tW6ZMkFP+6aAwqoECQQPKH\npLGTEbfEjJcyhoMevtoLwm+hbOMmr/MSErE43ZbvHSW/LKsj1REyPiOSffEhkrIN\nvGgY2exXXx0PcJZvphL2wn4w4Lt2PG2sklVjD37Nse1JUc1q00Q4ZuRC02JS0dJ0\nsRozmQKBgDhkVmwcVpYLPvUCJYSRHRjtxQqAFwyNrK0kVKf/YHmVqYqlOhmibduv\nO+yeMhRh2h6O9XMcc2/J8uegddW35wjqujC/o0fW6EGY+QxwYTAWup06+I8/4TJw\neoy1i+FsLW6dhoqrizD9ma+tGkXaiPT9+kGbrNlAxUZSlW5NkysW\n-----END RSA PRIVATE KEY-----\n\"\"\"\n\nkey_id = \"09a2ddf39ceef0df045d7f4e396c7851\"\n\n# And server endpoint\nserver_url = 'https://bulk-data.smarthealthit.org/eyJlcnIiOiIiLCJwYWdlIjoxMDAwMCwiZHVyIjoxMCwidGx0IjoxNSwibSI6MSwic3R1Ijo0LCJkZWwiOjB9/fhir'\n\n\n# we use the requests library to make all HTTP requests\nimport requests\n\n# and use a Session, in case we need to persist common settings such as proxy or SSL configuration\nsession = requests.Session()\n\n# Optional: Turn off SSL verification. Useful when dealing with a corporate proxy with self-signed certificates.\nfrom urllib3.exceptions import InsecureRequestWarning\nrequests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)\nsession.verify = False\n\n\n# Let's start by confirming we can even hit the server with the metadata endpoint\nr = session.get(f'{server_url}/metadata')\nmetadata = r.json()\n\nprint(metadata)\n\n{\n    'resourceType': 'CapabilityStatement',\n    'status': 'active',\n    'date': '2023-05-22T14:55:19+00:00',\n    'publisher': \"Boston Children's Hospital\",\n    'kind': 'instance',\n    'instantiates': ['http://hl7.org/fhir/uv/bulkdata/CapabilityStatement/bulk-data'],\n    'software': {'name': 'SMART Sample Bulk Data Server', 'version': '2.1.1'},\n    'implementation': {'description': 'SMART Sample Bulk Data Server'},\n    'fhirVersion': '4.0.1',\n    'acceptUnknown': 'extensions',\n    'format': ['json'],\n    'rest': [\n        {\n            'mode': 'server',\n            'security': {\n                'extension': [\n                    {\n                        'url': 'http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris',\n                        'extension': [\n                            {'url': 'token', 'valueUri': 'https://bulk-data.smarthealthit.org/auth/token'},\n                            {'url': 'register', 'valueUri': 'https://bulk-data.smarthealthit.org/auth/register'}\n                        ]\n                    }\n                ],\n                'service': [\n                    {\n                        'coding': [\n                            {\n                                'system': 'http://hl7.org/fhir/restful-security-service',\n                                'code': 'SMART-on-FHIR',\n                                'display': 'SMART-on-FHIR'\n                            }\n                        ],\n                        'text': 'OAuth2 using SMART-on-FHIR profile (see http://docs.smarthealthit.org)'\n                    }\n                ]\n            },\n            'resource': [\n                {\n                    'type': 'Patient',\n                    'operation': [\n                        {\n                            'extension': [\n                                {\n                                    'url': \n'http://hl7.org/fhir/StructureDefinition/capabilitystatement-expectation',\n                                    'valueCode': 'SHOULD'\n                                }\n                            ],\n                            'name': 'patient-export',\n                            'definition': 'http://hl7.org/fhir/uv/bulkdata/OperationDefinition/patient-export'\n                        }\n                    ]\n                },\n                {\n                    'type': 'Group',\n                    'operation': [\n                        {\n                            'extension': [\n                                {\n                                    'url': \n'http://hl7.org/fhir/StructureDefinition/capabilitystatement-expectation',\n                                    'valueCode': 'SHOULD'\n                                }\n                            ],\n                            'name': 'group-export',\n                            'definition': 'http://hl7.org/fhir/uv/bulkdata/OperationDefinition/group-export'\n                        }\n                    ]\n                },\n                {\n                    'type': 'OperationDefinition',\n                    'profile': {'reference': 'http://hl7.org/fhir/Profile/OperationDefinition'},\n                    'interaction': [{'code': 'read'}],\n                    'searchParam': []\n                }\n            ],\n            'operation': [\n                {'name': 'get-resource-counts', 'definition': 'OperationDefinition/-s-get-resource-counts'},\n                {\n                    'extension': [\n                        {\n                            'url': 'http://hl7.org/fhir/StructureDefinition/capabilitystatement-expectation',\n                            'valueCode': 'SHOULD'\n                        }\n                    ],\n                    'name': 'export',\n                    'definition': 'http://hl7.org/fhir/uv/bulkdata/OperationDefinition/export'\n                }\n            ]\n        }\n    ]\n}\n\n\n\n\n# For SMART Backend Auth, the token endpoint is published at .well-known/smart-configuration\nr = session.get(f'{server_url}/.well-known/smart-configuration')\nsmart_config = r.json()\n\nprint(smart_config)\n\n{\n    'token_endpoint': 'https://bulk-data.smarthealthit.org/auth/token',\n    'registration_endpoint': 'https://bulk-data.smarthealthit.org/auth/register',\n    'token_endpoint_auth_methods_supported': ['private_key_jwt'],\n    'token_endpoint_auth_signing_alg_values_supported': [\n        'HS256',\n        'HS384',\n        'HS512',\n        'RS256',\n        'RS384',\n        'RS512',\n        'ES256',\n        'ES384',\n        'ES512',\n        'PS256',\n        'PS384',\n        'PS512'\n    ],\n    'scopes_supported': [\n        'system/*.rs',\n        'system/Patient.rs',\n        'system/Encounter.rs',\n        'system/Condition.rs',\n        'system/Claim.rs',\n        'system/ExplanationOfBenefit.rs',\n        'system/Observation.rs',\n        'system/Immunization.rs',\n        'system/DiagnosticReport.rs',\n        'system/Procedure.rs',\n        'system/CareTeam.rs',\n        'system/CarePlan.rs',\n        'system/MedicationRequest.rs',\n        'system/AllergyIntolerance.rs',\n        'system/Device.rs',\n        'system/ImagingStudy.rs',\n        'system/Organization.rs',\n        'system/Practitioner.rs',\n        'system/DocumentReference.rs',\n        'system/Group.rs',\n        'system/*.read',\n        'system/Patient.read',\n        'system/Encounter.read',\n        'system/Condition.read',\n        'system/Claim.read',\n        'system/ExplanationOfBenefit.read',\n        'system/Observation.read',\n        'system/Immunization.read',\n        'system/DiagnosticReport.read',\n        'system/Procedure.read',\n        'system/CareTeam.read',\n        'system/CarePlan.read',\n        'system/MedicationRequest.read',\n        'system/AllergyIntolerance.read',\n        'system/Device.read',\n        'system/ImagingStudy.read',\n        'system/Organization.read',\n        'system/Practitioner.read',\n        'system/DocumentReference.read',\n        'system/Group.read'\n    ],\n    'capabilities': ['permission-v2', 'permission-v1', 'client-confidential-asymmetric']\n}\n\n\n\n\n# There are a number of important fields here, but for now the one we care most about is the token_endpoint\ntoken_endpoint = smart_config['token_endpoint']\n\n\n# Now to get a token, we create a JWT client assertion as follows:\nimport jwt\nimport datetime\n\nassertion = jwt.encode({\n        'iss': client_id,\n        'sub': client_id,\n        'aud': token_endpoint,\n        'exp': int((datetime.datetime.now() + datetime.timedelta(minutes=5)).timestamp())\n}, private_key, algorithm='RS384',\nheaders={\"kid\": key_id}) # kid required for smart bulk data server\n\n\n# And post it to the token endpont\nr = session.post(token_endpoint, data={\n    'scope': 'system/*.read',\n    'grant_type': 'client_credentials',\n    'client_assertion_type': 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer',\n    'client_assertion': assertion\n})\n\ntoken_response = r.json()\n\ntoken_response\n\n{'token_type': 'bearer',\n 'scope': 'system/*.read',\n 'expires_in': 300,\n 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYmVhcmVyIiwic2NvcGUiOiJzeXN0ZW0vKi5yZWFkIiwiZXhwaXJlc19pbiI6MzAwLCJpYXQiOjE2ODQ4NDQ0OTcsImV4cCI6MTY4NDg0NDc5N30.Fz5QcCl-DusftFOcgFtHRKUIFcXennLJI-hKPO8vm0k'}\n\n\nTwo important fields we need to keep track of are the token itself, and the expire time. Tokens are only valid for a certain amount of time, and once they expire we will need to fetch a new one via the same process as above. expires_in is in seconds from the current time.\n\ntoken = token_response['access_token']\nexpire_time = datetime.datetime.now() + datetime.timedelta(seconds=token_response['expires_in'])\n\n\n# Now to make this easier for ourselves, let's package this up into a function that we can call \n\ndef get_token():\n    global token, expire_time\n    if datetime.datetime.now() &lt; expire_time:\n        # the existing token is still valid so return it\n        return token\n    \n    assertion = jwt.encode({\n            'iss': client_id,\n            'sub': client_id,\n            'aud': token_endpoint,\n            'exp': int((datetime.datetime.now() + datetime.timedelta(minutes=5)).timestamp())\n    }, private_key, algorithm='RS384',\n    headers={\"kid\": key_id})\n\n    r = session.post(token_endpoint, data={\n        'scope': 'system/*.read',\n        'grant_type': 'client_credentials',\n        'client_assertion_type': 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer',\n        'client_assertion': assertion\n    })\n\n    token_response = r.json()\n    token = token_response['access_token']\n    expire_time = datetime.datetime.now() + datetime.timedelta(seconds=token_response['expires_in'])\n    \n    return token\n\n# now we can reference get_token() and it will automatically fetch a new one whenever needed"
  },
  {
    "objectID": "workshops/fhir-bulk-data/notebook.html#step-2-starting-checking-and-downloading-the-export",
    "href": "workshops/fhir-bulk-data/notebook.html#step-2-starting-checking-and-downloading-the-export",
    "title": "FHIR for Research Workshop - Bulk Data",
    "section": "Step 2: Starting, Checking, and Downloading the Export",
    "text": "Step 2: Starting, Checking, and Downloading the Export\n\n# Now we make the export request\nr = session.get(f'{server_url}/Patient/$export?_type=Patient,Condition', \n                headers={'Authorization': f'Bearer {get_token()}', \n                         'Accept': 'application/fhir+json', \n                         'Prefer': 'respond-async'})\n\nprint(r.headers)\n\n{'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Content-Location': \n'https://bulk-data.smarthealthit.org/fhir/bulkstatus/b575c0b438735478317a8350b2cc5552', 'Content-Type': \n'application/json; charset=utf-8', 'Content-Length': '644', 'Etag': 'W/\"284-+Rb1kGiUmlNav3GtsdCNxQbiFUc\"', 'Date': \n'Tue, 23 May 2023 12:21:37 GMT', 'Via': '1.1 vegur'}\n\n\n\n\ncheck_url = r.headers['Content-Location']\ncheck_url\n\n'https://bulk-data.smarthealthit.org/fhir/bulkstatus/b575c0b438735478317a8350b2cc5552'\n\n\n\n# Now we check the status in a loop\n\nfrom time import sleep\n\nwhile True:\n    r = session.get(check_url, headers={'Authorization': f'Bearer {get_token()}', 'Accept': 'application/fhir+json'})\n\n    # There are three possible options here: http://hl7.org/fhir/uv/bulkdata/export.html#bulk-data-status-request\n    # Error = 4xx or 5xx status code\n    # In-Progress = 202\n    # Complete = 200\n\n    if r.status_code == 200:\n        # complete\n        response = r.json()\n        print(response)\n        break\n\n    elif r.status_code == 202:\n        # in progress\n        print(r.headers)\n        \n        delay = r.headers['Retry-After']\n        \n        print(f\"Sleeping {delay} seconds before retrying\")\n        sleep(int(delay))\n\n    else:\n        # error\n        print(r.text)\n\n        break\n\n{'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'X-Progress': '1% complete, currenly \nprocessing Patient resources', 'Retry-After': '2', 'Date': 'Tue, 23 May 2023 12:21:37 GMT', 'Content-Length': '0', \n'Via': '1.1 vegur'}\n\n\n\nSleeping 2 seconds before retrying\n\n\n\n{'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'X-Progress': '21% complete, currenly \nprocessing Patient resources', 'Retry-After': '2', 'Date': 'Tue, 23 May 2023 12:21:39 GMT', 'Content-Length': '0', \n'Via': '1.1 vegur'}\n\n\n\nSleeping 2 seconds before retrying\n\n\n\n{'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'X-Progress': '42% complete, currenly \nprocessing Patient resources', 'Retry-After': '2', 'Date': 'Tue, 23 May 2023 12:21:42 GMT', 'Content-Length': '0', \n'Via': '1.1 vegur'}\n\n\n\nSleeping 2 seconds before retrying\n\n\n\n{'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'X-Progress': '63% complete, currenly \nprocessing Patient resources', 'Retry-After': '2', 'Date': 'Tue, 23 May 2023 12:21:44 GMT', 'Content-Length': '0', \n'Via': '1.1 vegur'}\n\n\n\nSleeping 2 seconds before retrying\n\n\n\n{'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'X-Progress': '83% complete, currenly \nprocessing Patient resources', 'Retry-After': '2', 'Date': 'Tue, 23 May 2023 12:21:46 GMT', 'Content-Length': '0', \n'Via': '1.1 vegur'}\n\n\n\nSleeping 2 seconds before retrying\n\n\n\n{\n    'transactionTime': '1684844497848',\n    'request': \n'https://bulk-data.smarthealthit.org/eyJlcnIiOiIiLCJwYWdlIjoxMDAwMCwiZHVyIjoxMCwidGx0IjoxNSwibSI6MSwic3R1Ijo0LCJkZW\nwiOjB9/fhir/Patient/$export?_type=Patient,Condition',\n    'requiresAccessToken': True,\n    'output': [\n        {\n            'type': 'Condition',\n            'count': 639,\n            'url': \n'https://bulk-data.smarthealthit.org/eyJpZCI6ImI1NzVjMGI0Mzg3MzU0NzgzMTdhODM1MGIyY2M1NTUyIiwib2Zmc2V0IjowLCJsaW1pdC\nI6NjM5LCJzZWN1cmUiOnRydWV9/fhir/bulkfiles/1.Condition.ndjson'\n        },\n        {\n            'type': 'Patient',\n            'count': 100,\n            'url': \n'https://bulk-data.smarthealthit.org/eyJpZCI6ImI1NzVjMGI0Mzg3MzU0NzgzMTdhODM1MGIyY2M1NTUyIiwib2Zmc2V0IjowLCJsaW1pdC\nI6MTAwLCJzZWN1cmUiOnRydWV9/fhir/bulkfiles/1.Patient.ndjson'\n        }\n    ],\n    'deleted': [],\n    'error': []\n}\n\n\n\n\noutput_files = response['output']\noutput_files\n\n[{'type': 'Condition',\n  'count': 639,\n  'url': 'https://bulk-data.smarthealthit.org/eyJpZCI6ImI1NzVjMGI0Mzg3MzU0NzgzMTdhODM1MGIyY2M1NTUyIiwib2Zmc2V0IjowLCJsaW1pdCI6NjM5LCJzZWN1cmUiOnRydWV9/fhir/bulkfiles/1.Condition.ndjson'},\n {'type': 'Patient',\n  'count': 100,\n  'url': 'https://bulk-data.smarthealthit.org/eyJpZCI6ImI1NzVjMGI0Mzg3MzU0NzgzMTdhODM1MGIyY2M1NTUyIiwib2Zmc2V0IjowLCJsaW1pdCI6MTAwLCJzZWN1cmUiOnRydWV9/fhir/bulkfiles/1.Patient.ndjson'}]\n\n\nWe can see that the reponse points us to one or more ndjson files per resource type. Now we can loop through the list and download each one. Each file is an NDJSON (Newline Delimited JSON) so that’s one resource per line. To make each step clear and distinct, we’ll keep a dict of { resourceType: [resources,...]} which we can process later.\n\nimport json\n\nresources_by_type = {}\n\nfor output_file in output_files:\n    download_url = output_file['url']\n    resource_type = output_file['type']\n    \n    r = session.get(download_url, headers={'Authorization': f'Bearer {get_token()}', \n                                           'Accept': 'application/fhir+json'})\n                                                   \n    ndjson = r.text.strip()\n    \n    if resource_type not in resources_by_type:\n        resources_by_type[resource_type] = []\n    \n    # NDJSON can't be parsed as a whole, we have to process it line-by-line\n    for line in ndjson.split('\\n'):\n        resource = json.loads(line)\n        resources_by_type[resource_type].append(resource)\n        \n\n# This is a large amount of JSON data, only uncomment this line if you care to review\n# print(resources_by_type)"
  },
  {
    "objectID": "workshops/fhir-bulk-data/notebook.html#step-3-converting-to-dataframes",
    "href": "workshops/fhir-bulk-data/notebook.html#step-3-converting-to-dataframes",
    "title": "FHIR for Research Workshop - Bulk Data",
    "section": "Step 3: Converting to DataFrames",
    "text": "Step 3: Converting to DataFrames\nFinally, let’s convert these into DataFrames.\nThe quick-and-dirty option is to use the Pandas json_normalize() function to parse a list of dicts into a DataFrame.\n📘 Read more about pandas.json_normalize\n\nimport pandas as pd\n\nresource_dfs = {}\n\nfor resource_type, resources in resources_by_type.items():\n    resource_dfs[resource_type] = pd.json_normalize(resources)\n\n# Now we can work with them by type:\n\nresource_dfs['Patient']\n    \n\n\n\n\n\n\n\n\nresourceType\nid\nextension\nidentifier\nname\ntelecom\ngender\nbirthDate\naddress\nmultipleBirthBoolean\ncommunication\ntext.status\ntext.div\nmaritalStatus.coding\nmaritalStatus.text\nmultipleBirthInteger\n\n\n\n\n0\nPatient\n6c5d9ca9-54d7-42f5-bfae-a7c19cd217f2\n[{'url': 'http://hl7.org/fhir/StructureDefinit...\n[{'system': 'https://github.com/synthetichealt...\n[{'use': 'official', 'family': 'Lemke', 'given...\n[{'system': 'phone', 'value': '555-532-1156', ...\nmale\n1965-01-13\n[{'extension': [{'url': 'http://hl7.org/fhir/S...\nFalse\n[{'language': {'coding': [{'system': 'urn:ietf...\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\n[{'system': 'http://terminology.hl7.org/CodeSy...\nM\nNaN\n\n\n1\nPatient\n58c297c4-d684-4677-8024-01131d93835e\n[{'url': 'http://hl7.org/fhir/StructureDefinit...\n[{'system': 'https://github.com/synthetichealt...\n[{'use': 'official', 'family': 'Wintheiser', '...\n[{'system': 'phone', 'value': '555-712-4709', ...\nfemale\n1971-04-05\n[{'extension': [{'url': 'http://hl7.org/fhir/S...\nFalse\n[{'language': {'coding': [{'system': 'urn:ietf...\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\n[{'system': 'http://terminology.hl7.org/CodeSy...\nM\nNaN\n\n\n2\nPatient\n538a9a4e-8437-47d3-8c01-1a17dca8f0be\n[{'url': 'http://hl7.org/fhir/StructureDefinit...\n[{'system': 'https://github.com/synthetichealt...\n[{'use': 'official', 'family': 'Alaniz', 'give...\n[{'system': 'phone', 'value': '555-446-6900', ...\nmale\n1923-03-24\n[{'extension': [{'url': 'http://hl7.org/fhir/S...\nFalse\n[{'language': {'coding': [{'system': 'urn:ietf...\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\n[{'system': 'http://terminology.hl7.org/CodeSy...\nM\nNaN\n\n\n3\nPatient\nc6c60742-8694-46e4-bb42-b00bf6d8b536\n[{'url': 'http://hl7.org/fhir/StructureDefinit...\n[{'system': 'https://github.com/synthetichealt...\n[{'use': 'official', 'family': 'Walsh', 'given...\n[{'system': 'phone', 'value': '555-436-4287', ...\nfemale\n1965-10-27\n[{'extension': [{'url': 'http://hl7.org/fhir/S...\nFalse\n[{'language': {'coding': [{'system': 'urn:ietf...\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\n[{'system': 'http://terminology.hl7.org/CodeSy...\nM\nNaN\n\n\n4\nPatient\nfbfec681-d357-4b28-b1d2-5db6434c7846\n[{'url': 'http://hl7.org/fhir/StructureDefinit...\n[{'system': 'https://github.com/synthetichealt...\n[{'use': 'official', 'family': 'Bednar', 'give...\n[{'system': 'phone', 'value': '555-405-4909', ...\nfemale\n1942-07-04\n[{'extension': [{'url': 'http://hl7.org/fhir/S...\nFalse\n[{'language': {'coding': [{'system': 'urn:ietf...\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\n[{'system': 'http://terminology.hl7.org/CodeSy...\nM\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n95\nPatient\n5efb1ac1-d29b-40a5-a3d1-2d682f10bfa7\n[{'url': 'http://hl7.org/fhir/StructureDefinit...\n[{'system': 'https://github.com/synthetichealt...\n[{'use': 'official', 'family': 'Schmeler', 'gi...\n[{'system': 'phone', 'value': '555-971-6300', ...\nmale\n1995-10-19\n[{'extension': [{'url': 'http://hl7.org/fhir/S...\nFalse\n[{'language': {'coding': [{'system': 'urn:ietf...\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\n[{'system': 'http://terminology.hl7.org/CodeSy...\nNever Married\nNaN\n\n\n96\nPatient\nc1981741-f90e-4077-9156-429a3c4c5ded\n[{'url': 'http://hl7.org/fhir/StructureDefinit...\n[{'system': 'https://github.com/synthetichealt...\n[{'use': 'official', 'family': 'Lubowitz', 'gi...\n[{'system': 'phone', 'value': '555-328-5229', ...\nmale\n1956-05-06\n[{'extension': [{'url': 'http://hl7.org/fhir/S...\nFalse\n[{'language': {'coding': [{'system': 'urn:ietf...\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\n[{'system': 'http://terminology.hl7.org/CodeSy...\nM\nNaN\n\n\n97\nPatient\nf98b23bf-4443-46d0-9eaf-563e767cf948\n[{'url': 'http://hl7.org/fhir/StructureDefinit...\n[{'system': 'https://github.com/synthetichealt...\n[{'use': 'official', 'family': 'Funk', 'given'...\n[{'system': 'phone', 'value': '555-497-7639', ...\nmale\n1966-02-07\n[{'extension': [{'url': 'http://hl7.org/fhir/S...\nFalse\n[{'language': {'coding': [{'system': 'urn:ietf...\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\n[{'system': 'http://terminology.hl7.org/CodeSy...\nM\nNaN\n\n\n98\nPatient\nc536dee9-9ef6-4807-ae20-9f1045c9c7d6\n[{'url': 'http://hl7.org/fhir/StructureDefinit...\n[{'system': 'https://github.com/synthetichealt...\n[{'use': 'official', 'family': 'Bergstrom', 'g...\n[{'system': 'phone', 'value': '555-845-1730', ...\nmale\n1990-11-18\n[{'extension': [{'url': 'http://hl7.org/fhir/S...\nFalse\n[{'language': {'coding': [{'system': 'urn:ietf...\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\n[{'system': 'http://terminology.hl7.org/CodeSy...\nS\nNaN\n\n\n99\nPatient\na845ead4-d9de-42eb-b4b5-eb21a8963578\n[{'url': 'http://hl7.org/fhir/StructureDefinit...\n[{'system': 'https://github.com/synthetichealt...\n[{'use': 'official', 'family': 'Pagac', 'given...\n[{'system': 'phone', 'value': '555-504-1379', ...\nfemale\n1968-04-20\n[{'extension': [{'url': 'http://hl7.org/fhir/S...\nFalse\n[{'language': {'coding': [{'system': 'urn:ietf...\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\n[{'system': 'http://terminology.hl7.org/CodeSy...\nS\nNaN\n\n\n\n\n100 rows × 16 columns\n\n\n\nThis works, but it’s clearly not ideal in how it handles nested fields. One way we can do a little better is with the flatten_json library: https://github.com/amirziai/flatten\n\nfrom flatten_json import flatten\n\nfor resource_type, resources in resources_by_type.items():\n    resource_dfs[resource_type] = pd.json_normalize(list(map(lambda r: flatten(r), resources)))\n\n# Now let's take another look\nresource_dfs['Patient']\n\n\n\n\n\n\n\n\nresourceType\nid\ntext_status\ntext_div\nextension_0_url\nextension_0_valueString\nextension_1_url\nextension_1_valueAddress_city\nextension_1_valueAddress_state\nextension_1_valueAddress_country\n...\nmultipleBirthBoolean\ncommunication_0_language_coding_0_system\ncommunication_0_language_coding_0_code\ncommunication_0_language_coding_0_display\ncommunication_0_language_text\nname_1_use\nname_1_family\nname_1_given_0\nname_1_prefix_0\nmultipleBirthInteger\n\n\n\n\n0\nPatient\n6c5d9ca9-54d7-42f5-bfae-a7c19cd217f2\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/StructureDefinition/patien...\nLettie Boyle\nhttp://hl7.org/fhir/StructureDefinition/patien...\nBoston\nMassachusetts\nUS\n...\nFalse\nurn:ietf:bcp:47\nen-US\nEnglish\nEnglish\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\nPatient\n58c297c4-d684-4677-8024-01131d93835e\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/StructureDefinition/patien...\nMarquetta Schamberger\nhttp://hl7.org/fhir/StructureDefinition/patien...\nMacau\nMacao Special Administrative Region of the Peo...\nCN\n...\nFalse\nurn:ietf:bcp:47\nzh\nChinese\nChinese\nmaiden\nHeathcote\nAleta\nMrs.\nNaN\n\n\n2\nPatient\n538a9a4e-8437-47d3-8c01-1a17dca8f0be\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/StructureDefinition/patien...\nPilar Orta\nhttp://hl7.org/fhir/StructureDefinition/patien...\nSan Jose\nSan Jose\nCR\n...\nFalse\nurn:ietf:bcp:47\nes\nSpanish\nSpanish\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\nPatient\nc6c60742-8694-46e4-bb42-b00bf6d8b536\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/StructureDefinition/patien...\nArvilla Haag\nhttp://hl7.org/fhir/StructureDefinition/patien...\nNorton\nMassachusetts\nUS\n...\nFalse\nurn:ietf:bcp:47\nen-US\nEnglish\nEnglish\nmaiden\nKuphal\nAlyce\nMrs.\nNaN\n\n\n4\nPatient\nfbfec681-d357-4b28-b1d2-5db6434c7846\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/StructureDefinition/patien...\nMarcelina Harber\nhttp://hl7.org/fhir/StructureDefinition/patien...\nBrockton\nMassachusetts\nUS\n...\nFalse\nurn:ietf:bcp:47\nen-US\nEnglish\nEnglish\nmaiden\nRunolfsson\nArnette\nMrs.\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n95\nPatient\n5efb1ac1-d29b-40a5-a3d1-2d682f10bfa7\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/StructureDefinition/patien...\nAllison Daugherty\nhttp://hl7.org/fhir/StructureDefinition/patien...\nBoston\nMassachusetts\nUS\n...\nFalse\nurn:ietf:bcp:47\nen-US\nEnglish\nEnglish\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n96\nPatient\nc1981741-f90e-4077-9156-429a3c4c5ded\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/StructureDefinition/patien...\nAntoinette Parker\nhttp://hl7.org/fhir/StructureDefinition/patien...\nMansfield\nMassachusetts\nUS\n...\nFalse\nurn:ietf:bcp:47\nen-US\nEnglish\nEnglish\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n97\nPatient\nf98b23bf-4443-46d0-9eaf-563e767cf948\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/StructureDefinition/patien...\nBarbar Windler\nhttp://hl7.org/fhir/StructureDefinition/patien...\nRandolph\nMassachusetts\nUS\n...\nFalse\nurn:ietf:bcp:47\nen-US\nEnglish\nEnglish\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n98\nPatient\nc536dee9-9ef6-4807-ae20-9f1045c9c7d6\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/StructureDefinition/patien...\nJuli Johns\nhttp://hl7.org/fhir/StructureDefinition/patien...\nHolyoke\nMassachusetts\nUS\n...\nFalse\nurn:ietf:bcp:47\nen-US\nEnglish\nEnglish\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n99\nPatient\na845ead4-d9de-42eb-b4b5-eb21a8963578\ngenerated\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Gene...\nhttp://hl7.org/fhir/StructureDefinition/patien...\nLanie Hyatt\nhttp://hl7.org/fhir/StructureDefinition/patien...\nMillis\nMassachusetts\nUS\n...\nFalse\nurn:ietf:bcp:47\nen-US\nEnglish\nEnglish\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n100 rows × 73 columns\n\n\n\n\n# Next, what if we know in advance we will only want certain fields? \n\n# https://github.com/beda-software/fhirpath-py\n\nimport fhirpathpy\n\nfhir_paths=[\n        [\"id\", \"identifier[0].value\"],\n        [\"gender\", \"gender\"],\n        [\"date_of_birth\", \"birthDate\"],\n        [\"marital_status\", \"maritalStatus.coding[0].code\"]\n    ]\n\nfor f in fhir_paths:\n     f[1] = fhirpathpy.compile(f[1])\n\nfor resource_type, resources in resources_by_type.items():\n    filtered_resources = []\n    \n    for resource in resources:\n        filtered_resource = {}\n        for f in fhir_paths:\n            fieldname = f[0]\n            func = f[1]\n            filtered_resource[fieldname] = func(resource)\n            \n            if isinstance(filtered_resource[fieldname], list) and len(filtered_resource[fieldname]) == 1:\n                filtered_resource[fieldname] = filtered_resource[fieldname][0]\n            \n        filtered_resources.append(filtered_resource)\n\n    resource_dfs[resource_type] = pd.json_normalize(list(map(lambda r: flatten(r), filtered_resources)))\n    \n\nresource_dfs['Patient']\n\n\n\n\n\n\n\n\nid\ngender\ndate_of_birth\nmarital_status\n\n\n\n\n0\n6c5d9ca9-54d7-42f5-bfae-a7c19cd217f2\nmale\n1965-01-13\nM\n\n\n1\n58c297c4-d684-4677-8024-01131d93835e\nfemale\n1971-04-05\nM\n\n\n2\n538a9a4e-8437-47d3-8c01-1a17dca8f0be\nmale\n1923-03-24\nM\n\n\n3\nc6c60742-8694-46e4-bb42-b00bf6d8b536\nfemale\n1965-10-27\nM\n\n\n4\nfbfec681-d357-4b28-b1d2-5db6434c7846\nfemale\n1942-07-04\nM\n\n\n...\n...\n...\n...\n...\n\n\n95\n5efb1ac1-d29b-40a5-a3d1-2d682f10bfa7\nmale\n1995-10-19\nS\n\n\n96\nc1981741-f90e-4077-9156-429a3c4c5ded\nmale\n1956-05-06\nM\n\n\n97\nf98b23bf-4443-46d0-9eaf-563e767cf948\nmale\n1966-02-07\nM\n\n\n98\nc536dee9-9ef6-4807-ae20-9f1045c9c7d6\nmale\n1990-11-18\nS\n\n\n99\na845ead4-d9de-42eb-b4b5-eb21a8963578\nfemale\n1968-04-20\nS\n\n\n\n\n100 rows × 4 columns"
  },
  {
    "objectID": "workshops/fhir-bulk-data/notebook.html#step-4-bringing-it-all-together",
    "href": "workshops/fhir-bulk-data/notebook.html#step-4-bringing-it-all-together",
    "title": "FHIR for Research Workshop - Bulk Data",
    "section": "Step 4: Bringing it all together",
    "text": "Step 4: Bringing it all together\nNow we have everything we need. Let’s bring everything together from the previous steps into one class with a clear entrypoint\n\nimport requests\nimport jwt\nimport datetime\nimport json\nimport fhirpathpy\nfrom flatten_json import flatten\n\n\n\nclass BulkDataFetcher:\n    def __init__(\n        self,\n        base_url: str,\n        client_id: str,\n        private_key: str,\n        key_id: str,\n        session = None\n    ):\n        self.base_url = base_url\n        self.client_id = client_id\n        self.private_key = private_key\n        self.key_id = key_id\n        \n        self.token = None\n        self.token_expire_time = None\n        \n        if session is None:\n            self.session = requests.Session()\n        else:\n            self.session = session\n            \n        r = self.session.get(f'{base_url}/.well-known/smart-configuration')\n        smart_config = r.json()\n        self.token_endpoint = smart_config['token_endpoint']\n        \n        self.resource_types = []\n        self.fhir_paths = {}\n        \n        \n    def get_token(self):\n        if self.token and datetime.datetime.now() &lt; self.expire_time:\n            # the existing token is still valid so \n            return self.token\n\n        assertion = jwt.encode({\n                'iss': self.client_id,\n                'sub': self.client_id,\n                'aud': self.token_endpoint,\n                'exp': int((datetime.datetime.now() + datetime.timedelta(minutes=5)).timestamp())\n        }, self.private_key, algorithm='RS384',\n        headers={\"kid\": key_id})\n\n        r = self.session.post(self.token_endpoint, data={\n            'scope': 'system/*.read',\n            'grant_type': 'client_credentials',\n            'client_assertion_type': 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer',\n            'client_assertion': assertion\n        })\n\n        token_response = r.json()\n        self.token = token_response['access_token']\n        self.expire_time = datetime.datetime.now() + datetime.timedelta(seconds=token_response['expires_in'])\n\n        return self.token\n    \n    def add_resource_type(self, resource_type: str, fhir_paths = None):\n        self.resource_types.append(resource_type)\n        if fhir_paths:\n            # fhir_paths=[\n            #    (\"id\", \"identifier[0].value\"),\n            #    (\"marital_status\", \"maritalStatus.coding[0].code\")\n            # ]\n            compiled_fhir_paths = [(f[0], fhirpathpy.compile(f[1])) for f in fhir_paths]\n            self.fhir_paths[resource_type] = compiled_fhir_paths\n            \n    def _invoke_request(self):\n        types = ','.join(self.resource_types)\n        r = self.session.get(f'{self.base_url}/Patient/$export?_type={types}', headers={'Authorization': f'Bearer {self.get_token()}', 'Accept': 'application/fhir+json', 'Prefer': 'respond-async'})\n\n        self.check_url = r.headers['Content-Location']\n        return self.check_url\n    \n    def _wait_until_ready(self):\n        while True:\n            r = self.session.get(self.check_url, headers={'Authorization': f'Bearer {self.get_token()}', 'Accept': 'application/fhir+json'})\n\n            # There are three possible options here: http://hl7.org/fhir/uv/bulkdata/export.html#bulk-data-status-request\n            # Error = 4xx or 5xx status code\n            # In-Progress = 202\n            # Complete = 200\n\n            if r.status_code == 200:\n                # complete\n                response = r.json()\n                self.output_files = response['output']\n                return self.output_files\n\n            elif r.status_code == 202:\n                # in progress\n                delay = r.headers['Retry-After']\n\n                sleep(int(delay))\n\n            else:\n                raise RuntimeError(r.text)\n\n    def get_dataframe(self):\n        self._invoke_request()\n        self._wait_until_ready()\n        \n        resources_by_type = {}\n\n        for output_file in self.output_files:\n            download_url = output_file['url']\n            resource_type = output_file['type']\n\n            r = self.session.get(download_url, headers={'Authorization': f'Bearer {get_token()}', 'Accept': 'application/fhir+json'})\n\n            ndjson = r.text.strip()\n\n            if resource_type not in resources_by_type:\n                resources_by_type[resource_type] = []\n\n            for line in ndjson.split('\\n'):\n                resource = json.loads(line)\n                \n                if resource_type in self.fhir_paths:\n                    fhir_paths = self.fhir_paths[resource_type]\n                    filtered_resource = {}\n                    for f in fhir_paths:\n                        fieldname = f[0]\n                        func = f[1]\n                        filtered_resource[fieldname] = func(resource)\n\n                        if isinstance(filtered_resource[fieldname], list) and len(filtered_resource[fieldname]) == 1:\n                            filtered_resource[fieldname] = filtered_resource[fieldname][0]\n                    resource = filtered_resource\n\n                resources_by_type[resource_type].append(resource)\n        \n        dfs = {}\n        \n        for resource_type, resources in resources_by_type.items():\n            dfs[resource_type] = pd.json_normalize(list(map(lambda r: flatten(r), resources)))\n        \n        return dfs\n\n\n# And then to invoke it:\n\nfetcher = BulkDataFetcher(server_url, client_id, private_key, key_id, session)                \n\nfetcher.add_resource_type('Patient', [\n        (\"id\", \"identifier[0].value\"),\n        (\"gender\", \"gender\"),\n        (\"date_of_birth\", \"birthDate\"),\n        (\"marital_status\", \"maritalStatus.coding[0].code\")\n])\n\nfetcher.add_resource_type('Condition')\n\ndfs = fetcher.get_dataframe()\n\ndfs['Patient']\n\n\n\n\n\n\n\n\nid\ngender\ndate_of_birth\nmarital_status\n\n\n\n\n0\n6c5d9ca9-54d7-42f5-bfae-a7c19cd217f2\nmale\n1965-01-13\nM\n\n\n1\n58c297c4-d684-4677-8024-01131d93835e\nfemale\n1971-04-05\nM\n\n\n2\n538a9a4e-8437-47d3-8c01-1a17dca8f0be\nmale\n1923-03-24\nM\n\n\n3\nc6c60742-8694-46e4-bb42-b00bf6d8b536\nfemale\n1965-10-27\nM\n\n\n4\nfbfec681-d357-4b28-b1d2-5db6434c7846\nfemale\n1942-07-04\nM\n\n\n...\n...\n...\n...\n...\n\n\n95\n5efb1ac1-d29b-40a5-a3d1-2d682f10bfa7\nmale\n1995-10-19\nS\n\n\n96\nc1981741-f90e-4077-9156-429a3c4c5ded\nmale\n1956-05-06\nM\n\n\n97\nf98b23bf-4443-46d0-9eaf-563e767cf948\nmale\n1966-02-07\nM\n\n\n98\nc536dee9-9ef6-4807-ae20-9f1045c9c7d6\nmale\n1990-11-18\nS\n\n\n99\na845ead4-d9de-42eb-b4b5-eb21a8963578\nfemale\n1968-04-20\nS\n\n\n\n\n100 rows × 4 columns\n\n\n\n\ndfs['Condition']\n\n\n\n\n\n\n\n\nresourceType\nid\nclinicalStatus_coding_0_system\nclinicalStatus_coding_0_code\nverificationStatus_coding_0_system\nverificationStatus_coding_0_code\ncode_coding_0_system\ncode_coding_0_code\ncode_coding_0_display\ncode_text\nsubject_reference\nencounter_reference\nonsetDateTime\nrecordedDate\nabatementDateTime\n\n\n\n\n0\nCondition\na5a38601-b6fe-46b4-a67e-cde9d5957dde\nhttp://terminology.hl7.org/CodeSystem/conditio...\nactive\nhttp://terminology.hl7.org/CodeSystem/conditio...\nconfirmed\nhttp://snomed.info/sct\n40055000\nChronic sinusitis (disorder)\nChronic sinusitis (disorder)\nPatient/6c5d9ca9-54d7-42f5-bfae-a7c19cd217f2\nEncounter/17b801ac-58e3-4f6b-8b48-8e33f3a36086\n1985-06-18T17:30:49-04:00\n1985-06-18T17:30:49-04:00\nNaN\n\n\n1\nCondition\n8f818ad4-c292-47e8-8d99-c4c54174b671\nhttp://terminology.hl7.org/CodeSystem/conditio...\nactive\nhttp://terminology.hl7.org/CodeSystem/conditio...\nconfirmed\nhttp://snomed.info/sct\n162864005\nBody mass index 30+ - obesity (finding)\nBody mass index 30+ - obesity (finding)\nPatient/6c5d9ca9-54d7-42f5-bfae-a7c19cd217f2\nEncounter/0953dd44-90bb-4805-badd-169a761a6ab3\n2005-01-19T16:30:49-05:00\n2005-01-19T16:30:49-05:00\nNaN\n\n\n2\nCondition\n65d9d5f2-a772-4586-932f-df1f2ce1a863\nhttp://terminology.hl7.org/CodeSystem/conditio...\nactive\nhttp://terminology.hl7.org/CodeSystem/conditio...\nconfirmed\nhttp://snomed.info/sct\n15777000\nPrediabetes\nPrediabetes\nPatient/6c5d9ca9-54d7-42f5-bfae-a7c19cd217f2\nEncounter/d4e1370a-a679-4570-a3dc-e4f7ac847512\n2013-02-06T16:30:49-05:00\n2013-02-06T16:30:49-05:00\nNaN\n\n\n3\nCondition\n77ac8342-6950-4302-a303-efba12e06785\nhttp://terminology.hl7.org/CodeSystem/conditio...\nresolved\nhttp://terminology.hl7.org/CodeSystem/conditio...\nconfirmed\nhttp://snomed.info/sct\n68496003\nPolyp of colon\nPolyp of colon\nPatient/6c5d9ca9-54d7-42f5-bfae-a7c19cd217f2\nEncounter/58ad433b-3707-4d40-9b63-2a803b4913bd\n2015-01-14T16:30:49-05:00\n2015-01-14T16:30:49-05:00\n2017-05-03T17:30:49-04:00\n\n\n4\nCondition\n6514ab0c-bc64-4e1b-aa61-b97d27d72bc7\nhttp://terminology.hl7.org/CodeSystem/conditio...\nactive\nhttp://terminology.hl7.org/CodeSystem/conditio...\nconfirmed\nhttp://snomed.info/sct\n271737000\nAnemia (disorder)\nAnemia (disorder)\nPatient/6c5d9ca9-54d7-42f5-bfae-a7c19cd217f2\nEncounter/58ad433b-3707-4d40-9b63-2a803b4913bd\n2015-01-14T16:30:49-05:00\n2015-01-14T16:30:49-05:00\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n634\nCondition\nab051f6c-4298-407b-9315-2322ce913539\nhttp://terminology.hl7.org/CodeSystem/conditio...\nactive\nhttp://terminology.hl7.org/CodeSystem/conditio...\nconfirmed\nhttp://snomed.info/sct\n162864005\nBody mass index 30+ - obesity (finding)\nBody mass index 30+ - obesity (finding)\nPatient/a845ead4-d9de-42eb-b4b5-eb21a8963578\nEncounter/c5ed8aed-2b7e-4630-bd1d-ac5090967edc\n2014-11-22T15:43:42-05:00\n2014-11-22T15:43:42-05:00\nNaN\n\n\n635\nCondition\n76c1f07a-f8f2-4705-aa80-5f7a25d7c651\nhttp://terminology.hl7.org/CodeSystem/conditio...\nresolved\nhttp://terminology.hl7.org/CodeSystem/conditio...\nconfirmed\nhttp://snomed.info/sct\n39848009\nWhiplash injury to neck\nWhiplash injury to neck\nPatient/a845ead4-d9de-42eb-b4b5-eb21a8963578\nEncounter/9c8b41dd-d6fd-4691-ae46-01b47992dd8d\n2015-07-13T16:43:42-04:00\n2015-07-13T16:43:42-04:00\n2015-08-10T16:43:42-04:00\n\n\n636\nCondition\nb9a078eb-bb83-49ed-b4ed-633d1445356d\nhttp://terminology.hl7.org/CodeSystem/conditio...\nresolved\nhttp://terminology.hl7.org/CodeSystem/conditio...\nconfirmed\nhttp://snomed.info/sct\n70704007\nSprain of wrist\nSprain of wrist\nPatient/a845ead4-d9de-42eb-b4b5-eb21a8963578\nEncounter/f044f05a-8433-4952-926d-dd8e2b4ee44e\n2018-07-25T16:43:42-04:00\n2018-07-25T16:43:42-04:00\n2018-08-15T16:43:42-04:00\n\n\n637\nCondition\n0fe427ce-7ea1-4409-8de1-3879f9dc56bb\nhttp://terminology.hl7.org/CodeSystem/conditio...\nresolved\nhttp://terminology.hl7.org/CodeSystem/conditio...\nconfirmed\nhttp://snomed.info/sct\n444814009\nViral sinusitis (disorder)\nViral sinusitis (disorder)\nPatient/a845ead4-d9de-42eb-b4b5-eb21a8963578\nEncounter/9100e9aa-1206-403b-b2bf-b75ac23991bd\n2018-09-26T16:43:42-04:00\n2018-09-26T16:43:42-04:00\n2018-10-17T16:43:42-04:00\n\n\n638\nCondition\n88f3f41a-68ec-46dd-8d44-9178d3872220\nhttp://terminology.hl7.org/CodeSystem/conditio...\nresolved\nhttp://terminology.hl7.org/CodeSystem/conditio...\nconfirmed\nhttp://snomed.info/sct\n72892002\nNormal pregnancy\nNormal pregnancy\nPatient/a845ead4-d9de-42eb-b4b5-eb21a8963578\nEncounter/2d975caf-e6bf-43c2-8778-ea293df1f255\n2018-12-22T15:43:42-05:00\n2018-12-22T15:43:42-05:00\n2019-07-27T16:43:42-04:00\n\n\n\n\n639 rows × 15 columns"
  },
  {
    "objectID": "workshops/fhir-bulk-data/notebook.html#summary",
    "href": "workshops/fhir-bulk-data/notebook.html#summary",
    "title": "FHIR for Research Workshop - Bulk Data",
    "section": "Summary",
    "text": "Summary\nThrough this exercise we built a reusable tool to connect to a FHIR server with Bulk Data capabilities, export a set of resource types, and convert that data into DataFrames for analysis."
  }
]