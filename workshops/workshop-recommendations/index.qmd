---
title: Workshop Recommendations

number-sections: false
---

If you are interested in running your own workshop, the following recommendations may be useful. These are based on ODSS's experience conducting the [FHIR Bulk Data Access](../bulk-data/index.qmd) and [SMART on FHIR](../smart-on-fhir/index.qmd) workshops.

## Slides

These slides summarize the content found below.

```{=html}
<iframe style="border: 3px solid #dee2e6; width: 100%; height: 475px;" src="slides.html"></iframe>
```

### Other slide formats

-   [Printable web page](slides.html?print-pdf)
-   Accessible PDF

------------------------------------------------------------------------

## Overview

### Intended audience

-   Instructors involved with the design and implementation of FHIR for research-related training.

### Learning objectives

1.  Identify existing FHIR for research capacity-building resources

2.  Understand the process for re-using existing resources for future capacity-building activities

3.  Apply recommendations and best practices from past NIH workshops to future workshops

## Existing capacity-building resource permalinks

**Note:** Permalinks below are provided by purl.org, which is a service run by the Internet Archive for persistent URLs that can be updated if the actual URL changes. This is helpful to avoid dead links in webinar videos.

Existing resources include:

1.  FHIR for Research documentation website (i.e., this website)

    -   Website permalink:\[\^purl\] <https://purl.org/fhir-for-research/web>

    -   GitHub permalink: <https://purl.org/fhir-for-research/github>

2.  Webinars

    -   Introduction to FHIR for Research: <https://purl.org/fhir-for-research/webinars/intro>

    -   FHIR Bulk Data Introduction: <https://purl.org/fhir-for-research/webinars/bulk-data>

3.  Hands-on workshops

    -   FHIR Bulk Data: <https://purl.org/fhir-for-research/workshops/bulk-data>

    -   SMART on FHIR: <https://purl.org/fhir-for-research/workshops/smart-on-fhir>

    -   More on FHIR API programming: <https://datascience.nih.gov/fhir-initiatives/researchers-training>

## About this website

The content on this website is broken up into self-contained "modules" in the following sections:

1.  [Overview](../../sections/overview.qmd)
    1.  FHIR for Research
    2.  SMART on FHIR
    3.  Data Modeling in FHIR
2.  [Working with FHIR Data](../../sections/working-with-data.qmd)
    1.  Tabular Analysis
    2.  REDCap
    3.  FHIR Bulk Data
3.  [Advanced Topics](../../sections/advanced-topics.qmd)
    1.  Synthetic Data & FHIR Testing Servers
    2.  Other Topics

This website is generated from [source code](https://purl.org/fhir-for-research/github) using [Quarto](https://quarto.org%3E):

-   Quarto is a tool for generating static documentation websites that include R or Python code
-   It's made by Posit (the company that makes RStudio)
-   Narrative content is written in [Markdown](https://quarto.org/docs/authoring/markdown-basics.html)

More information about editing, modifying, or reusing content from this website is [available here](../../contribute.qmd).

## Workshop best practices

Workshops are a useful approach to help attendees quickly climb the learning curve for a technical topic. They typically include a combination of lecture and hands-on participation. We recommend pairing live workshops with with written documentation (like this website) that participants can refer to later.

## Capability assessments

A capability assessment is a structured approach for identifying the current level of understanding and skill sets relating to a topic. This approach was used to inform the content in the self-paced learning resources, webinars, and workshops on this site.

A capability assessment may help you adapt existing content to meet the needs and interests of your target audience.

### Recommendations

1.  Select a representative sample of people to connect with. Bear in mind that current FHIR capabilities and future needs may differ substantially across organizations.

    Similarly, including a variety of roles in the assessment will ensure that content can support different roles. It may be helpful to connect with people that hold the following roles to build a well-rounded picture of what the capabilities and needs in a FHIR for Research workshop:

    -   Investigators/Researchers
    -   Research leaders
    -   Informaticists
    -   Software Engineers
    -   Clinician Scientists/Trainees

    (These are the [roles](../../roles.qmd) we considered when developing the content on this website.)

2.  Use a variety of outreach methods. The capability assessment that informed this website used unstructured listening sessions and surveys, which allowed us to capture perspectives from different roles across multiple organizations.

3.  Adapt existing content in response to the observations. Throughout the outreach process, identify common themes and observations from your discussions, surveys, and/or listening sessions. Based on the observations, consider adapting the existing workshops to fit the needs of your group of researchers. Examples of useful adaptations may include:

    -   Identifying relevant FHIR resources to export in the FHIR Bulk Data workshop based on local researcher needs and EHR capabilities.
    -   Aggregate specific data elements in the SMART on FHIR Applications workshop that are relevant to research topics.

4.  Meet participants at their level of interest and engagement. Not all training participants will need the same level of knowledge about FHIR, or other technology used to work with FHIR APIs and data.

    Note that the existing content on this website was designed to be approachable for people with all levels of technical expertise. Content is generally organized from least-to-most technically complex to provide an "on-ramp" for a less experienced audience. However, modifications may need to be made to tailor to your specific audience.

### Getting started with a capability assessment

We used roughly the following steps for the capability assessment that informed this website:

-   Identify interviewees
-   Set-up meetings with interviewees
-   Write survey questions if using a written format or structured interview. The [capability assessment questions](capability-assessment-survey.qmd) used for developing this course content are available as a guide
-   Hold conversations with previously identified interviewees
-   Aggregate observations from conversations
-   Reach back to interviewees with follow-up questions if necessary
-   Adapt existing resources to support the technical needs and research interests identified in the prior conversations and surveys

## Course development

Using a curriculum development conceptual model may be useful when developing new modules or workshops. Two common curriculum development models, ADDIE and SAM, are summarized below:

### ADDIE

[Analysis, Design, Development, Implementation, and Evaluation (ADDIE)](https://courses.lumenlearning.com/wm-humanresourcesmgmt/chapter/the-addie-model/) is a cyclical model for instructional design and educational program development.

The model consists of five stages:

-	Analysis: Assess the current level of understanding to identify the performance gap. Curriculum developers determine what someone or a group already knows about a specific topic, their experience with the subject, and what resources are available.
-	Design: Craft learning objectives that are specific to the course content and helpful tools for learners to gauge their understanding throughout the course.
-	Development: Create course content that reflects the learning objectives. This should be an iterative process that incorporates regular feedback from learners and instructors.
-	Implementation: Determine where the course will be held, in what format, what materials will be needed, and how they will be used.
-	Evaluation: Use the learning objectives from the second stage to evaluate the course. Consider assessing participant satisfaction, learning, and performance when comparing the learning objectives to the outcomes.

### SAM

The [Successive Approximation Model (SAM)](https://dli.kennesaw.edu/resources/idmodels/sam.php) is another framework used in course development. Compared to ADDIE, SAM emphasizes smaller development cycles that incorporate feedback earlier in the process.

The model is composed of three phases:

-	Preparation: Begin by gathering all the information and background that is required for the project. Creators brainstorm, sketch, and prototype to develop course material. Many different stakeholders (e.g., colleagues, advisers, students) should be involved with this phase.
-	Iterative Design: Once creators have agreed on an idea and developed a prototype, like a curriculum, they share their work. They should incorporate edits and iterate on the design process.
-	Iterative Development: Lastly, the creators can implement their product. Once it has been used, the creators can cycle back through the phases for continued improvements.

## Workshop best practices

-   Tailor technical prerequisites to the anticipated audience
    -   For example, our SMART on FHIR workshop requires basic HTML and JavaScript experience for hands-on participation
    -   Use the pre-survey to verify audience technical skills
-   Provide learning objectives - <https://tips.uark.edu/using-blooms-taxonomy> is helpful
-   Provide an "onramp" introducing the topic at the beginning so less technical participants can still get value from the beginning
    -   In general, order content from least to most technical
    -   Consider a mini-webinar introduction
    -   Verbally identify the "drop points" where people who are not interested in the technical content can safely leave
-   Provide a walk-through to introduce hands-on participation
    -   Provide sample code/template that participants can run themselves
    -   Consider having the presenter fill in the sample code/template live, or give participants time to work themselves and ask questions
-   Keep the total length under 3 hours
    -   Consider 1-2 hours of content, and an optional "lab" hour if there is substantial hands-on content to allow participants to work independently and ask questions
    -   Include 5 minute breaks every hour
-   Plan for "preflight" if technical setup is necessary
    -   Strategize to reduce setup as much as possible (e.g., use cloud Jupyter environment rather than requiring participants to run it locally -- more on this below)
-   Include at least one TA to help with technical issues and questions during the workshop
    -   For virtual workshops, use breakout rooms if participants need 1:1 help
-   Require registration to attend
    -   Allows for monitoring and adjustment of outreach strategy if the desired mix of people don't initially sign up
    -   Start registration at least 2 weeks ahead of the event
    -   Be clear about the prerequisites, and whether technical skills are required for some/all of the workshop

### Accessibility

-   Use Zoom local recording (or similar) to record screen and audio
-   Share recording with subtitles for accessibility
    -   Modern transcription applications like [MacWhisper](https://goodsnooze.gumroad.com/l/macwhisper) can generate subtitles that are quite accurate, requiring fairly minimal manual editing
    -   Subtitles can be in a .srt "sidecar" file -- this is a plain text file that can be easily edited by hand
-   Provide slides and other materials on a single website at the time of the event
    -   e.g., <https://purl.org/fhir-for-research/workshops/bulk-data>
    -   Consider "upstreaming" any materials to the main open source GitHub repository
-   Use URLs in slides that can be updated later if the website changes (e.g. from <https://purl.org>) to avoid broken links in video recordings

## Environment & data

### Compute

-   If possible, provide a cloud compute environment with dependencies pre-installed

    -   This will save on setup time and avoid participants getting stuck on technical issues during the workshop

-   Run on your own server:

    -   **Python/Jupyter:** <https://tljh.jupyter.org> for up to 100 users

    -   **R/RStudio Server:** <https://posit.co/download/rstudio-server/>

-   No server required:

    ```
    -   Free, some additional complexity: <https://mybinder.org>

    -   \$15/month, more reliable:\
        <https://posit.cloud/plans/instructor?option=instructor>
    ```

### Running a server

-   Typically memory is the main constraint, which scales linearly with the number of simultaneous users

    -   Our FHIR Bulk Data workshop using JupyterHub (via TLJH) required around 600MB/user minimum

    -   Run your code ahead of time to estimate memory needs

-   CPU usage will likely be low unless your workshop includes a lot of CPU-constrained code (e.g., training machine learning models)

-   TLJH: <https://tljh.jupyter.org/en/latest/howto/admin/resource-estimation.html>

-   NIH-funded researchers may take advantage of the STRIDES Initiative for cloud computing. For more information, visit https://datascience.nih.gov/strides

### Synthetic data

-   Using synthetic data avoids privacy issues with patient data

-   <https://synthea.mitre.org> provides synthetic data in FHIR format

-   <https://purl.org/fhir-for-research/synthea> provides more information on customizing Synthea for your specific use case

### FHIR test server

-   Workshops that use the FHIR API will need a test server

-   Options for this:

    -   <https://sandbox.logicahealth.org>: free test server with both open and authenticated endpoints, as well as SMART on FHIR and CDS Hooks support

        -   Allows you to bring your own data

    -   <https://launch.smarthealthit.org> for SMART on FHIR testing

    -   <https://bulk-data.smarthealthit.org> for FHIR Bulk Data testing

    -   <https://hapifhir.io> if you want to run your own FHIR server

        -   Or use their public sandbox: <http://hapi.fhir.org>

## Working with Revealjs slides

-   Quarto supports three different formats for generating slides
-   We use Revealjs: <https://quarto.org/docs/presentations/revealjs/>
    -   Especially good for slides that include code
    -   For virtual workshops, screen sharing a single browser window is easier than switching between applications
    -   Creating PDFs of Revealjs slides
        -   <https://github.com/astefanutti/decktape> is a command line tool for converting HTML slides (including Revealjs) into PDF
        -   DeckTape-generated PDFs are not accessible by default

## Sharing accessible slides

-   PowerPoint and PDF format slides are not by default accessible
-   [Microsoft guidance for making accessible PowerPoint files](https://support.microsoft.com/en-us/office/make-your-powerpoint-presentations-accessible-to-people-with-disabilities-6f7772b2-2f33-4bd2-8ca7-dae3b2b3ef25)
-   <https://pdfua.foundation/en/> provides a tool for checking PDF accessibility
-   If you generate a PDF from PowerPoint slides, use [these instructions](https://support.microsoft.com/en-au/office/create-accessible-pdfs-064625e0-56ea-4e16-ad71-3aa33bb4b7ed) to add accessibility tags to the PDF

## Mermaidjs

-   Download from web page: <http://nytimes.github.io/svg-crowbar/>

### Accessibility

To add an accessibility title to a Mermaid diagram, add `accTitle` like below:

    ```{mermaid}
    sequenceDiagram
        accTitle: Diagram showing the workflow for a SMART on FHIR EHR launch
        ...
    ```
